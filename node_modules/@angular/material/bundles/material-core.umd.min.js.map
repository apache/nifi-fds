{"version":3,"file":"material-core.umd.min.js","sources":["../../src/material/core/month-constants.ts","../../node_modules/tslib/tslib.es6.js","../../src/material/core/common-behaviors/common-module.ts","../../src/material/core/common-behaviors/disabled.ts","../../src/material/core/common-behaviors/color.ts","../../src/material/core/common-behaviors/disable-ripple.ts","../../src/material/core/common-behaviors/tabindex.ts","../../src/material/core/common-behaviors/error-state.ts","../../src/material/core/common-behaviors/initialized.ts","../../src/material/core/datetime/date-adapter.ts","../../src/material/core/datetime/native-date-adapter.ts","../../src/material/core/line/line.ts","../../src/material/core/ripple/ripple-renderer.ts","../../src/material/core/option/option.ts","../../src/material/core/version.ts","../../src/material/core/animation/animation.ts","../../src/material/core/datetime/date-formats.ts","../../src/material/core/datetime/native-date-formats.ts","../../src/material/core/datetime/index.ts","../../src/material/core/error/error-options.ts","../../src/material/core/gestures/gesture-config.ts","../../src/material/core/ripple/ripple-ref.ts","../../src/material/core/ripple/ripple.ts","../../src/material/core/ripple/index.ts","../../src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/material/core/selection/index.ts","../../src/material/core/option/optgroup.ts","../../src/material/core/option/index.ts","../../src/material/core/label/label-options.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n  OCT = 9, NOV = 10, DEC = 11;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode, Version} from '@angular/core';\nimport {HammerLoader, HAMMER_LOADER} from '@angular/platform-browser';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {VERSION as CDK_VERSION} from '@angular/cdk';\n\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\nconst VERSION = new Version('8.1.0');\n\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n\n/** @docs-private */\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): boolean {\n  return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Whether we've already checked for HammerJs availability. */\n  private _hasCheckedHammer = false;\n\n  /** Reference to the global `document` object. */\n  private _document = typeof document === 'object' && document ? document : null;\n\n  /** Reference to the global 'window' object. */\n  private _window = typeof window === 'object' && window ? window : null;\n\n  constructor(\n    @Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean,\n    @Optional() @Inject(HAMMER_LOADER) private _hammerLoader?: HammerLoader) {\n\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._checkCdkVersionMatch();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n  /** Whether any sanity checks are enabled */\n  private _areChecksEnabled(): boolean {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    const window = this._window as any;\n    return window && (window.__karma__ || window.jasmine);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    if (this._document && !this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n\n    const testElement = this._document.createElement('div');\n\n    testElement.classList.add('mat-theme-loaded-marker');\n    this._document.body.appendChild(testElement);\n\n    const computedStyle = getComputedStyle(testElement);\n\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn(\n        'Could not find Angular Material core theme. Most Material ' +\n        'components may not work as expected. For more info refer ' +\n        'to the theming guide: https://material.angular.io/guide/theming'\n      );\n    }\n\n    this._document.body.removeChild(testElement);\n  }\n\n  /** Checks whether the material version matches the cdk version */\n  private _checkCdkVersionMatch(): void {\n    if (VERSION.full !== CDK_VERSION.full) {\n      console.warn(\n          'The Angular Material version (' + VERSION.full + ') does not match ' +\n          'the Angular CDK version (' + CDK_VERSION.full + ').\\n' +\n          'Please ensure the versions of these two packages exactly match.'\n      );\n    }\n  }\n\n  /** Checks whether HammerJS is available. */\n  _checkHammerIsAvailable(): void {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n\n    if (this._areChecksEnabled() && !(this._window as any)['Hammer'] && !this._hammerLoader) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T, defaultColor?: ThemePalette): CanColorCtor & T {\n  return class extends base {\n    private _color: ThemePalette;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  /** Whether ripples are disabled. */\n  disableRipple: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableRippleCtor = Constructor<CanDisableRipple>;\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): CanDisableRippleCtor & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {Constructor} from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState(): void;\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: CanUpdateErrorStateCtor & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField` needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Subscriber} from 'rxjs';\nimport {Constructor} from './constructor';\n\n\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * @docs-private\n */\nexport interface HasInitialized {\n  /** Stream that emits once during the directive/component's ngOnInit. */\n  initialized: Observable<void>;\n\n  /**\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n   * the directive has been initialized.\n   * @docs-private\n   */\n  _markInitialized: () => void;\n}\n\n/** @docs-private */\nexport type HasInitializedCtor = Constructor<HasInitialized>;\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\n    HasInitializedCtor & T {\n  return class extends base {\n    /** Whether this directive has been marked as initialized. */\n    _isInitialized = false;\n\n    /**\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\n     * not expect to be populated after.\n     */\n    _pendingSubscribers: Subscriber<void>[] | null = [];\n\n    /**\n     * Observable stream that emits when the directive initializes. If already initialized, the\n     * subscriber is stored to be notified once _markInitialized is called.\n     */\n    initialized = new Observable<void>(subscriber => {\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n      // when _markInitialized is called.\n      if (this._isInitialized) {\n        this._notifySubscriber(subscriber);\n      } else {\n        this._pendingSubscribers!.push(subscriber);\n      }\n    });\n\n    constructor(...args: any[]) { super(...args); }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized(): void {\n      if (this._isInitialized) {\n        throw Error('This directive has already been marked as initialized and ' +\n            'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber: Subscriber<void>): void {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges = new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {startWith} from 'rxjs/operators';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport function setLines(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({length}) => {\n    setClass(element, 'mat-2-line', false);\n    setClass(element, 'mat-3-line', false);\n    setClass(element, 'mat-multi-line', false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `mat-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `mat-multi-line`, true);\n    }\n  });\n}\n\n/** Adds or removes a class from an element. */\nfunction setClass(element: ElementRef<HTMLElement>, className: string, isAdd: boolean): void {\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\nexport class MatLineSetter {\n  constructor(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n    setLines(lines, element);\n  }\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {RippleRef, RippleState} from './ripple-ref';\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  terminateOnPointerUp?: boolean;\n};\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * @docs-private\n */\nexport interface RippleTarget {\n  /** Configuration for ripples that are launched on pointer down. */\n  rippleConfig: RippleConfig;\n  /** Whether ripples on pointer down should be disabled. */\n  rippleDisabled: boolean;\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer {\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Events to be registered on the trigger element. */\n  private _triggerEvents = new Map<string, any>();\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Latest non-persistent ripple that was triggered. */\n  private _mostRecentTransientRipple: RippleRef | null;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /**\n   * Cached dimensions of the ripple container. Set when the first\n   * ripple is shown and cleared once no more ripples are visible.\n   */\n  private _containerRect: ClientRect | null;\n\n  constructor(private _target: RippleTarget,\n              private _ngZone: NgZone,\n              elementRef: ElementRef<HTMLElement>,\n              platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents\n        .set('mousedown', this._onMousedown)\n        .set('mouseup', this._onPointerUp)\n        .set('mouseleave', this._onPointerUp)\n\n        .set('touchstart', this._onTouchStart)\n        .set('touchend', this._onPointerUp)\n        .set('touchcancel', this._onPointerUp);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerRect =\n                          this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this._runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n\n      rippleRef.state = RippleState.VISIBLE;\n\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this._runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(element: HTMLElement) {\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._ngZone.runOutsideAngular(() => {\n      this._triggerEvents.forEach((fn, type) => {\n        element.addEventListener(type, fn, passiveEventOptions);\n      });\n    });\n\n    this._triggerElement = element;\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private _onMousedown = (event: MouseEvent) => {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private _onTouchStart = (event: TouchEvent) => {\n    if (!this._target.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private _onPointerUp = () => {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE ||\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private _runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        this._triggerElement!.removeEventListener(type, fn, passiveEventOptions);\n      });\n    }\n  }\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {MatOptgroup} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': '_getAriaSelected()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  styleUrls: ['option.css'],\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption implements AfterViewChecked, OnDestroy {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** The unique ID of the option. */\n  @Input() id: string = `mat-option-${_uniqueIdCounter++}`;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\n    @Optional() readonly group: MatOptgroup) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected(): boolean|null {\n    return this.selected || (this.multiple ? false : null);\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n  optionGroups: QueryList<MatOptgroup>): number {\n\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(optionIndex: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n  const optionOffset = optionIndex * optionHeight;\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Material. */\nexport const VERSION = new Version('8.1.0');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({providedIn: 'root'})\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {\n  HammerStatic,\n  HammerInstance,\n  Recognizer,\n  RecognizerStatic,\n  HammerOptions,\n} from './gesture-annotations';\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\n\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n  'longpress',\n  'slide',\n  'slidestart',\n  'slideend',\n  'slideright',\n  'slideleft'\n];\n\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n */\nconst noopHammerInstance: HammerInstance = {\n  on: () => {},\n  off: () => {},\n};\n\n/** Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  /** List of new event names to add to the gesture support list */\n  events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n\n  constructor(\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\n    @Optional() commonModule?: MatCommonModule) {\n    super();\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n    if (!hammer) {\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n      // undefined).\n      // @breaking-change 8.0.0\n      return noopHammerInstance;\n    }\n\n    const mc = new hammer(element, this._hammerOptions || undefined);\n\n    // Default Hammer Recognizers.\n    const pan = new hammer.Pan();\n    const swipe = new hammer.Swipe();\n    const press = new hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n    longpress.recognizeWith(slide);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc as HammerInstance;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\n\n/** Possible states for a ripple element. */\nexport enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: RippleRenderer,\n    /** Reference to the ripple HTML element. */\n    public element: HTMLElement,\n    /** Ripple configuration used for the ripple. */\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {RippleRef} from './ripple-ref';\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * Configuration for the animation duration of the ripples. There are two phases with different\n   * durations for the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  animation?: RippleAnimationConfig;\n\n  /**\n   * Whether ripples should start fading out immediately after the mouse our touch is released. By\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n   */\n  terminateOnPointerUp?: boolean;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\n\n  /** Custom color for all ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether the ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\n   * duration of the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  @Input('matRippleTrigger')\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\n  set trigger(trigger: HTMLElement) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _trigger: HTMLElement;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  /** Whether ripple directive is initialized and the input bindings are set. */\n  private _isInitialized: boolean = false;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions?: RippleGlobalOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {enterDuration: 0, exitDuration: 0};\n    }\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {...this._globalOptions.animation, ...this.animation},\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  private _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /**\n   * Launches a manual ripple using the specified ripple configuration.\n   * @param config Configuration for the manual ripple.\n   */\n  launch(config: RippleConfig): RippleRef;\n\n  /**\n   * Launches a manual ripple at the specified coordinates within the element.\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\n   * @param config Optional ripple configuration for the manual ripple.\n   */\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\n    }\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport * from './ripple';\nexport * from './ripple-ref';\nexport * from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ChangeDetectionStrategy,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/**\n * Possible states for a pseudo checkbox.\n * @docs-private\n */\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '../common-behaviors/disabled';\n\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nclass MatOptgroupBase { }\nconst _MatOptgroupMixinBase: CanDisableCtor & typeof MatOptgroupBase =\n    mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  styleUrls: ['optgroup.css'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","MATERIAL_SANITY_CHECKS_FACTORY","mixinDisabled","base","_super","class_1","args","_i","arguments","length","_this","apply","_disabled","tslib_1.__extends","defineProperty","value","coerceBooleanProperty","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","classList","remove","add","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","stateChanges","Subject","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","Observable","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE_FACTORY","inject","LOCALE_ID","range","valueFunction","valuesArray","Array","i","setLines","lines","element","changes","pipe","startWith","subscribe","_a","setClass","className","isAdd","enforceStyleRecalculation","window","getComputedStyle","getPropertyValue","distanceToFurthestCorner","x","y","rect","distX","Math","max","abs","left","right","distY","top","bottom","sqrt","optionsArray","options","toArray","groups","optionGroups","groupCounter","group","optionOffset","optionIndex","optionHeight","currentScrollPosition","panelHeight","SUPPORTS_INTL_API","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","n","call","VERSION","Version","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","InjectionToken","providedIn","factory","MatCommonModule","_sanityChecksEnabled","_hammerLoader","_hasDoneGlobalChecks","_hasCheckedHammer","_document","document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","isDevMode","_isTestEnv","__karma__","jasmine","doctype","console","warn","body","testElement","createElement","appendChild","computedStyle","display","removeChild","full","CDK_VERSION","_checkHammerIsAvailable","type","NgModule","imports","BidiModule","exports","Boolean","decorators","Optional","Inject","undefined","HAMMER_LOADER","MAT_DATE_LOCALE","MAT_DATE_LOCALE_PROVIDER","provide","useExisting","DateAdapter","_localeChanges","deserialize","isDateInstance","isValid","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","MAT_DATE_FORMATS","Intl","DEFAULT_MONTH_NAMES","long","short","narrow","String","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","NativeDateAdapter","matDateLocale","platform","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf_1","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","getDateNames","dtf_2","day","getDayOfWeekNames","dtf_3","weekday","getYearName","dtf","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","setFullYear","tslib_1.__assign","toDateString","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","obj","isNaN","NaN","slice","str","replace","UTC","getHours","getMinutes","getSeconds","getMilliseconds","Injectable","Platform","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","PlatformModule","providers","useClass","ɵ0","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","commonModule","events","buildHammer","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","event","threshold","longpress","time","recognizeWith","inheritances","recognizer","item","HammerGestureConfig","MatLine","Directive","selector","host","class","MatLineSetter","MatLineModule","declarations","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","RippleState","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","normalizePassiveListenerOptions","passive","RippleRenderer","_target","_ngZone","elementRef","_isPointerDown","_triggerEvents","Map","_activeRipples","Set","_onMousedown","isFakeMousedown","isFakeMousedownFromScreenReader","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","ripple","isVisible","terminateOnPointerUp","persistent","isBrowser","_containerElement","set","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","width","height","radius","offsetX","offsetY","duration","backgroundColor","transitionDuration","transform","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","fadeOutAll","setupTriggerEvents","_triggerElement","_removeTriggerEvents","runOutsideAngular","fn","addEventListener","delay","setTimeout","removeEventListener","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","ngOnInit","ngOnDestroy","launch","configOrX","exportAs","[class.mat-ripple-unbounded]","ElementRef","NgZone","ANIMATION_MODULE_TYPE","Input","unbounded","MatRippleModule","MatPseudoCheckbox","_animationMode","Component","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","template","[class.mat-pseudo-checkbox-indeterminate]","[class.mat-pseudo-checkbox-checked]","[class.mat-pseudo-checkbox-disabled]","[class._mat-animation-noopable]","propDecorators","MatPseudoCheckboxModule","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","inputs","role","[class.mat-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","MAT_OPTION_PARENT_COMPONENT","MatOption","_element","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","id","onSelectionChange","EventEmitter","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","setActiveStyles","setInactiveStyles","getLabel","viewValue","_handleKeydown","keyCode","ENTER","SPACE","hasModifierKey","_selectViaInteraction","preventDefault","_getAriaSelected","selected","_getTabIndex","ngAfterViewChecked","emit","[attr.tabindex]","[class.mat-selected]","[class.mat-option-multiple]","[class.mat-active]","[id]","[attr.aria-selected]","[class.mat-option-disabled]","(click)","(keydown)","Output","MatOptionModule","CommonModule","MAT_LABEL_GLOBAL_OPTIONS"],"mappings":"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"}