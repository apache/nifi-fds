{"version":3,"file":"flex-layout-grid.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/grid/grid-align/grid-align.ts","../../src/lib/grid/align-columns/align-columns.ts","../../src/lib/grid/align-rows/align-rows.ts","../../src/lib/grid/area/area.ts","../../src/lib/grid/areas/areas.ts","../../src/lib/grid/auto/auto.ts","../../src/lib/grid/column/column.ts","../../src/lib/grid/columns/columns.ts","../../src/lib/grid/gap/gap.ts","../../src/lib/grid/row/row.ts","../../src/lib/grid/rows/rows.ts","../../src/lib/grid/module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive()\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreaStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive()\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreasStyleBuiler,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive()\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAutoStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive()\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridGapStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","buildCss","align","css","_a","split","rowAxis","columnAxis","ROW_DEFAULT","COL_DEFAULT","inline","mainAxis","crossAxis","DEFAULT_MAIN","DEFAULT_CROSS","setPrototypeOf","__proto__","p","hasOwnProperty","GridAlignStyleBuilder","_super","buildStyles","input","type","Injectable","args","providedIn","StyleBuilder","GridAlignDirective","elementRef","styleBuilder","styler","marshal","_this","call","DIRECTIVE_KEY","styleCache","alignCache","init","Directive","ElementRef","StyleUtils","MediaMarshaller","BaseDirective2","Map","inputs","DefaultGridAlignDirective","apply","selector","GridAlignColumnsStyleBuilder","parent","GridAlignColumnsDirective","_inline","defineProperty","val","coerceBooleanProperty","updateWithValue","value","alignColumnsInlineCache","alignColumnsCache","addStyles","Input","DefaultGridAlignColumnsDirective","GridAlignRowsStyleBuilder","GridAlignRowsDirective","alignRowsInlineCache","alignRowsCache","DefaultGridAlignRowsDirective","GridAreaStyleBuilder","grid-area","GridAreaDirective","elRef","styleUtils","gridAreaCache","DefaultGridAreaDirective","GridAreasStyleBuiler","areas","map","v","trim","display","grid-template-areas","join","GridAreasDirective","areasInlineCache","areasCache","DefaultGridAreasDirective","GridAutoStyleBuilder","direction","dense","grid-auto-flow","GridAutoDirective","autoInlineCache","autoCache","DefaultGridAutoDirective","GridColumnStyleBuilder","grid-column","GridColumnDirective","columnCache","DefaultGridColumnDirective","GridColumnsStyleBuilder","auto","endsWith","substring","indexOf","grid-auto-columns","grid-template-columns","GridColumnsDirective","columnsInlineCache","columnsCache","DefaultGridColumnsDirective","GridGapStyleBuilder","grid-gap","GridGapDirective","gapInlineCache","gapCache","DefaultGridGapDirective","GridRowStyleBuilder","grid-row","GridRowDirective","rowCache","DefaultGridRowDirective","GridRowsStyleBuilder","grid-auto-rows","grid-template-rows","GridRowsDirective","rowsInlineCache","rowsCache","DefaultGridRowsDirective","ALL_DIRECTIVES","GridModule","NgModule","imports","CoreModule","declarations","exports"],"mappings":"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"}