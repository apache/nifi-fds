{"version":3,"sources":["../../../../src/platform/core/dynamic-menu/dynamic-menu.component.ts","../../../src/platform/core/dynamic-menu/dynamic-menu-item/dynamic-menu-item.component.ts","../../src/platform/core/dynamic-menu/dynamic-menu-item/dynamic-menu-link/dynamic-menu-link.component.ts","../../../../src/platform/core/dynamic-menu/dynamic-menu.module.ts"],"names":["TdDynamicMenuComponent","this","itemClicked","EventEmitter","prototype","emitClicked","event","emit","Component","args","selector","template","Input","Output","TdDynamicMenuItemComponent","ViewChild","static","TdDynamicMenuLinkComponent","text","item","action","NgModule","declarations","imports","CommonModule","MatButtonModule","MatIconModule","MatListModule","MatMenuModule","MatTooltipModule","providers","exports"],"mappings":"m4BAuCA,SAAAA,IASYC,KAAAC,YAA0D,IAAIC,EAAAA,oBAExEH,EAAAI,UAAAC,YAAA,SAAYC,GACVL,KAAKC,YAAYK,KAAKD,6BAZzBE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBAEVC,SAAA,y1BAGCC,EAAAA,qBACAA,EAAAA,2BAEAC,EAAAA,2BC5CH,SAAAC,IAQYb,KAAAC,YAA0D,IAAIC,EAAAA,oBAIxEW,EAAAV,UAAAC,YAAA,SAAYC,GACVL,KAAKC,YAAYK,KAAKD,6BAbzBE,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,uBACVC,SAAA,u1CAICC,EAAAA,2BAEAC,EAAAA,0BAEAE,EAAAA,UAASN,KAAA,CAAC,YAAa,CAAEO,QAAQ,wBCXpC,SAAAC,IAQYhB,KAAAC,YAA0D,IAAIC,EAAAA,oBAExEc,EAAAb,UAAAC,YAAA,WACEJ,KAAKC,YAAYK,KAAK,CAAEW,KAAMjB,KAAKkB,KAAKD,KAAME,OAAQnB,KAAKkB,KAAKC,mCAXnEZ,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,uBACVC,SAAA,ugCAICC,EAAAA,2BAEAC,EAAAA,gBCOH,iCANCQ,EAAAA,SAAQZ,KAAA,CAAC,CACRa,aAAc,CAACtB,EAAwBc,EAA4BG,GACnEM,QAAS,CAACC,EAAAA,aAAcC,EAAAA,gBAAiBC,EAAAA,cAAeC,EAAAA,cAAeC,EAAAA,cAAeC,EAAAA,kBACtFC,UAAW,GACXC,QAAS,CAAC/B,EAAwBc,EAA4BG","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n// Trigger button launches top level menu. Must specify text and/or icon.\nexport interface IMenuTrigger {\n  id?: string; // Optional identifier\n  text?: string; // Text to display on button\n  icon?: string; // Optional icon\n  svgIcon?: string; // Optional svgIcon\n  iconClasses?: string[]; // Optional styling classes\n}\n\n// Menu items can serve one of four roles:\n// - Submenu trigger (has children property)\n// - URL link (has link property)\n// - Action link (has action property)\n// - Grouping label (has neither children, link or action properties)\nexport interface IMenuItem {\n  id?: string; // Optional identifier\n  text: string; // Display text\n  icon?: string; // Optional icon\n  svgIcon?: string; // Optional svgIcon\n  iconClasses?: string[]; // Optional styling classes\n  // If children provided, item is a submenu trigger\n  // Represents the contents of the submenu\n  children?: IMenuItem[];\n  // If link provided, item is a URL link\n  link?: string; // href (relative or fully qualified).\n  newTab?: boolean; // Indicates where URL should be displayed, current or new browser tab\n  // If action provided, item is an action link\n  // A click on this item will emit itemClicked event\n  action?: string;\n}\n\n// Click action event payload derived from IMenuItem\nexport interface ITdDynamicMenuLinkClickEvent {\n  text: string;\n  action: string;\n}\n\n@Component({\n  selector: 'td-dynamic-menu',\n  styleUrls: ['dynamic-menu.component.scss'],\n  templateUrl: './dynamic-menu.component.html',\n})\nexport class TdDynamicMenuComponent {\n  @Input() trigger: IMenuTrigger;\n  @Input() items: IMenuItem[];\n\n  @Output() itemClicked: EventEmitter<ITdDynamicMenuLinkClickEvent> = new EventEmitter<ITdDynamicMenuLinkClickEvent>();\n\n  emitClicked(event: ITdDynamicMenuLinkClickEvent): void {\n    this.itemClicked.emit(event);\n  }\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\nimport { IMenuItem, ITdDynamicMenuLinkClickEvent } from '../dynamic-menu.component';\n\n@Component({\n  selector: 'td-dynamic-menu-item',\n  templateUrl: './dynamic-menu-item.component.html',\n  styleUrls: ['./dynamic-menu-item.component.scss'],\n})\nexport class TdDynamicMenuItemComponent {\n  @Input() items: IMenuItem[];\n\n  @Output() itemClicked: EventEmitter<ITdDynamicMenuLinkClickEvent> = new EventEmitter<ITdDynamicMenuLinkClickEvent>();\n\n  @ViewChild('childMenu', { static: true }) public childMenu: MatMenu;\n\n  emitClicked(event: ITdDynamicMenuLinkClickEvent): void {\n    this.itemClicked.emit(event);\n  }\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { IMenuItem, ITdDynamicMenuLinkClickEvent } from '../../dynamic-menu.component';\n\n@Component({\n  selector: 'td-dynamic-menu-link',\n  templateUrl: './dynamic-menu-link.component.html',\n  styleUrls: ['./dynamic-menu-link.component.scss'],\n})\nexport class TdDynamicMenuLinkComponent {\n  @Input() item: IMenuItem;\n\n  @Output() itemClicked: EventEmitter<ITdDynamicMenuLinkClickEvent> = new EventEmitter<ITdDynamicMenuLinkClickEvent>();\n\n  emitClicked(): void {\n    this.itemClicked.emit({ text: this.item.text, action: this.item.action });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TdDynamicMenuComponent } from './dynamic-menu.component';\nimport { TdDynamicMenuItemComponent } from './dynamic-menu-item/dynamic-menu-item.component';\nimport { TdDynamicMenuLinkComponent } from './dynamic-menu-item/dynamic-menu-link/dynamic-menu-link.component';\n\n@NgModule({\n  declarations: [TdDynamicMenuComponent, TdDynamicMenuItemComponent, TdDynamicMenuLinkComponent],\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatListModule, MatMenuModule, MatTooltipModule],\n  providers: [],\n  exports: [TdDynamicMenuComponent, TdDynamicMenuItemComponent, TdDynamicMenuLinkComponent],\n})\nexport class CovalentDynamicMenuModule {}\n"]}