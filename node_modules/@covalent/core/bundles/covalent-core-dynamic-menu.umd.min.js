!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common"),require("@angular/material/button"),require("@angular/material/icon"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/tooltip")):"function"==typeof define&&define.amd?define("@covalent/core/dynamic-menu",["exports","@angular/core","@angular/common","@angular/material/button","@angular/material/icon","@angular/material/list","@angular/material/menu","@angular/material/tooltip"],n):n(((e="undefined"!=typeof globalThis?globalThis:e||self).covalent=e.covalent||{},e.covalent.core=e.covalent.core||{},e.covalent.core["dynamic-menu"]={}),e.ng.core,e.ng.common,e.ng.material.button,e.ng.material.icon,e.ng.material.list,e.ng.material.menu,e.ng.material.tooltip)}(this,(function(e,n,t,i,a,o,m,c){"use strict";var r=function(){function e(){this.itemClicked=new n.EventEmitter}return e.prototype.emitClicked=function(e){this.itemClicked.emit(e)},e}();r.decorators=[{type:n.Component,args:[{selector:"td-dynamic-menu",template:'<button *ngIf="!trigger.text" mat-icon-button id="{{ trigger.id }}" [matMenuTriggerFor]="menu.childMenu">\n  <mat-icon *ngIf="trigger.svgIcon" [class]="trigger.iconClasses" [svgIcon]="trigger.svgIcon"></mat-icon>\n  <mat-icon *ngIf="trigger.icon" [class]="trigger.iconClasses">{{ trigger.icon }}</mat-icon>\n</button>\n<button *ngIf="trigger.text" mat-button id="{{ trigger.id }}" [matMenuTriggerFor]="menu.childMenu">\n  <mat-icon *ngIf="trigger.svgIcon" [class]="trigger.iconClasses" [svgIcon]="trigger.svgIcon"></mat-icon>\n  <mat-icon *ngIf="trigger.icon" [class]="trigger.iconClasses">{{ trigger.icon }}</mat-icon>\n  <span *ngIf="trigger.text">\n    {{ trigger.text }}\n  </span>\n</button>\n\n<td-dynamic-menu-item #menu [items]="items" (itemClicked)="emitClicked($event)"></td-dynamic-menu-item>\n',styles:[""]}]}],r.propDecorators={trigger:[{type:n.Input}],items:[{type:n.Input}],itemClicked:[{type:n.Output}]};var l=function(){function e(){this.itemClicked=new n.EventEmitter}return e.prototype.emitClicked=function(e){this.itemClicked.emit(e)},e}();l.decorators=[{type:n.Component,args:[{selector:"td-dynamic-menu-item",template:'<mat-menu #childMenu="matMenu" [overlapTrigger]="false">\n  <ng-template let-item let-index="index" ngFor [ngForOf]="items">\n    <ng-container *ngIf="item.children && item.children.length > 0">\n      <button mat-menu-item [id]="item.id" [matMenuTriggerFor]="menu.childMenu">\n        <mat-icon *ngIf="item.svgIcon" [class]="item.iconClasses" [svgIcon]="item.svgIcon"></mat-icon>\n        <mat-icon *ngIf="item.icon" [class]="item.iconClasses">{{ item.icon }}</mat-icon>\n        <span *ngIf="item.text">\n          {{ item.text }}\n        </span>\n      </button>\n      <td-dynamic-menu-item #menu [items]="item.children"></td-dynamic-menu-item>\n    </ng-container>\n    <ng-container *ngIf="!item.children || item.children.length === 0">\n      <ng-container *ngIf="!item.link && !item.action">\n        <mat-divider class="group-divider" *ngIf="index > 0"></mat-divider>\n        <div class="group-label text-sm">{{ item.text }}</div>\n      </ng-container>\n      <ng-container *ngIf="item.link || item.action">\n        <div mat-menu-item class="pad-none">\n          <td-dynamic-menu-link [item]="item" (itemClicked)="emitClicked($event)"></td-dynamic-menu-link>\n        </div>\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</mat-menu>\n',styles:[".group-divider{margin:8px}.group-label{padding:16px}"]}]}],l.propDecorators={items:[{type:n.Input}],itemClicked:[{type:n.Output}],childMenu:[{type:n.ViewChild,args:["childMenu",{static:!0}]}]};var s=function(){function e(){this.itemClicked=new n.EventEmitter}return e.prototype.emitClicked=function(){this.itemClicked.emit({text:this.item.text,action:this.item.action})},e}();s.decorators=[{type:n.Component,args:[{selector:"td-dynamic-menu-link",template:'<a\n  *ngIf="item.link"\n  class="new-tab"\n  mat-menu-item\n  [id]="item.id"\n  [href]="item.link"\n  [target]="item.newTab ? \'_blank\' : \'_self\'"\n  (click)="emitClicked()"\n>\n  <mat-icon *ngIf="item.svgIcon" [class]="item.iconClasses" [svgIcon]="item.svgIcon"></mat-icon>\n  <mat-icon *ngIf="item.icon" [class]="item.iconClasses">{{ item.icon }}</mat-icon>\n  <span>{{ item.text }}</span>\n  <mat-icon *ngIf="item.newTab" class="new-tab-icon">launch</mat-icon>\n</a>\n<button *ngIf="item.action" mat-menu-item [id]="item.id" (click)="emitClicked()">\n  <mat-icon *ngIf="item.svgIcon" [class]="item.iconClasses" [svgIcon]="item.svgIcon"></mat-icon>\n  <mat-icon *ngIf="item.icon" [class]="item.iconClasses">{{ item.icon }}</mat-icon>\n  <span>{{ item.text }}</span>\n</button>\n',styles:[".new-tab{-ms-flex-align:center;-ms-flex-pack:start;align-items:center;display:-ms-flexbox;display:flex;justify-content:start}.new-tab span{-ms-flex:1;flex:1}.new-tab .new-tab-icon{margin:0 0 0 16px}"]}]}],s.propDecorators={item:[{type:n.Input}],itemClicked:[{type:n.Output}]};var g=function(){};g.decorators=[{type:n.NgModule,args:[{declarations:[r,l,s],imports:[t.CommonModule,i.MatButtonModule,a.MatIconModule,o.MatListModule,m.MatMenuModule,c.MatTooltipModule],providers:[],exports:[r,l,s]}]}],e.CovalentDynamicMenuModule=g,e.TdDynamicMenuComponent=r,e.TdDynamicMenuItemComponent=l,e.Éµa=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=covalent-core-dynamic-menu.umd.min.js.map