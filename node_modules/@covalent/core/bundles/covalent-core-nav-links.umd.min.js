!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@angular/router"),require("@angular/material/core"),require("@angular/material/list"),require("@angular/material/icon"),require("@angular/material/divider"),require("@angular/material/menu"),require("@covalent/core/common"),require("@covalent/core/expansion-panel")):"function"==typeof define&&define.amd?define("@covalent/core/nav-links",["exports","@angular/core","@angular/common","@angular/router","@angular/material/core","@angular/material/list","@angular/material/icon","@angular/material/divider","@angular/material/menu","@covalent/core/common","@covalent/core/expansion-panel"],e):e(((n="undefined"!=typeof globalThis?globalThis:n||self).covalent=n.covalent||{},n.covalent.core=n.covalent.core||{},n.covalent.core["nav-links"]={}),n.ng.core,n.ng.common,n.ng.router,n.ng.material.core,n.ng.material.list,n.ng.material.icon,n.ng.material.divider,n.ng.material.menu,n.covalent.core.common,n.covalent.core["expansion-panel"])}(this,(function(n,e,t,i,a,l,o,r,c,s,d){"use strict";var u=0,m=function(){function n(){this._uniqueId="td-nav-links-"+ ++u,this._collapsedSet=new Set,this.id=this._uniqueId,this.afterNavigation=new e.EventEmitter}return n.prototype._linkClicked=function(n){this.afterNavigation.emit(n)},n.prototype._href=function(n){return n.link&&n.link.href},n.prototype._routerLink=function(n){return n.link&&n.link.routerLink},n.prototype._toggle=function(n){this._isCollapsed(n)?this._collapsedSet.delete(n):this._collapsedSet.add(n)},n.prototype._isCollapsed=function(n){return this._collapsedSet.has(n)},n}();m.decorators=[{type:e.Component,args:[{selector:"td-nav-links",template:'<mat-nav-list dense *ngIf="links && links.length > 0">\n  <ng-template ngFor [ngForOf]="links" let-link let-linkIndex="index">\n    <ng-container *ngIf="link.show === undefined || link.show">\n      <ng-container *ngIf="link.children?.length && !link.link">\n        <h3\n          [class.td-nav-link-cursor]="link.collapsable"\n          matSubheader\n          matRipple\n          [matRippleDisabled]="!link.collapsable"\n          (click)="link.collapsable && _toggle(link)"\n        >\n          <mat-icon *ngIf="link.icon" [fontSet]="link.icon?.fontSet">{{ link.icon?.name }}</mat-icon>\n          <span [style.width.%]="100">{{ link.label }}</span>\n          <mat-icon [@tdRotate]="!_isCollapsed(link)" *ngIf="link.collapsable">keyboard_arrow_down</mat-icon>\n        </h3>\n        <td-nav-links\n          [id]="id + \'-\' + linkIndex"\n          [@tdCollapse]="!!_isCollapsed(link)"\n          [links]="link.children"\n        ></td-nav-links>\n      </ng-container>\n      <ng-container *ngIf="link.link">\n        <a\n          mat-list-item\n          *ngIf="_href(link)"\n          [href]="_href(link)"\n          [target]="link.link.openInNewTab ? \'_blank\' : undefined"\n          id="{{ id }}-{{ linkIndex }}"\n          class="td-nav-link"\n          (click)="_linkClicked(link)"\n        >\n          <mat-icon matListIcon [fontSet]="link.icon?.fontSet">{{ link.icon?.name }}</mat-icon>\n          <span matLine>{{ link.label }}</span>\n          <mat-icon *ngIf="link.link.openInNewTab">launch</mat-icon>\n        </a>\n        <a\n          mat-list-item\n          *ngIf="_routerLink(link)"\n          [routerLink]="_routerLink(link)"\n          [target]="link.link.openInNewTab ? \'_blank\' : undefined"\n          id="{{ id }}-{{ linkIndex }}"\n          class="td-nav-link"\n          (click)="_linkClicked(link)"\n        >\n          <mat-icon matListIcon [fontSet]="link.icon?.fontSet">{{ link.icon?.name }}</mat-icon>\n          <span matLine>{{ link.label }}</span>\n          <mat-icon *ngIf="link.link.openInNewTab">launch</mat-icon>\n        </a>\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</mat-nav-list>\n',changeDetection:e.ChangeDetectionStrategy.OnPush,animations:[s.tdCollapseAnimation,s.tdRotateAnimation],styles:[":host{display:block}:host .mat-nav-list.mat-list-base{padding-top:2px}:host .mat-nav-list.mat-list-base .td-nav-link-cursor{cursor:pointer}:host .mat-nav-list.mat-list-base .mat-list-item{height:40px}:host .mat-icon{margin-right:0}"]}]}],m.propDecorators={id:[{type:e.Input}],links:[{type:e.Input}],afterNavigation:[{type:e.Output}]};var k=function(){};k.decorators=[{type:e.NgModule,args:[{declarations:[m],exports:[m],imports:[t.CommonModule,s.CovalentCommonModule,d.CovalentExpansionPanelModule,a.MatRippleModule,c.MatMenuModule,l.MatListModule,o.MatIconModule,r.MatDividerModule,i.RouterModule]}]}],n.CovalentNavLinksModule=k,n.TdNavLinksComponent=m,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=covalent-core-nav-links.umd.min.js.map