{"version":3,"file":"covalent-core-breadcrumbs.umd.js","sources":["../../../src/platform/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","../../../../src/platform/core/breadcrumbs/breadcrumbs.component.ts","../../../../src/platform/core/breadcrumbs/breadcrumbs.module.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  private _displayIcon: boolean = true;\n  private _separatorIcon: string = 'chevron_right';\n\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  public get separatorIcon(): string {\n    return this._separatorIcon;\n  }\n  public set separatorIcon(separatorIcon: string) {\n    this._separatorIcon = separatorIcon;\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  // Should show the right chevron or not before the label\n  public get displayIcon(): boolean {\n    return this._displayIcon;\n  }\n  public set displayIcon(displayIcon: boolean) {\n    this._displayIcon = displayIcon;\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _contentChildrenSub: Subscription;\n  private _resizing: boolean = false;\n  private _separatorIcon: string = 'chevron_right';\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent, { descendants: true }) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input() public set separatorIcon(separatorIcon: string) {\n    this._separatorIcon = separatorIcon;\n    this.setCrumbIcons();\n  }\n  public get separatorIcon(): string {\n    return this._separatorIcon;\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(debounceTime(10)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._contentChildrenSub = this._breadcrumbs.changes.pipe(startWith(this._breadcrumbs)).subscribe(() => {\n      this.setCrumbIcons();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n    this._contentChildrenSub.unsubscribe();\n  }\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    const element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    const style: CSSStyleDeclaration = window.getComputedStyle(element);\n    const borderLeft: number = parseInt(style.borderLeft, 10);\n    const borderRight: number = parseInt(style.borderRight, 10);\n    const marginLeft: number = parseInt(style.marginLeft, 10);\n    const marginRight: number = parseInt(style.marginRight, 10);\n    const paddingLeft: number = parseInt(style.paddingLeft, 10);\n    const paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    if (this._breadcrumbs) {\n      const breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n      breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent, index: number) => {\n        breadcrumb.separatorIcon = this.separatorIcon;\n        // don't show the icon on the last breadcrumb\n        breadcrumb.displayIcon = index < breadcrumbArray.length - 1;\n      });\n    }\n  }\n\n  private _calculateVisibility(): void {\n    const crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    const hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      const breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if (crumbWidthSum + breadcrumb.width > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n  exports: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n})\nexport class CovalentBreadcrumbsModule {}\n"],"names":["Component","ChangeDetectionStrategy","ElementRef","ChangeDetectorRef","HostBinding","Subscription","Subject","merge","fromEvent","debounceTime","distinctUntilChanged","startWith","ContentChildren","Input","NgModule","CommonModule","MatIconModule"],"mappings":"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"}