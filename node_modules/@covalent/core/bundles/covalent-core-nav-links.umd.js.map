{"version":3,"file":"covalent-core-nav-links.umd.js","sources":["../../../../src/platform/core/nav-links/nav-links.component.ts","../../../../src/platform/core/nav-links/nav-links.module.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\nimport { tdCollapseAnimation, tdRotateAnimation } from '@covalent/core/common';\n\nexport interface ITdNavNode {\n  label: string;\n  show?: boolean;\n}\n\nexport interface ITdNavHeader extends ITdNavNode {\n  children: ITdLink[];\n}\n\nexport interface ITdNavExpansion extends ITdNavHeader {\n  collapsable?: boolean;\n}\n\nexport interface ITdLink extends ITdNavNode {\n  link: { href: string; openInNewTab?: boolean } | { routerLink: string | string[]; openInNewTab?: boolean };\n  icon: { fontSet?: string; name: string };\n}\n\nlet nextUniqueId: number = 0;\n\n@Component({\n  selector: 'td-nav-links',\n  templateUrl: './nav-links.component.html',\n  styleUrls: ['./nav-links.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [tdCollapseAnimation, tdRotateAnimation],\n})\nexport class TdNavLinksComponent {\n  private _uniqueId: string = `td-nav-links-${++nextUniqueId}`;\n\n  private _collapsedSet: Set<ITdNavExpansion> = new Set<ITdNavExpansion>();\n\n  @Input() id: string = this._uniqueId;\n\n  /**\n   * Links to be rendered by component.\n   */\n  /* tslint:disable-next-line */\n  @Input() links: Array<ITdNavExpansion | ITdNavHeader | ITdLink>;\n\n  /**\n   * Event trigger after a navigation click\n   */\n  @Output() afterNavigation: EventEmitter<ITdLink> = new EventEmitter<ITdLink>();\n\n  _linkClicked(link: ITdLink): void {\n    this.afterNavigation.emit(link);\n  }\n\n  _href(link: ITdLink): string {\n    return link.link && (<{ href?: string }>link.link).href;\n  }\n\n  _routerLink(link: ITdLink): string | string[] {\n    return link.link && (<{ routerLink?: string | string[] }>link.link).routerLink;\n  }\n\n  /**\n   * @param link\n   * Toggles expand/collapse state of expansion link.\n   * Only applied when `collapsable` is true\n   */\n  _toggle(link: ITdNavExpansion): void {\n    if (this._isCollapsed(link)) {\n      this._collapsedSet.delete(link);\n    } else {\n      this._collapsedSet.add(link);\n    }\n  }\n\n  /**\n   * @param link\n   * Returns true if the state of provided expansion link is collapsed.\n   */\n  _isCollapsed(link: ITdNavExpansion): boolean {\n    return this._collapsedSet.has(link);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { CovalentCommonModule } from '@covalent/core/common';\nimport { CovalentExpansionPanelModule } from '@covalent/core/expansion-panel';\n\nimport { TdNavLinksComponent } from './nav-links.component';\n\n@NgModule({\n  declarations: [TdNavLinksComponent], // directives, components, and pipes owned by this NgModule\n  exports: [TdNavLinksComponent],\n  imports: [\n    CommonModule,\n    CovalentCommonModule,\n    CovalentExpansionPanelModule,\n    MatRippleModule,\n    MatMenuModule,\n    MatListModule,\n    MatIconModule,\n    MatDividerModule,\n    RouterModule,\n  ], // modules needed to run this module\n})\nexport class CovalentNavLinksModule {}\n"],"names":["EventEmitter","Component","ChangeDetectionStrategy","tdCollapseAnimation","tdRotateAnimation","Input","Output","NgModule","CommonModule","CovalentCommonModule","CovalentExpansionPanelModule","MatRippleModule","MatMenuModule","MatListModule","MatIconModule","MatDividerModule","RouterModule"],"mappings":";;;;;;;;;;;;;;6BAOC;;;QAFC,2BAAc;;QACd,0BAAe;;;;;+BAKhB;;;QADC,gCAAoB;;;;;kCAKrB;;;QADC,sCAAsB;;;;;0BAMvB;;;QAFC,uBAA2G;;QAC3G,uBAAyC;;;QAGvC,YAAY,GAAW,CAAC;;QAE5B;YAQU,cAAS,GAAW,kBAAgB,EAAE,YAAc,CAAC;YAErD,kBAAa,GAAyB,IAAI,GAAG,EAAmB,CAAC;YAEhE,OAAE,GAAW,IAAI,CAAC,SAAS,CAAC;;;;YAW3B,oBAAe,GAA0B,IAAIA,iBAAY,EAAW,CAAC;SAkChF;;;;;QAhCC,0CAAY,GAAZ,UAAa,IAAa;YACxB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;;;;;QAED,mCAAK,GAAL,UAAM,IAAa;YACjB,OAAO,IAAI,CAAC,IAAI,IAAI,oBAAoB,IAAI,CAAC,IAAI,IAAE,IAAI,CAAC;SACzD;;;;;QAED,yCAAW,GAAX,UAAY,IAAa;YACvB,OAAO,IAAI,CAAC,IAAI,IAAI,oBAAqC,IAAI,CAAC,IAAI,IAAE,UAAU,CAAC;SAChF;;;;;;;QAOD,qCAAO,GAAP,UAAQ,IAAqB;YAC3B,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;gBAC3B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;aAC9B;SACF;;;;;;QAMD,0CAAY,GAAZ,UAAa,IAAqB;YAChC,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACrC;;;;gBAxDFC,cAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,0rEAAyC;oBAEzC,eAAe,EAAEC,4BAAuB,CAAC,MAAM;oBAC/C,UAAU,EAAE,CAACC,0BAAmB,EAAEC,wBAAiB,CAAC;;iBACrD;;;qBAMEC,UAAK;wBAMLA,UAAK;kCAKLC,WAAM;;;;;;;QAfP,wCAA6D;;;;;QAE7D,4CAAyE;;QAEzE,iCAAqC;;;;;QAMrC,oCAAgE;;;;;QAKhE,8CAA+E;;;;;;;;;QChBjF;;;;;gBAfCC,aAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,OAAO,EAAE;wBACPC,qBAAY;wBACZC,2BAAoB;wBACpBC,2CAA4B;wBAC5BC,sBAAe;wBACfC,kBAAa;wBACbC,kBAAa;wBACbC,kBAAa;wBACbC,wBAAgB;wBAChBC,mBAAY;qBACb;iBACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}