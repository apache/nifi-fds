/**
 * @fileoverview added by tsickle
 * Generated from: side-sheet-ref.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { MatDialogRef } from '@angular/material/dialog';
// Counter for unique dialog ids.
/** @type {?} */
let uniqueId = 0;
// Create a new side sheet ref to change the id of the ref
/**
 * @template T, R
 */
export class CovalentSideSheetRef extends MatDialogRef {
    /**
     * @param {?} overlayRef
     * @param {?} _containerInstance
     * @param {?=} id
     */
    constructor(overlayRef, _containerInstance, id = `td-side-sheet-${uniqueId++}`) {
        super(overlayRef, _containerInstance, id);
        this.overlayRef = overlayRef;
        this._containerInstance = _containerInstance;
        this.id = id;
    }
}
if (false) {
    /** @type {?} */
    CovalentSideSheetRef.prototype.overlayRef;
    /** @type {?} */
    CovalentSideSheetRef.prototype._containerInstance;
    /** @type {?} */
    CovalentSideSheetRef.prototype.id;
}
/**
 * @template R
 * @param {?} ref
 * @param {?} interactionType
 * @param {?=} result
 * @return {?}
 */
export function _closeSideSheetVia(ref, interactionType, result) {
    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.
    // For those, we keep the behavior as is and do not deal with the interaction type.
    if (ref._containerInstance !== undefined) {
        ref._containerInstance._closeInteractionType = interactionType;
    }
    return ref.close(result);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZS1zaGVldC1yZWYuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vLi4vc3JjL3BsYXRmb3JtL2NvcmUvc2lkZS1zaGVldC8iLCJzb3VyY2VzIjpbInNpZGUtc2hlZXQtcmVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBR0EsT0FBTyxFQUFFLFlBQVksRUFBMkIsTUFBTSwwQkFBMEIsQ0FBQzs7O0lBRzdFLFFBQVEsR0FBRyxDQUFDOzs7OztBQUdoQixNQUFNLE9BQU8sb0JBQWlDLFNBQVEsWUFBa0I7Ozs7OztJQUN0RSxZQUNTLFVBQXNCLEVBQ3RCLGtCQUEyQyxFQUN6QyxLQUFhLGlCQUFpQixRQUFRLEVBQUUsRUFBRTtRQUVuRCxLQUFLLENBQUMsVUFBVSxFQUFFLGtCQUFrQixFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBSm5DLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUF5QjtRQUN6QyxPQUFFLEdBQUYsRUFBRSxDQUF3QztJQUdyRCxDQUFDO0NBQ0Y7OztJQU5HLDBDQUE2Qjs7SUFDN0Isa0RBQWtEOztJQUNsRCxrQ0FBbUQ7Ozs7Ozs7OztBQU12RCxNQUFNLFVBQVUsa0JBQWtCLENBQUksR0FBNEIsRUFBRSxlQUE0QixFQUFFLE1BQVU7SUFDMUcseUZBQXlGO0lBQ3pGLG1GQUFtRjtJQUNuRixJQUFJLEdBQUcsQ0FBQyxrQkFBa0IsS0FBSyxTQUFTLEVBQUU7UUFDeEMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLHFCQUFxQixHQUFHLGVBQWUsQ0FBQztLQUNoRTtJQUNELE9BQU8sR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGUgKi9cbmltcG9ydCB7IEZvY3VzT3JpZ2luIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2ExMXknO1xuaW1wb3J0IHsgT3ZlcmxheVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IE1hdERpYWxvZ1JlZiwgX01hdERpYWxvZ0NvbnRhaW5lckJhc2UgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuXG4vLyBDb3VudGVyIGZvciB1bmlxdWUgZGlhbG9nIGlkcy5cbmxldCB1bmlxdWVJZCA9IDA7XG5cbi8vIENyZWF0ZSBhIG5ldyBzaWRlIHNoZWV0IHJlZiB0byBjaGFuZ2UgdGhlIGlkIG9mIHRoZSByZWZcbmV4cG9ydCBjbGFzcyBDb3ZhbGVudFNpZGVTaGVldFJlZjxULCBSID0gYW55PiBleHRlbmRzIE1hdERpYWxvZ1JlZjxULCBSPiB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBvdmVybGF5UmVmOiBPdmVybGF5UmVmLFxuICAgIHB1YmxpYyBfY29udGFpbmVySW5zdGFuY2U6IF9NYXREaWFsb2dDb250YWluZXJCYXNlLFxuICAgIHJlYWRvbmx5IGlkOiBzdHJpbmcgPSBgdGQtc2lkZS1zaGVldC0ke3VuaXF1ZUlkKyt9YCxcbiAgKSB7XG4gICAgc3VwZXIob3ZlcmxheVJlZiwgX2NvbnRhaW5lckluc3RhbmNlLCBpZCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIF9jbG9zZVNpZGVTaGVldFZpYTxSPihyZWY6IENvdmFsZW50U2lkZVNoZWV0UmVmPFI+LCBpbnRlcmFjdGlvblR5cGU6IEZvY3VzT3JpZ2luLCByZXN1bHQ/OiBSKSB7XG4gIC8vIFNvbWUgbW9jayBkaWFsb2cgcmVmIGluc3RhbmNlcyBpbiB0ZXN0cyBkbyBub3QgaGF2ZSB0aGUgYF9jb250YWluZXJJbnN0YW5jZWAgcHJvcGVydHkuXG4gIC8vIEZvciB0aG9zZSwgd2Uga2VlcCB0aGUgYmVoYXZpb3IgYXMgaXMgYW5kIGRvIG5vdCBkZWFsIHdpdGggdGhlIGludGVyYWN0aW9uIHR5cGUuXG4gIGlmIChyZWYuX2NvbnRhaW5lckluc3RhbmNlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZWYuX2NvbnRhaW5lckluc3RhbmNlLl9jbG9zZUludGVyYWN0aW9uVHlwZSA9IGludGVyYWN0aW9uVHlwZTtcbiAgfVxuICByZXR1cm4gcmVmLmNsb3NlKHJlc3VsdCk7XG59XG4iXX0=