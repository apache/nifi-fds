{"version":3,"file":"covalent-core-layout.js","sources":["../../../../src/platform/core/layout/layout.component.ts","../../../../src/platform/core/layout/layout-toggle.class.ts","../../../../src/platform/core/layout/layout.directives.ts","../../../src/platform/core/layout/layout-nav/layout-nav.component.ts","../../../src/platform/core/layout/layout-nav-list/layout-nav-list.component.ts","../../../src/platform/core/layout/layout-nav-list/layout-nav-list.directives.ts","../../../src/platform/core/layout/layout-card-over/layout-card-over.component.ts","../../../src/platform/core/layout/layout-manage-list/layout-manage-list.component.ts","../../../src/platform/core/layout/layout-manage-list/layout-manage-list.directives.ts","../../../src/platform/core/layout/layout-footer/layout-footer.component.ts","../../../src/platform/core/layout/navigation-drawer/navigation-drawer.component.ts","../../../../src/platform/core/layout/layout.module.ts"],"sourcesContent":["import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss'],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import {\n  Input,\n  HostBinding,\n  HostListener,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n} from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase {}\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\n@Directive()\nexport abstract class BaseLayoutToggleDirective\n  extends _TdLayoutToggleMixinBase\n  implements AfterViewInit, OnDestroy, ICanDisable\n{\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable, private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { BaseLayoutToggleDirective } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutToggle')\n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutClose')\n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutOpen')\n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss'],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss'],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { BaseLayoutToggleDirective } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListToggleDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutNavListToggle')\n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListCloseDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutNavListClose')\n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListOpenDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutNavListOpen')\n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss'],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input() cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input() cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input() cardWidth: number = 70;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss'],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { BaseLayoutToggleDirective } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListToggleDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutManageListToggle')\n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListCloseDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutManageListClose')\n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListOpenDirective extends BaseLayoutToggleDirective {\n  @Input('tdLayoutManageListOpen')\n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss'],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ContentChildren,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  Inject,\n  QueryList,\n  SecurityContext,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss'],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective, { descendants: true })\n  _drawerMenu: QueryList<TdNavigationDrawerMenuDirective>;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective, { descendants: true })\n  _toolbar: QueryList<TdNavigationDrawerToolbarDirective>;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input() sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * avatar?: string\n   *\n   * avatar url to be displayed before the title\n   * If [icon] or [logo] are set, then this will not be shown.\n   */\n  @Input() avatar: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      const sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input() name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input() email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n    @Optional() private _router: Router,\n    private _sanitize: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [TD_LAYOUTS],\n  exports: [TD_LAYOUTS],\n})\nexport class CovalentLayoutModule {}\n"],"names":[],"mappings":"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"}