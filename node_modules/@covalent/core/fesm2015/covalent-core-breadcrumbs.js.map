{"version":3,"file":"covalent-core-breadcrumbs.js","sources":["../../../src/platform/core/breadcrumbs/breadcrumb/breadcrumb.component.ts","../../../../src/platform/core/breadcrumbs/breadcrumbs.component.ts","../../../../src/platform/core/breadcrumbs/breadcrumbs.module.ts"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  HostBinding,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'td-breadcrumb, a[td-breadcrumb]',\n  styleUrls: ['./breadcrumb.component.scss'],\n  templateUrl: './breadcrumb.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'mat-button td-breadcrumb',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbComponent implements AfterViewInit {\n  private _displayCrumb: boolean = true;\n  private _width: number = 0;\n  private _displayIcon: boolean = true;\n  private _separatorIcon: string = 'chevron_right';\n\n  // Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'\n  public get separatorIcon(): string {\n    return this._separatorIcon;\n  }\n  public set separatorIcon(separatorIcon: string) {\n    this._separatorIcon = separatorIcon;\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  // Should show the right chevron or not before the label\n  public get displayIcon(): boolean {\n    return this._displayIcon;\n  }\n  public set displayIcon(displayIcon: boolean) {\n    this._displayIcon = displayIcon;\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  get displayCrumb(): boolean {\n    return this._displayCrumb;\n  }\n\n  /**\n   * Whether to display the crumb or not\n   */\n  set displayCrumb(shouldDisplay: boolean) {\n    this._displayCrumb = shouldDisplay;\n    setTimeout(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Width of the DOM element of the crumb\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Gets the display style of the crumb\n   */\n  @HostBinding('style.display')\n  get displayBinding(): string {\n    // Set the display to none on the component, just in case the end user is hiding\n    // and showing them instead of the component doing itself for reasons like responsive\n    return this._displayCrumb ? undefined : 'none';\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    // set the width from the actual rendered DOM element\n    setTimeout(() => {\n      this._width = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().width;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /**\n   * Stop click propagation when clicking on icon\n   */\n  _handleIconClick(event: Event): void {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {\n  Component,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  DoCheck,\n  ChangeDetectorRef,\n  ElementRef,\n  Input,\n} from '@angular/core';\n\nimport { Subscription, Subject, fromEvent, merge } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@Component({\n  selector: 'td-breadcrumbs',\n  styleUrls: ['./breadcrumbs.component.scss'],\n  templateUrl: './breadcrumbs.component.html',\n  /* tslint:disable-next-line */\n  host: {\n    class: 'td-breadcrumbs',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdBreadcrumbsComponent implements OnInit, DoCheck, AfterContentInit, OnDestroy {\n  private _resizeSubscription: Subscription = Subscription.EMPTY;\n  private _widthSubject: Subject<number> = new Subject<number>();\n  private _contentChildrenSub: Subscription;\n  private _resizing: boolean = false;\n  private _separatorIcon: string = 'chevron_right';\n\n  // all the sub components, which are the individual breadcrumbs\n  @ContentChildren(TdBreadcrumbComponent, { descendants: true }) _breadcrumbs: QueryList<TdBreadcrumbComponent>;\n  // the list of hidden breadcrumbs not shown right now (responsive)\n  hiddenBreadcrumbs: TdBreadcrumbComponent[] = [];\n\n  /**\n   * Sets the icon url shown between breadcrumbs. Defaults to 'chevron_right'.\n   */\n  @Input() public set separatorIcon(separatorIcon: string) {\n    this._separatorIcon = separatorIcon;\n    this.setCrumbIcons();\n  }\n  public get separatorIcon(): string {\n    return this._separatorIcon;\n  }\n\n  constructor(private _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this._resizeSubscription = merge(\n      fromEvent(window, 'resize').pipe(debounceTime(10)),\n      this._widthSubject.asObservable().pipe(distinctUntilChanged()),\n    ).subscribe(() => {\n      if (!this._resizing) {\n        this._resizing = true;\n        setTimeout(() => {\n          this._calculateVisibility();\n          this._resizing = false;\n          this._changeDetectorRef.markForCheck();\n        }, 100);\n      }\n    });\n  }\n\n  ngDoCheck(): void {\n    if (this._elementRef && this._elementRef.nativeElement) {\n      this._widthSubject.next(this.nativeElementWidth);\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._contentChildrenSub = this._breadcrumbs.changes.pipe(startWith(this._breadcrumbs)).subscribe(() => {\n      this.setCrumbIcons();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._resizeSubscription.unsubscribe();\n    this._contentChildrenSub.unsubscribe();\n  }\n\n  /*\n   * Current width of the element container\n   */\n  get nativeElementWidth(): number {\n    const element: HTMLElement = <HTMLElement>this._elementRef.nativeElement;\n    // Need to take into account border, margin and padding that might be around all the crumbs\n    const style: CSSStyleDeclaration = window.getComputedStyle(element);\n    const borderLeft: number = parseInt(style.borderLeft, 10);\n    const borderRight: number = parseInt(style.borderRight, 10);\n    const marginLeft: number = parseInt(style.marginLeft, 10);\n    const marginRight: number = parseInt(style.marginRight, 10);\n    const paddingLeft: number = parseInt(style.paddingLeft, 10);\n    const paddingRight: number = parseInt(style.paddingRight, 10);\n\n    return (\n      element.getBoundingClientRect().width -\n      borderLeft -\n      borderRight -\n      marginLeft -\n      marginRight -\n      paddingLeft -\n      paddingRight\n    );\n  }\n\n  /**\n   * The total count of individual breadcrumbs\n   */\n  get count(): number {\n    return this._breadcrumbs ? this._breadcrumbs.length : 0;\n  }\n\n  /**\n   * Set the crumb icon separators\n   */\n  private setCrumbIcons(): void {\n    if (this._breadcrumbs) {\n      const breadcrumbArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n      breadcrumbArray.forEach((breadcrumb: TdBreadcrumbComponent, index: number) => {\n        breadcrumb.separatorIcon = this.separatorIcon;\n        // don't show the icon on the last breadcrumb\n        breadcrumb.displayIcon = index < breadcrumbArray.length - 1;\n      });\n    }\n  }\n\n  private _calculateVisibility(): void {\n    const crumbsArray: TdBreadcrumbComponent[] = this._breadcrumbs.toArray();\n    let crumbWidthSum: number = 0;\n    const hiddenCrumbs: TdBreadcrumbComponent[] = [];\n    // loop through crumbs in reverse order to calculate which ones should be removed\n    for (let i: number = crumbsArray.length - 1; i >= 0; i--) {\n      const breadcrumb: TdBreadcrumbComponent = crumbsArray[i];\n      // if crumb exceeds width, then we skip it from the sum and add it into the hiddencrumbs array\n      // and hide it\n      if (crumbWidthSum + breadcrumb.width > this.nativeElementWidth) {\n        breadcrumb.displayCrumb = false;\n        hiddenCrumbs.push(breadcrumb);\n      } else {\n        // else we show it\n        breadcrumb.displayCrumb = true;\n      }\n      crumbWidthSum += breadcrumb.width;\n    }\n    this.hiddenBreadcrumbs = hiddenCrumbs;\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TdBreadcrumbsComponent } from './breadcrumbs.component';\nimport { TdBreadcrumbComponent } from './breadcrumb/breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, MatIconModule],\n  declarations: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n  exports: [TdBreadcrumbsComponent, TdBreadcrumbComponent],\n})\nexport class CovalentBreadcrumbsModule {}\n"],"names":[],"mappings":"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"}