["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs.core.async.impl.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$remove!",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","~:line",32,"~:column",4,"~:end-line",32,"~:end-column",11,"~:protocol","~$cljs.core.async.impl.protocols/Buffer","~:doc","remove and return next item from buffer, called under chan mutex","~:arglists",["~#list",["~$quote",["^J",[["~$b"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/remove!","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",11,"~:method-params",["^J",[["~$b"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^C",1,"~:variadic?",false,"^B",30,"~:ret-tag","~$any","^D",32,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[["~$b"]]]]],"^H","remove and return next item from buffer, called under chan mutex"],"~$close-buf!",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",34,"^C",4,"^D",34,"^E",14,"^F","^G","^H","called on chan closed under chan mutex, return ignored","^I",["^J",["^K",["^J",[["~$b"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/close-buf!","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",14,"^M",["^J",[["~$b"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",30,"^Q","^R","^D",34,"^S",1,"^T",true,"^I",["^J",["^K",["^J",[["~$b"]]]]],"^H","called on chan closed under chan mutex, return ignored"],"~$close!",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",21,"^C",4,"^D",21,"^E",10,"^F","~$cljs.core.async.impl.protocols/Channel","^H",null,"^I",["^J",["^K",["^J",[["~$chan"]]]]]],"^F","^X","^7","~$cljs.core.async.impl.protocols/close!","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",10,"^M",["^J",[["^Y"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",20,"^Q","^R","^D",21,"^S",1,"^T",true,"^I",["^J",["^K",["^J",[["^Y"]]]]],"^H",null],"~$Handler",["^ ","^@",["^ ","~:protocol-symbol",true,"^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",21,"^C",14,"^B",24,"~:protocol-info",["^ ","~:methods",["^ ","~$active?",[["~$h"]],"~$blockable?",[["~$h"]],"~$commit",[["~$h"]]]],"^D",24,"~:sigs",["^ ","~:active?",["^ ","^7","^13","^I",["^J",[["~$h"]]],"^H","returns true if has callback. Must work w/o lock"],"~:blockable?",["^ ","^7","^14","^I",["^J",[["~$h"]]],"^H","returns true if this handler may be blocked, otherwise it must not block"],"~:commit",["^ ","^7","^15","^I",["^J",[["~$h"]]],"^H","commit to fulfilling its end of the transfer, returns cb. Must be called within lock"]],"~:jsdoc",["^J",["@interface"]]],"^10",true,"^7","~$cljs.core.async.impl.protocols/Handler","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",21,"^C",1,"^B",24,"^11",["^ ","^12",["^ ","^13",[["~$h"]],"^14",[["~$h"]],"^15",[["~$h"]]]],"~:info",null,"^D",24,"~:tag","^R","^16",["^ ","^17",["^ ","^7","^13","^I",["^J",[["~$h"]]],"^H","returns true if has callback. Must work w/o lock"],"^18",["^ ","^7","^14","^I",["^J",[["~$h"]]],"^H","returns true if this handler may be blocked, otherwise it must not block"],"^19",["^ ","^7","^15","^I",["^J",[["~$h"]]],"^H","commit to fulfilling its end of the transfer, returns cb. Must be called within lock"]],"~:impls",["^6",[]],"^1:",["^J",["@interface"]]],"^14",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",26,"^C",4,"^D",26,"^E",14,"^F","^1;","^H","returns true if this handler may be blocked, otherwise it must not block","^I",["^J",["^K",["^J",[["~$h"]]]]]],"^F","^1;","^7","~$cljs.core.async.impl.protocols/blockable?","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",14,"^M",["^J",[["~$h"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",24,"^Q","^R","^D",26,"^S",1,"^T",true,"^I",["^J",["^K",["^J",[["~$h"]]]]],"^H","returns true if this handler may be blocked, otherwise it must not block"],"^13",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",25,"^C",4,"^D",25,"^E",11,"^F","^1;","^H","returns true if has callback. Must work w/o lock","^I",["^J",["^K",["^J",[["~$h"]]]]]],"^F","^1;","^7","~$cljs.core.async.impl.protocols/active?","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",11,"^M",["^J",[["~$h"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",24,"^Q","^R","^D",25,"^S",1,"^T",true,"^I",["^J",["^K",["^J",[["~$h"]]]]],"^H","returns true if has callback. Must work w/o lock"],"~$Buffer",["^ ","^@",["^ ","^10",true,"^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",20,"^C",14,"^B",30,"^11",["^ ","^12",["^ ","~$full?",[["~$b"]],"^>",[["~$b"]],"~$add!*",[["~$b","~$itm"]],"^U",[["~$b"]]]],"^D",30,"^16",["^ ","~:full?",["^ ","^7","^1B","^I",["^J",[["~$b"]]],"^H","returns true if buffer cannot accept put"],"~:remove!",["^ ","^7","^>","^I",["^J",[["~$b"]]],"^H","remove and return next item from buffer, called under chan mutex"],"~:add!*",["^ ","^7","^1C","^I",["^J",[["~$b","^1D"]]],"^H","if room, add item to the buffer, returns b, called under chan mutex"],"~:close-buf!",["^ ","^7","^U","^I",["^J",[["~$b"]]],"^H","called on chan closed under chan mutex, return ignored"]],"^1:",["^J",["@interface"]]],"^10",true,"^7","^G","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",20,"^C",1,"^B",30,"^11",["^ ","^12",["^ ","^1B",[["~$b"]],"^>",[["~$b"]],"^1C",[["~$b","^1D"]],"^U",[["~$b"]]]],"^1<",null,"^D",30,"^1=","^R","^16",["^ ","^1E",["^ ","^7","^1B","^I",["^J",[["~$b"]]],"^H","returns true if buffer cannot accept put"],"^1F",["^ ","^7","^>","^I",["^J",[["~$b"]]],"^H","remove and return next item from buffer, called under chan mutex"],"^1G",["^ ","^7","^1C","^I",["^J",[["~$b","^1D"]]],"^H","if room, add item to the buffer, returns b, called under chan mutex"],"^1H",["^ ","^7","^U","^I",["^J",[["~$b"]]],"^H","called on chan closed under chan mutex, return ignored"]],"^1>",["^6",[]],"^1:",["^J",["@interface"]]],"^1B",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",31,"^C",4,"^D",31,"^E",9,"^F","^G","^H","returns true if buffer cannot accept put","^I",["^J",["^K",["^J",[["~$b"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/full?","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",9,"^M",["^J",[["~$b"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",30,"^Q","^R","^D",31,"^S",1,"^T",true,"^I",["^J",["^K",["^J",[["~$b"]]]]],"^H","returns true if buffer cannot accept put"],"~$add!",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",36,"^C",7,"^D",36,"^E",11,"^I",["^J",["^K",["^J",[["~$b"],["~$b","^1D"]]]]],"~:top-fn",["^ ","^P",false,"~:fixed-arity",2,"^S",2,"^M",["^J",[["~$b"],["~$b","^1D"]]],"^I",["^J",[["~$b"],["~$b","^1D"]]],"^O",["^J",[null,null]]]],"^7","~$cljs.core.async.impl.protocols/add!","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",11,"^1K",["^ ","^P",false,"^1L",2,"^S",2,"^M",["^J",[["~$b"],["~$b","^1D"]]],"^I",["^J",[["~$b"],["~$b","^1D"]]],"^O",["^J",[null,null]]],"^M",["^J",[["~$b"],["~$b","^1D"]]],"^N",null,"^1L",2,"^O",["^J",[null,null]],"^C",1,"^P",false,"^12",[["^ ","^1L",1,"^P",false],["^ ","^1L",2,"^P",false,"^1=","^R"]],"^B",36,"^D",36,"^S",2,"^T",true,"^I",["^J",[["~$b"],["~$b","^1D"]]]],"^1C",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",33,"^C",4,"^D",33,"^E",9,"^F","^G","^H","if room, add item to the buffer, returns b, called under chan mutex","^I",["^J",["^K",["^J",[["~$b","^1D"]]]]]],"^F","^G","^7","~$cljs.core.async.impl.protocols/add!*","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",9,"^M",["^J",[["~$b","^1D"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",30,"^Q","^R","^D",33,"^S",2,"^T",true,"^I",["^J",["^K",["^J",[["~$b","^1D"]]]]],"^H","if room, add item to the buffer, returns b, called under chan mutex"],"~$ReadPort",["^ ","^@",["^ ","^10",true,"^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",22,"^C",14,"^B",13,"^11",["^ ","^12",["^ ","~$take!",[["~$port","~$fn1-handler"]]]],"^D",13,"^16",["^ ","~:take!",["^ ","^7","^1P","^I",["^J",[["^1Q","^1R"]]],"^H","derefable val if taken, nil if take was enqueued"]],"^1:",["^J",["@interface"]]],"^10",true,"^7","~$cljs.core.async.impl.protocols/ReadPort","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",22,"^C",1,"^B",13,"^11",["^ ","^12",["^ ","^1P",[["^1Q","^1R"]]]],"^1<",null,"^D",13,"^1=","^R","^16",["^ ","^1S",["^ ","^7","^1P","^I",["^J",[["^1Q","^1R"]]],"^H","derefable val if taken, nil if take was enqueued"]],"^1>",["^6",[]],"^1:",["^J",["@interface"]]],"~$Channel",["^ ","^@",["^ ","^10",true,"^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",21,"^C",14,"^B",20,"^11",["^ ","^12",["^ ","^W",[["^Y"]],"~$closed?",[["^Y"]]]],"^D",20,"^16",["^ ","~:close!",["^ ","^7","^W","^I",["^J",[["^Y"]]],"^H",null],"~:closed?",["^ ","^7","^1V","^I",["^J",[["^Y"]]],"^H",null]],"^1:",["^J",["@interface"]]],"^10",true,"^7","^X","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",21,"^C",1,"^B",20,"^11",["^ ","^12",["^ ","^W",[["^Y"]],"^1V",[["^Y"]]]],"^1<",null,"^D",20,"^1=","^R","^16",["^ ","^1W",["^ ","^7","^W","^I",["^J",[["^Y"]]],"^H",null],"^1X",["^ ","^7","^1V","^I",["^J",[["^Y"]]],"^H",null]],"^1>",["^6",[]],"^1:",["^J",["@interface"]]],"^1V",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",22,"^C",4,"^D",22,"^E",11,"^F","^X","^H",null,"^I",["^J",["^K",["^J",[["^Y"]]]]]],"^F","^X","^7","~$cljs.core.async.impl.protocols/closed?","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",11,"^M",["^J",[["^Y"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",20,"^Q","^R","^D",22,"^S",1,"^T",true,"^I",["^J",["^K",["^J",[["^Y"]]]]],"^H",null],"~$UnblockingBuffer",["^ ","^@",["^ ","^10",true,"^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",30,"^C",14,"^B",43,"^11",["^ ","^12",["^ "]],"^D",43,"^16",["^ "],"^1:",["^J",["@interface"]]],"^10",true,"^7","~$cljs.core.async.impl.protocols/UnblockingBuffer","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",30,"^C",1,"^B",43,"^11",["^ ","^12",["^ "]],"^1<",null,"^D",43,"^1=","^R","^16",["^ "],"^1>",["^6",[]],"^1:",["^J",["@interface"]]],"~$MAX-QUEUE-SIZE",["^ ","^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",11,"^C",14,"^D",11,"^E",28,"~:const",true],"^7","~$cljs.core.async.impl.protocols/MAX-QUEUE-SIZE","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",28,"~:const-expr",["^ ","~:op","^21","~:val",1024,"~:env",["^ ","~:context","~:expr"],"~:form",1024,"^1=","~$number"],"^C",1,"^21",true,"^B",11,"^D",11,"^1=","^2:"],"^15",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",28,"^C",4,"^D",28,"^E",10,"^F","^1;","^H","commit to fulfilling its end of the transfer, returns cb. Must be called within lock","^I",["^J",["^K",["^J",[["~$h"]]]]]],"^F","^1;","^7","~$cljs.core.async.impl.protocols/commit","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",10,"^M",["^J",[["~$h"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",24,"^Q","^R","^D",28,"^S",1,"^T",true,"^I",["^J",["^K",["^J",[["~$h"]]]]],"^H","commit to fulfilling its end of the transfer, returns cb. Must be called within lock"],"~$put!",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",17,"^C",4,"^D",17,"^E",8,"^F","~$cljs.core.async.impl.protocols/WritePort","^H","derefable boolean (false if already closed) if handled, nil if put was enqueued.\n                               Must throw on nil val.","^I",["^J",["^K",["^J",[["^1Q","~$val","^1R"]]]]]],"^F","^2=","^7","~$cljs.core.async.impl.protocols/put!","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",8,"^M",["^J",[["^1Q","^2>","^1R"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",16,"^Q","^R","^D",17,"^S",3,"^T",true,"^I",["^J",["^K",["^J",[["^1Q","^2>","^1R"]]]]],"^H","derefable boolean (false if already closed) if handled, nil if put was enqueued.\n                               Must throw on nil val."],"^1P",["^ ","^?",null,"^@",["^ ","^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^B",14,"^C",4,"^D",14,"^E",9,"^F","^1T","^H","derefable val if taken, nil if take was enqueued","^I",["^J",["^K",["^J",[["^1Q","^1R"]]]]]],"^F","^1T","^7","~$cljs.core.async.impl.protocols/take!","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",9,"^M",["^J",[["^1Q","^1R"]]],"^N",null,"^O",["^J",[null,null]],"^C",1,"^P",false,"^B",13,"^Q","^R","^D",14,"^S",2,"^T",true,"^I",["^J",["^K",["^J",[["^1Q","^1R"]]]]],"^H","derefable val if taken, nil if take was enqueued"],"~$WritePort",["^ ","^@",["^ ","^10",true,"^A","/Users/rchaves/Projects/npm-force-resolutions/.cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",23,"^C",14,"^B",16,"^11",["^ ","^12",["^ ","^2<",[["^1Q","^2>","^1R"]]]],"^D",16,"^16",["^ ","~:put!",["^ ","^7","^2<","^I",["^J",[["^1Q","^2>","^1R"]]],"^H","derefable boolean (false if already closed) if handled, nil if put was enqueued.\n                               Must throw on nil val."]],"^1:",["^J",["@interface"]]],"^10",true,"^7","^2=","^A",".cljs_node_repl/cljs/core/async/impl/protocols.cljs","^E",23,"^C",1,"^B",16,"^11",["^ ","^12",["^ ","^2<",[["^1Q","^2>","^1R"]]]],"^1<",null,"^D",16,"^1=","^R","^16",["^ ","^2B",["^ ","^7","^2<","^I",["^J",[["^1Q","^2>","^1R"]]],"^H","derefable boolean (false if already closed) if handled, nil if put was enqueued.\n                               Must throw on nil val."]],"^1>",["^6",[]],"^1:",["^J",["@interface"]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^H",null]