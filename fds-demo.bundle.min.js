/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = window["webpackHotUpdate"];
/******/ 	window["webpackHotUpdate"] = // eslint-disable-next-line no-unused-vars
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) {
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadUpdateChunk(chunkId) {
/******/ 		var script = document.createElement("script");
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		if (null) script.crossOrigin = null;
/******/ 		document.head.appendChild(script);
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotDownloadManifest(requestTimeout) {
/******/ 		requestTimeout = requestTimeout || 10000;
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if (typeof XMLHttpRequest === "undefined") {
/******/ 				return reject(new Error("No browser support"));
/******/ 			}
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = requestTimeout;
/******/ 				request.send(null);
/******/ 			} catch (err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if (request.readyState !== 4) return;
/******/ 				if (request.status === 0) {
/******/ 					// timeout
/******/ 					reject(
/******/ 						new Error("Manifest request to " + requestPath + " timed out.")
/******/ 					);
/******/ 				} else if (request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if (request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch (e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}
/******/
/******/ 	var hotApplyOnUpdate = true;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentHash = "4ff01a0e327eddef25f9";
/******/ 	var hotRequestTimeout = 10000;
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentChildModule;
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParents = [];
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = [];
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateRequire(moduleId) {
/******/ 		var me = installedModules[moduleId];
/******/ 		if (!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if (me.hot.active) {
/******/ 				if (installedModules[request]) {
/******/ 					if (installedModules[request].parents.indexOf(moduleId) === -1) {
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					}
/******/ 				} else {
/******/ 					hotCurrentParents = [moduleId];
/******/ 					hotCurrentChildModule = request;
/******/ 				}
/******/ 				if (me.children.indexOf(request) === -1) {
/******/ 					me.children.push(request);
/******/ 				}
/******/ 			} else {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" +
/******/ 						request +
/******/ 						") from disposed module " +
/******/ 						moduleId
/******/ 				);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for (var name in __webpack_require__) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(__webpack_require__, name) &&
/******/ 				name !== "e" &&
/******/ 				name !== "t"
/******/ 			) {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId) {
/******/ 			if (hotStatus === "ready") hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 				finishChunkLoading();
/******/ 				throw err;
/******/ 			});
/******/
/******/ 			function finishChunkLoading() {
/******/ 				hotChunksLoading--;
/******/ 				if (hotStatus === "prepare") {
/******/ 					if (!hotWaitingFilesMap[chunkId]) {
/******/ 						hotEnsureUpdateChunk(chunkId);
/******/ 					}
/******/ 					if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 						hotUpdateDownloaded();
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		fn.t = function(value, mode) {
/******/ 			if (mode & 1) value = fn(value);
/******/ 			return __webpack_require__.t(value, mode & ~1);
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotCreateModule(moduleId) {
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotCurrentChildModule !== moduleId,
/******/
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if (dep === undefined) hot._selfAccepted = true;
/******/ 				else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if (dep === undefined) hot._selfDeclined = true;
/******/ 				else if (typeof dep === "object")
/******/ 					for (var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if (!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if (idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotCurrentChildModule = undefined;
/******/ 		return hot;
/******/ 	}
/******/
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for (var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = +id + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/
/******/ 	function hotCheck(apply) {
/******/ 		if (hotStatus !== "idle") {
/******/ 			throw new Error("check() is only allowed in idle status");
/******/ 		}
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest(hotRequestTimeout).then(function(update) {
/******/ 			if (!update) {
/******/ 				hotSetStatus("idle");
/******/ 				return null;
/******/ 			}
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			for(var chunkId in installedChunks)
/******/ 			// eslint-disable-next-line no-lone-blocks
/******/ 			{
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if (
/******/ 				hotStatus === "prepare" &&
/******/ 				hotChunksLoading === 0 &&
/******/ 				hotWaitingFiles === 0
/******/ 			) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/
/******/ 	// eslint-disable-next-line no-unused-vars
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) {
/******/ 		if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for (var moduleId in moreModules) {
/******/ 			if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if (!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if (!deferred) return;
/******/ 		if (hotApplyOnUpdate) {
/******/ 			// Wrap deferred object in Promise to mark it as a well-handled Promise to
/******/ 			// avoid triggering uncaught exception warning in Chrome.
/******/ 			// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666
/******/ 			Promise.resolve()
/******/ 				.then(function() {
/******/ 					return hotApply(hotApplyOnUpdate);
/******/ 				})
/******/ 				.then(
/******/ 					function(result) {
/******/ 						deferred.resolve(result);
/******/ 					},
/******/ 					function(err) {
/******/ 						deferred.reject(err);
/******/ 					}
/******/ 				);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for (var id in hotUpdate) {
/******/ 				if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/
/******/ 	function hotApply(options) {
/******/ 		if (hotStatus !== "ready")
/******/ 			throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/
/******/ 			var queue = outdatedModules.map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while (queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if (!module || module.hot._selfAccepted) continue;
/******/ 				if (module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if (module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for (var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if (!parent) continue;
/******/ 					if (parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 					if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if (!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/
/******/ 		function addAllToSet(a, b) {
/******/ 			for (var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if (a.indexOf(item) === -1) a.push(item);
/******/ 			}
/******/ 		}
/******/
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn(
/******/ 				"[HMR] unexpected require(" + result.moduleId + ") to disposed module"
/******/ 			);
/******/ 		};
/******/
/******/ 		for (var id in hotUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				/** @type {TODO} */
/******/ 				var result;
/******/ 				if (hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				/** @type {Error|false} */
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if (result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch (result.type) {
/******/ 					case "self-declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of self decline: " +
/******/ 									result.moduleId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if (options.onDeclined) options.onDeclined(result);
/******/ 						if (!options.ignoreDeclined)
/******/ 							abortError = new Error(
/******/ 								"Aborted because of declined dependency: " +
/******/ 									result.moduleId +
/******/ 									" in " +
/******/ 									result.parentId +
/******/ 									chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 						if (!options.ignoreUnaccepted)
/******/ 							abortError = new Error(
/******/ 								"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 							);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if (options.onAccepted) options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if (options.onDisposed) options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if (abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if (doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for (moduleId in result.outdatedDependencies) {
/******/ 						if (
/******/ 							Object.prototype.hasOwnProperty.call(
/******/ 								result.outdatedDependencies,
/******/ 								moduleId
/******/ 							)
/******/ 						) {
/******/ 							if (!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(
/******/ 								outdatedDependencies[moduleId],
/******/ 								result.outdatedDependencies[moduleId]
/******/ 							);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if (doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for (i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if (
/******/ 				installedModules[moduleId] &&
/******/ 				installedModules[moduleId].hot._selfAccepted &&
/******/ 				// removed self-accepted modules should not be required
/******/ 				appliedUpdate[moduleId] !== warnUnexpectedRequire
/******/ 			) {
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 			}
/******/ 		}
/******/
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if (hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while (queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if (!module) continue;
/******/
/******/ 			var data = {};
/******/
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for (j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/
/******/ 			// when disposing there is no need to call dispose handler
/******/ 			delete outdatedDependencies[moduleId];
/******/
/******/ 			// remove "parents" references from all children
/******/ 			for (j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if (!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if (idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if (idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Now in "apply" phase
/******/ 		hotSetStatus("apply");
/******/
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/
/******/ 		// insert new code
/******/ 		for (moduleId in appliedUpdate) {
/******/ 			if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for (moduleId in outdatedDependencies) {
/******/ 			if (
/******/ 				Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
/******/ 			) {
/******/ 				module = installedModules[moduleId];
/******/ 				if (module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					var callbacks = [];
/******/ 					for (i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 						dependency = moduleOutdatedDependencies[i];
/******/ 						cb = module.hot._acceptedDependencies[dependency];
/******/ 						if (cb) {
/******/ 							if (callbacks.indexOf(cb) !== -1) continue;
/******/ 							callbacks.push(cb);
/******/ 						}
/******/ 					}
/******/ 					for (i = 0; i < callbacks.length; i++) {
/******/ 						cb = callbacks[i];
/******/ 						try {
/******/ 							cb(moduleOutdatedDependencies);
/******/ 						} catch (err) {
/******/ 							if (options.onErrored) {
/******/ 								options.onErrored({
/******/ 									type: "accept-errored",
/******/ 									moduleId: moduleId,
/******/ 									dependencyId: moduleOutdatedDependencies[i],
/******/ 									error: err
/******/ 								});
/******/ 							}
/******/ 							if (!options.ignoreErrored) {
/******/ 								if (!error) error = err;
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// Load self accepted modules
/******/ 		for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch (err) {
/******/ 				if (typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch (err2) {
/******/ 						if (options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								originalError: err
/******/ 							});
/******/ 						}
/******/ 						if (!options.ignoreErrored) {
/******/ 							if (!error) error = err2;
/******/ 						}
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if (options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if (!options.ignoreErrored) {
/******/ 						if (!error) error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if (error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/
/******/ 		hotSetStatus("idle");
/******/ 		return new Promise(function(resolve) {
/******/ 			resolve(outdatedModules);
/******/ 		});
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"fds-demo.bundle.min": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./webapp/fds-bootstrap.js","fds-demo.vendor.min"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@angular/core/fesm5 lazy recursive":
/*!****************************************************************!*\
  !*** ./node_modules/@angular/core/fesm5 lazy namespace object ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./node_modules/@angular/core/fesm5 lazy recursive";

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: //, name, version, scripts, husky, description, module, keywords, repository, bugs, license, dependencies, devDependencies, engines, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"//\":\"limitations under the License.\",\"name\":\"nifi-fds\",\"version\":\"0.2.0\",\"scripts\":{\"start\":\"./node_modules/http-server/bin/http-server --gzip -p 28080 .\",\"build:webapp:bundle:development\":\"npm run webpack:development\",\"build:webapp:bundle:production\":\"npm run webpack:production\",\"clean:install\":\"bash ./scripts/clean-install\",\"clean:install:skipTests\":\"bash ./scripts/clean-install-skipTests\",\"dev:install\":\"bash ./scripts/dev-install\",\"dev:install:skipTests\":\"bash ./scripts/dev-install-skipTests\",\"publish\":\"bash ./scripts/npm-publish\",\"test\":\"karma start karma.conf.js --single-run\",\"test:dev\":\"karma start karma.conf.js\",\"watch\":\"npm run webpack:development && ./node_modules/.bin/webpack-dev-server --config webpack.dev.js\",\"webpack:analyze\":\"./node_modules/.bin/webpack-bundle-analyzer webpack-build-log.json ./\",\"webpack:development\":\"./node_modules/.bin/webpack --config webpack.dev.js\",\"webpack:production\":\"npm run lint && ./node_modules/.bin/webpack --config webpack.prod.js --json --progress --profile > webpack-build-log.json\",\"eslint\":\"./node_modules/.bin/eslint './webapp/**/*.js' './platform/**/*.js'\",\"stylelint\":\"./node_modules/.bin/stylelint './webapp/theming/**/*.scss' './platform/**/*.scss'\",\"lint\":\"npm run eslint && npm run stylelint\"},\"husky\":{\"hooks\":{\"pre-commit\":\"npm run lint\",\"pre-push\":\"npm run test\"}},\"description\":\"The Apache NiFi Flow Design System module is an atomic reusable platform providing consistent set of UI/UX components for open source friendly web applications to consume.\",\"module\":\"./platform/core/flow-design-system.module.js\",\"keywords\":[\"flow design system\",\"angular\",\"material\",\"material design\",\"components\",\"reusable\",\"nifi-fds\",\"covalent\"],\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/apache/nifi-fds.git\"},\"bugs\":{\"url\":\"https://github.com/apache/nifi-fds/issues\"},\"license\":\"Apache-2.0\",\"dependencies\":{\"@angular/animations\":\"8.1.1\",\"@angular/cdk\":\"8.1.0\",\"@angular/common\":\"8.1.1\",\"@angular/compiler\":\"8.1.1\",\"@angular/core\":\"8.1.1\",\"@angular/flex-layout\":\"8.0.0-beta.26\",\"@angular/forms\":\"8.1.1\",\"@angular/http\":\"8.0.0-beta.10\",\"@angular/material\":\"8.1.0\",\"@angular/platform-browser\":\"8.1.1\",\"@angular/platform-browser-dynamic\":\"8.1.1\",\"@angular/router\":\"8.1.1\",\"@covalent/core\":\"2.1.0\",\"detect-libc\":\"1.0.3\",\"font-awesome\":\"4.7.0\",\"hammerjs\":\"2.0.8\",\"jquery\":\"3.4.1\",\"roboto-fontface\":\"0.10.0\",\"rxjs\":\"6.5.2\",\"zone.js\":\"0.9.1\"},\"devDependencies\":{\"@babel/core\":\"7.5.4\",\"@babel/preset-env\":\"7.5.4\",\"@babel/runtime\":\"7.5.4\",\"@types/core-js\":\"2.5.2\",\"@typescript-eslint/eslint-plugin\":\"1.12.0\",\"@typescript-eslint/parser\":\"1.12.0\",\"babel-eslint\":\"10.0.2\",\"babel-loader\":\"8.0.6\",\"babel-plugin-istanbul\":\"5.1.4\",\"babel-polyfill\":\"6.26.0\",\"cache-loader\":\"4.0.1\",\"compression-webpack-plugin\":\"3.0.0\",\"css-loader\":\"3.0.0\",\"dtsgenerator\":\"2.0.8\",\"eslint\":\"6.0.1\",\"eslint-config-airbnb\":\"17.1.1\",\"eslint-plugin-import\":\"2.18.0\",\"eslint-plugin-jsx-a11y\":\"6.2.3\",\"eslint-plugin-react\":\"7.14.2\",\"file-loader\":\"4.0.0\",\"grunt\":\"1.0.4\",\"grunt-bump\":\"0.8.0\",\"grunt-cli\":\"1.3.2\",\"html-loader\":\"0.5.5\",\"html-webpack-plugin\":\"3.2.0\",\"http-server\":\"0.11.1\",\"husky\":\"3.0.0\",\"istanbul-instrumenter-loader\":\"3.0.1\",\"jasmine\":\"3.4.0\",\"karma\":\"4.2.0\",\"karma-chrome-launcher\":\"3.0.0\",\"karma-cli\":\"2.0.0\",\"karma-coverage\":\"1.1.2\",\"karma-coverage-istanbul-reporter\":\"2.0.5\",\"karma-jasmine\":\"2.0.1\",\"karma-jasmine-html-reporter\":\"1.4.2\",\"karma-spec-reporter\":\"0.0.32\",\"karma-webpack\":\"4.0.2\",\"license-webpack-plugin\":\"2.1.1\",\"load-grunt-tasks\":\"5.0.0\",\"mini-css-extract-plugin\":\"0.7.0\",\"node-sass\":\"4.12.0\",\"null-loader\":\"3.0.0\",\"optimize-css-assets-webpack-plugin\":\"5.0.3\",\"sass-loader\":\"7.1.0\",\"style-loader\":\"0.23.1\",\"stylelint\":\"10.1.0\",\"stylelint-config-standard\":\"18.3.0\",\"terser-webpack-plugin\":\"1.3.0\",\"ts-loader\":\"6.0.4\",\"typescript\":\"3.5.3\",\"webpack\":\"4.35.3\",\"webpack-bundle-analyzer\":\"3.3.2\",\"webpack-cli\":\"3.3.6\",\"webpack-dev-server\":\"3.7.2\",\"webpack-fix-style-only-entries\":\"0.3.0\",\"webpack-merge\":\"4.2.1\"},\"engines\":{\"node\":\"=8.10.0\",\"npm\":\"=5.6.0\"}}");

/***/ }),

/***/ "./platform/core/common/fds-common.module.js":
/*!***************************************************!*\
  !*** ./platform/core/common/fds-common.module.js ***!
  \***************************************************/
/*! exports provided: FdsCommonsModule, FdsStorageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsCommonsModule", function() { return FdsCommonsModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _services_fds_storage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/fds-storage.service */ "./platform/core/common/services/fds-storage.service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsStorageService", function() { return _services_fds_storage_service__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * FdsCommonsModule constructor.
 *
 * @constructor
 */

function FdsCommonsModule() {}

FdsCommonsModule.prototype = {
  constructor: FdsCommonsModule
};
FdsCommonsModule.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"]({
  imports: [],
  declarations: [],
  exports: [],
  providers: [_services_fds_storage_service__WEBPACK_IMPORTED_MODULE_1__["default"]]
})];


/***/ }),

/***/ "./platform/core/common/fds.animations.js":
/*!************************************************!*\
  !*** ./platform/core/common/fds.animations.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/fesm5/animations.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * FdsAnimations constructor.
 *
 * @constructor
 */

function FdsAnimations() {}

FdsAnimations.prototype = {
  constructor: FdsAnimations,

  /**
   * Fade animation
   */
  fadeAnimation: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routeAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 1
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':enter', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':leave', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0
  }))])]),

  /**
   * Slide in from the left animation
   */
  slideInLeftAnimation: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routeAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 1,
    transform: 'translateX(0)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':enter', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0,
    transform: 'translateX(-100%)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':leave', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0,
    transform: 'translateX(100%)'
  }))])]),

  /**
   * Slide in from the top animation
   */
  slideInDownAnimation: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routeAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 1,
    transform: 'translateY(0)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':enter', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0,
    transform: 'translateY(-100%)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(':leave', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0,
    transform: 'translateY(100%)'
  }))])]),

  /**
   * Fly in/out animation
   */
  flyInOutAnimation: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('flyInOut', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('in', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    transform: 'translateX(0)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])('void => *', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    transform: 'translateX(100%)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.4s 0.1s ease-in')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.2s ease-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    transform: 'translateX(-100%)'
  })))]),

  /**
   * Fly in/out animation
   */
  fadeInOutAnimation: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('fadeInOut', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["state"])('in', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 1
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])('void => *', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s 0.1s ease-in')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
    opacity: 0
  })))])
};
/* harmony default export */ __webpack_exports__["default"] = (new FdsAnimations());

/***/ }),

/***/ "./platform/core/common/services/fds-storage.service.js":
/*!**************************************************************!*\
  !*** ./platform/core/common/services/fds-storage.service.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Store items for two days before being eligible for removal.
var MILLIS_PER_DAY = 86400000;
var TWO_DAYS = MILLIS_PER_DAY * 2;

var isUndefined = function isUndefined(obj) {
  return typeof obj === 'undefined';
};

var isNull = function isNull(obj) {
  return obj === null;
};

var isDefinedAndNotNull = function isDefinedAndNotNull(obj) {
  return !isUndefined(obj) && !isNull(obj);
};
/**
 * Checks the expiration for the specified entry.
 *
 * @param {object} entry
 * @returns {boolean}
 */


var checkExpiration = function checkExpiration(entry) {
  if (isDefinedAndNotNull(entry.expires)) {
    // get the expiration
    var expires = new Date(entry.expires);
    var now = new Date(); // return whether the expiration date has passed

    return expires.valueOf() < now.valueOf();
  }

  return false;
};
/**
 * Gets an enty for the key. The entry expiration is not checked.
 *
 * @param {string} key
 */


var getEntry = function getEntry(key) {
  try {
    // parse the entry
    var entry = JSON.parse(localStorage.getItem(key)); // ensure the entry and item are present

    if (isDefinedAndNotNull(entry)) {
      return entry;
    }

    return null;
  } catch (e) {
    return null;
  }
};
/**
 * FdsStorageService constructor.
 * @constructor
 */


function FdsStorageService() {}

FdsStorageService.prototype = {
  constructor: FdsStorageService,

  /**
   * Initializes the storage. Items will be persisted for two days. Once the scripts runs
   * thereafter, all eligible items will be removed. This strategy does not support persistence.
   */
  init: function init() {
    for (var i = 0; i < localStorage.length; i++) {
      try {
        // get the next item
        var key = localStorage.key(i); // attempt to get the item which will expire if necessary

        this.getItem(key);
      } catch (e) {// Do nothing
      }
    }
  },

  /**
   * Stores the specified item.
   *
   * @param {string} key
   * @param {object} item
   * @param {integer} expires
   */
  setItem: function setItem(key, item, expires) {
    // calculate the expiration
    expires = isDefinedAndNotNull(expires) ? expires : new Date().valueOf() + TWO_DAYS; // create the entry

    var entry = {
      expires: expires,
      item: item
    }; // store the item

    localStorage.setItem(key, JSON.stringify(entry));
  },

  /**
   * Returns whether there is an entry for this key. This will not check the expiration. If
   * the entry is expired, it will return null on a subsequent getItem invocation.
   *
   * @param {string} key
   * @returns {boolean}
   */
  hasItem: function hasItem(key) {
    return getEntry(key) !== null;
  },

  /**
   * Gets the item with the specified key. If an item with this key does
   * not exist, null is returned. If an item exists but cannot be parsed
   * or is malformed/unrecognized, null is returned.
   *
   * @param {type} key
   */
  getItem: function getItem(key) {
    var entry = getEntry(key);

    if (entry === null) {
      return null;
    } // if the entry is expired, drop it and return null


    if (checkExpiration(entry)) {
      this.removeItem(key);
      return null;
    } // if the entry has the specified field return its value


    if (isDefinedAndNotNull(entry['item'])) {
      return entry['item'];
    }

    return null;
  },

  /**
   * Gets the expiration for the specified item. This will not check the expiration. If
   * the entry is expired, it will return null on a subsequent getItem invocation.
   *
   * @param {string} key
   * @returns {integer}
   */
  getItemExpiration: function getItemExpiration(key) {
    var entry = getEntry(key);

    if (entry === null) {
      return null;
    } // if the entry has the specified field return its value


    if (isDefinedAndNotNull(entry['expires'])) {
      return entry['expires'];
    }

    return null;
  },

  /**
   * Extracts the subject from the specified jwt. If the jwt is not as expected
   * an empty string is returned.
   *
   * @param {string} jwt
   * @returns {string}
   */
  getJwtPayload: function getJwtPayload(jwt) {
    if (isDefinedAndNotNull(jwt)) {
      var segments = jwt.split(/\./);

      if (segments.length !== 3) {
        return '';
      }

      var rawPayload = window.atob(segments[1]);
      var payload = JSON.parse(rawPayload);

      if (isDefinedAndNotNull(payload)) {
        return payload;
      }

      return null;
    }

    return null;
  },

  /**
   * Removes the item with the specified key.
   *
   * @param {type} key
   */
  removeItem: function removeItem(key) {
    localStorage.removeItem(key);
  }
};
FdsStorageService.parameters = [];
/* harmony default export */ __webpack_exports__["default"] = (FdsStorageService);

/***/ }),

/***/ "./platform/core/dialogs/confirm-dialog/confirm-dialog.component.html":
/*!****************************************************************************!*\
  !*** ./platform/core/dialogs/confirm-dialog/confirm-dialog.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<fds-dialog>\n    <fds-dialog-title *ngIf=\"title\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            {{title}}\n            <button mat-icon-button (click)=\"cancel()\">\n                <mat-icon color=\"primary\">close</mat-icon>\n            </button>\n        </div>\n    </fds-dialog-title>\n    <fds-dialog-content class=\"md-subhead tc-grey-700\">\n        {{message}}\n    </fds-dialog-content>\n    <fds-dialog-actions>\n        <button *ngIf=\"cancelButton\" mat-raised-button\n                color=\"{{cancelButtonColor}}\"\n                #closeBtn\n                (keydown.arrowright)=\"acceptBtn.focus()\"\n                (click)=\"cancel()\">{{cancelButton}}\n        </button>\n        <button *ngIf=\"acceptButton\" mat-raised-button\n                color=\"{{acceptButtonColor}}\"\n                #acceptBtn\n                (keydown.arrowleft)=\"closeBtn.focus()\"\n                (click)=\"accept()\"\n                class=\"push-left-sm\">{{acceptButton}}\n        </button>\n    </fds-dialog-actions>\n</fds-dialog>";

/***/ }),

/***/ "./platform/core/dialogs/confirm-dialog/confirm-dialog.component.js":
/*!**************************************************************************!*\
  !*** ./platform/core/dialogs/confirm-dialog/confirm-dialog.component.js ***!
  \**************************************************************************/
/*! exports provided: FdsConfirmDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsConfirmDialogComponent", function() { return FdsConfirmDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * FdsConfirmDialogComponent constructor.
 *
 * @constructor
 */

function FdsConfirmDialogComponent() {
  this.title = '';
  this.message = '';
  this.acceptButton = '';
  this.acceptButtonColor = 'fds-primary';
  this.cancelButton = '';
  this.cancelButtonColor = 'fds-regular';
  this.dialogRef = undefined;
  this.viewContainerRef = undefined;
  this.disableClose = true;
}

FdsConfirmDialogComponent.prototype = {
  constructor: FdsConfirmDialogComponent,

  /**
   * Close the dialog and send a cancel response to any subscribers.
   */
  cancel: function cancel() {
    this.dialogRef.close(false);
  },

  /**
   * Close the dialog and send an accept response to any subscribers.
   */
  accept: function accept() {
    this.dialogRef.close(true);
  }
};
FdsConfirmDialogComponent.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"]({
  selector: 'fds-confirm-dialog',
  template: __webpack_require__(/*! ./confirm-dialog.component.html */ "./platform/core/dialogs/confirm-dialog/confirm-dialog.component.html")})];
FdsConfirmDialogComponent.parameters = [];


/***/ }),

/***/ "./platform/core/dialogs/fds-dialog.component.html":
/*!*********************************************************!*\
  !*** ./platform/core/dialogs/fds-dialog.component.html ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<div class=\"fds-dialog-wrapper\">\n    <h3 class=\"fds-dialog-title md-title\" *ngIf=\"dialogTitle.length > 0\">\n        <ng-content select=\"fds-dialog-title\"></ng-content>\n    </h3>\n    <div class=\"fds-dialog-content pad-bottom-md\" *ngIf=\"dialogContent.length > 0\">\n        <ng-content select=\"fds-dialog-content\"></ng-content>\n    </div>\n    <div class=\"fds-dialog-actions\" *ngIf=\"dialogActions.length > 0\" layout=\"row\">\n        <span flex></span>\n        <ng-content select=\"fds-dialog-actions\"></ng-content>\n    </div>\n</div>\n";

/***/ }),

/***/ "./platform/core/dialogs/fds-dialog.component.js":
/*!*******************************************************!*\
  !*** ./platform/core/dialogs/fds-dialog.component.js ***!
  \*******************************************************/
/*! exports provided: FdsDialogTitleDirective, FdsDialogContentDirective, FdsDialogActionsDirective, FdsDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsDialogTitleDirective", function() { return FdsDialogTitleDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsDialogContentDirective", function() { return FdsDialogContentDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsDialogActionsDirective", function() { return FdsDialogActionsDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsDialogComponent", function() { return FdsDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

function FdsDialogTitleDirective() {}
FdsDialogTitleDirective.prototype = {
  contstructor: FdsDialogTitleDirective
};
FdsDialogTitleDirective.decorators = [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
  args: [{
    selector: 'fds-dialog-title'
  }]
}];
function FdsDialogContentDirective() {}
FdsDialogContentDirective.prototype = {
  contstructor: FdsDialogContentDirective
};
FdsDialogContentDirective.decorators = [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
  args: [{
    selector: 'fds-dialog-content'
  }]
}];
function FdsDialogActionsDirective() {}
FdsDialogActionsDirective.prototype = {
  contstructor: FdsDialogActionsDirective
};
FdsDialogActionsDirective.decorators = [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
  args: [{
    selector: 'fds-dialog-actions'
  }]
}];
/**
 * FdsDialogComponent constructor
 *
 * @constructor
 */

function FdsDialogComponent() {
  this.dialogTitle = '';
  this.dialogContent = '';
  this.dialogActions = '';
}

FdsDialogComponent.prototype = {
  constructor: FdsDialogComponent,

  /**
   * Respond after Angular projects external content into the component's view.
   */
  ngAfterContentInit: function ngAfterContentInit() {
    if (this.dialogTitle.length > 1) {
      throw new Error('Duplicate fds-dialog-title component at in fds-dialog.');
    }

    if (this.dialogContent.length > 1) {
      throw new Error('Duplicate fds-dialog-content component at in fds-dialog.');
    }

    if (this.dialogActions.length > 1) {
      throw new Error('Duplicate fds-dialog-actions component at in fds-dialog.');
    }
  }
};
FdsDialogComponent.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"]({
  selector: 'fds-dialog',
  template: __webpack_require__(/*! ./fds-dialog.component.html */ "./platform/core/dialogs/fds-dialog.component.html"),
  queries: {
    dialogTitle: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](FdsDialogTitleDirective),
    dialogContent: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](FdsDialogContentDirective),
    dialogActions: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](FdsDialogActionsDirective)
  }
})];
FdsDialogComponent.parameters = [];


/***/ }),

/***/ "./platform/core/dialogs/fds-dialogs.module.js":
/*!*****************************************************!*\
  !*** ./platform/core/dialogs/fds-dialogs.module.js ***!
  \*****************************************************/
/*! exports provided: FdsDialogsModule, IConfirmConfig, FdsDialogService, FdsDialogComponent, FdsDialogTitleDirective, FdsDialogContentDirective, FdsDialogActionsDirective, FdsConfirmDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsDialogsModule", function() { return FdsDialogsModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "./node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fds-dialog.component */ "./platform/core/dialogs/fds-dialog.component.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogComponent", function() { return _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogTitleDirective", function() { return _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogTitleDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogContentDirective", function() { return _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogContentDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogActionsDirective", function() { return _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogActionsDirective"]; });

/* harmony import */ var _services_dialog_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/dialog.service */ "./platform/core/dialogs/services/dialog.service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IConfirmConfig", function() { return _services_dialog_service__WEBPACK_IMPORTED_MODULE_6__["IConfirmConfig"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogService", function() { return _services_dialog_service__WEBPACK_IMPORTED_MODULE_6__["FdsDialogService"]; });

/* harmony import */ var _confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./confirm-dialog/confirm-dialog.component */ "./platform/core/dialogs/confirm-dialog/confirm-dialog.component.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsConfirmDialogComponent", function() { return _confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_7__["FdsConfirmDialogComponent"]; });

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */








var FDS_DIALOGS = [_fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogComponent"], _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogTitleDirective"], _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogActionsDirective"], _fds_dialog_component__WEBPACK_IMPORTED_MODULE_5__["FdsDialogContentDirective"], _confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_7__["FdsConfirmDialogComponent"]];
var FDS_DIALOGS_ENTRY_COMPONENTS = [_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_7__["FdsConfirmDialogComponent"]];
/**
 * FdsDialogsModule constructor.
 *
 * @constructor
 */

function FdsDialogsModule() {}

FdsDialogsModule.prototype = {
  constructor: FdsDialogsModule
};
FdsDialogsModule.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"]({
  imports: [_angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["FlexLayoutModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatIconModule"]],
  declarations: [FDS_DIALOGS],
  exports: [FDS_DIALOGS],
  providers: [_services_dialog_service__WEBPACK_IMPORTED_MODULE_6__["FdsDialogService"]],
  entryComponents: [FDS_DIALOGS_ENTRY_COMPONENTS]
})];


/***/ }),

/***/ "./platform/core/dialogs/services/dialog.service.js":
/*!**********************************************************!*\
  !*** ./platform/core/dialogs/services/dialog.service.js ***!
  \**********************************************************/
/*! exports provided: IDialogConfig, IConfirmConfig, FdsDialogService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IDialogConfig", function() { return IDialogConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IConfirmConfig", function() { return IConfirmConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsDialogService", function() { return FdsDialogService; });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../confirm-dialog/confirm-dialog.component */ "./platform/core/dialogs/confirm-dialog/confirm-dialog.component.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */




function IDialogConfig() {
  this.title = '';
  this.message = '';
  this.dialogRef = undefined;
  this.viewContainerRef = undefined;
  this.disableClose = true;
}

IDialogConfig.prototype = {
  contstructor: IDialogConfig
};
jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend(IDialogConfig, _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogConfig"]);

function IConfirmConfig() {
  this.acceptButton = 'ACCEPT';
  this.acceptButtonColor = 'fds-primary';
  this.cancelButton = 'CANCEL';
  this.cancelButtonColor = 'fds-secondary';
}

IConfirmConfig.prototype = {
  contstructor: IConfirmConfig
};
jquery__WEBPACK_IMPORTED_MODULE_0___default.a.extend(IConfirmConfig, IDialogConfig);

function createConfig(config) {
  var dialogConfig = new IConfirmConfig();
  dialogConfig.viewContainerRef = config.viewContainerRef;
  dialogConfig.disableClose = config.disableClose;
  return dialogConfig;
}
/**
 * FdsDialogService constructor.
 *
 * @param MatDialog      The angular material MatDialog.
 * @constructor
 */


function FdsDialogService(MatDialog) {
  this.dialogService = MatDialog;
}

FdsDialogService.prototype = {
  contstructor: FdsDialogService,

  /**
   * Wrapper function over the open() method in MatDialog.
   * Opens a modal dialog containing the given component.
   *
   * @param component     The angular ComponentType<T>.
   * @param config        The angular material MatDialogConfig.
   *
   * @returns {MatDialoRef}    The reference to the dialog.
   */
  open: function open(component, config) {
    return this.dialogService.open(component, config);
  },

  /**
   * Wrapper function over the closeAll() method in MatDialog.
   * Closes all of the currently-open dialogs.
   */
  closeAll: function closeAll() {
    this.dialogService.closeAll();
  },

  /**
   * Opens a confirm dialog with the provided config.
   *
   * @param config     IConfirmConfig {
   *                                      message?: string;
   *                                      title?: string;
   *                                      dialogRef?: MatDialoRef;
   *                                      viewContainerRef?: ViewContainerRef;
   *                                      disableClose?: boolean;
   *                                      acceptButton?: string;
   *                                      acceptButtonColor?: string;
   *                                      cancelButton?: string;
   *                                      cancelButtonColor?: string;
   *                                   }
   *
   * @returns {MatDialoRef}    The reference to the dialog.
   */
  openConfirm: function openConfirm(config) {
    var dialogConfig = createConfig(config);
    var dialogRef = this.dialogService.open(_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_2__["FdsConfirmDialogComponent"], dialogConfig);
    var confirmDialogComponent = dialogRef.componentInstance;
    confirmDialogComponent.dialogRef = dialogRef;

    if (config.title) {
      confirmDialogComponent.title = config.title;
    }

    if (config.message) {
      confirmDialogComponent.message = config.message;
    }

    if (config.acceptButton) {
      confirmDialogComponent.acceptButton = config.acceptButton;
    }

    if (config.acceptButtonColor) {
      confirmDialogComponent.acceptButtonColor = config.acceptButtonColor;
    }

    if (config.cancelButton) {
      confirmDialogComponent.cancelButton = config.cancelButton;
    }

    if (config.cancelButtonColor) {
      confirmDialogComponent.cancelButtonColor = config.cancelButtonColor;
    }

    return dialogRef;
  }
};
FdsDialogService.parameters = [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"]];


/***/ }),

/***/ "./platform/core/flow-design-system.module.js":
/*!****************************************************!*\
  !*** ./platform/core/flow-design-system.module.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/flex-layout */ "./node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _covalent_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @covalent/core */ "./node_modules/@covalent/core/fesm5/covalent-core.js");
/* harmony import */ var _covalent_core_steps__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @covalent/core/steps */ "./node_modules/@covalent/core/fesm5/covalent-core-steps.js");
/* harmony import */ var _covalent_core_data_table__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @covalent/core/data-table */ "./node_modules/@covalent/core/fesm5/covalent-core-data-table.js");
/* harmony import */ var _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dialogs/fds-dialogs.module */ "./platform/core/dialogs/fds-dialogs.module.js");
/* harmony import */ var _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./snackbars/fds-snackbars.module */ "./platform/core/snackbars/fds-snackbars.module.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */












/**
 * FlowDesignSystemModule constructor.
 *
 * @constructor
 */

function FlowDesignSystemModule() {
  jquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function () {
    //add fds attr to body tag to allow fine grain style overrides
    document.body.setAttribute('fds', ''); //override the hover styles for checkbox borders

    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body).on('mouseenter', '.mat-checkbox-inner-container', function () {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.mat-checkbox-frame').css('border-color', '#1491C1');
    });
    jquery__WEBPACK_IMPORTED_MODULE_0___default()(document.body).on('mouseleave', '.mat-checkbox-inner-container', function () {
      jquery__WEBPACK_IMPORTED_MODULE_0___default()(this).find('.mat-checkbox-frame').css('border-color', '#DDDDDD');
    });
  });
}

FlowDesignSystemModule.prototype = {
  constructor: FlowDesignSystemModule
};
FlowDesignSystemModule.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"]({
  imports: [_angular_flex_layout__WEBPACK_IMPORTED_MODULE_2__["FlexLayoutModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_6__["BrowserAnimationsModule"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["BrowserModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatAutocompleteModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatButtonToggleModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatCardModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatCheckboxModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatChipsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDatepickerModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialogModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatExpansionModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatFormFieldModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatGridListModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatIconModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatListModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatMenuModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatProgressBarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatProgressSpinnerModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatRadioModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSelectModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSlideToggleModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSliderModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSidenavModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSnackBarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatStepperModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTabsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatToolbarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTooltipModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatPaginatorModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSortModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTableModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentCommonModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentChipsModule"], _covalent_core_steps__WEBPACK_IMPORTED_MODULE_8__["CovalentStepsModule"], _covalent_core_data_table__WEBPACK_IMPORTED_MODULE_9__["CovalentDataTableModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentDialogsModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentExpansionPanelModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentPagingModule"], _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_10__["FdsDialogsModule"], _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_11__["FdsSnackBarsModule"]],
  exports: [_angular_flex_layout__WEBPACK_IMPORTED_MODULE_2__["FlexLayoutModule"], _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_6__["BrowserAnimationsModule"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["BrowserModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatAutocompleteModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatButtonToggleModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatCardModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatCheckboxModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatChipsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDatepickerModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialogModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatExpansionModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatFormFieldModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatGridListModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatIconModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatListModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatMenuModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatProgressBarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatProgressSpinnerModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatRadioModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSelectModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSlideToggleModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSliderModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSidenavModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSnackBarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatStepperModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTabsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatToolbarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTooltipModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatPaginatorModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatSortModule"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatTableModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentCommonModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentChipsModule"], _covalent_core_steps__WEBPACK_IMPORTED_MODULE_8__["CovalentStepsModule"], _covalent_core_data_table__WEBPACK_IMPORTED_MODULE_9__["CovalentDataTableModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentDialogsModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentExpansionPanelModule"], _covalent_core__WEBPACK_IMPORTED_MODULE_7__["CovalentPagingModule"], _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_10__["FdsDialogsModule"], _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_11__["FdsSnackBarsModule"]]
})];
/* harmony default export */ __webpack_exports__["default"] = (FlowDesignSystemModule);

/***/ }),

/***/ "./platform/core/index.js":
/*!********************************!*\
  !*** ./platform/core/index.js ***!
  \********************************/
/*! exports provided: FdsDialogsModule, FdsConfirmDialogComponent, FdsDialogActionsDirective, FdsDialogComponent, FdsDialogContentDirective, FdsDialogService, FdsDialogTitleDirective, IConfirmConfig, FdsCommonsModule, FdsStorageService, FdsAnimations, FdsCoasterComponent, FdsSnackBarActionsDirective, FdsSnackBarComponent, FdsSnackBarContentDirective, FdsSnackBarService, FdsSnackBarsModule, FdsSnackBarTitleDirective, ICoasterConfig, FdsCoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dialogs/fds-dialogs.module */ "./platform/core/dialogs/fds-dialogs.module.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogsModule", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["FdsDialogsModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsConfirmDialogComponent", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["FdsConfirmDialogComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogActionsDirective", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["FdsDialogActionsDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogComponent", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["FdsDialogComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogContentDirective", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["FdsDialogContentDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogService", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["FdsDialogService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsDialogTitleDirective", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["FdsDialogTitleDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IConfirmConfig", function() { return _dialogs_fds_dialogs_module__WEBPACK_IMPORTED_MODULE_0__["IConfirmConfig"]; });

/* harmony import */ var _common_fds_common_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/fds-common.module */ "./platform/core/common/fds-common.module.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsCommonsModule", function() { return _common_fds_common_module__WEBPACK_IMPORTED_MODULE_1__["FdsCommonsModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsStorageService", function() { return _common_fds_common_module__WEBPACK_IMPORTED_MODULE_1__["FdsStorageService"]; });

/* harmony import */ var _common_fds_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/fds.animations */ "./platform/core/common/fds.animations.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsAnimations", function() { return _common_fds_animations__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./snackbars/fds-snackbars.module */ "./platform/core/snackbars/fds-snackbars.module.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsCoasterComponent", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["FdsCoasterComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarActionsDirective", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["FdsSnackBarActionsDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarComponent", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["FdsSnackBarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarContentDirective", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["FdsSnackBarContentDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarService", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["FdsSnackBarService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarsModule", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["FdsSnackBarsModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarTitleDirective", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["FdsSnackBarTitleDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ICoasterConfig", function() { return _snackbars_fds_snackbars_module__WEBPACK_IMPORTED_MODULE_3__["ICoasterConfig"]; });

/* harmony import */ var _flow_design_system_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flow-design-system.module */ "./platform/core/flow-design-system.module.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsCoreModule", function() { return _flow_design_system_module__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







/***/ }),

/***/ "./platform/core/snackbars/coaster/coaster.component.html":
/*!****************************************************************!*\
  !*** ./platform/core/snackbars/coaster/coaster.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<fds-snackbar>\n    <fds-snackbar-title *ngIf=\"title\">\n        <button class=\"coaster-close-icon\" mat-icon-button (click)=\"cancel()\">\n            <mat-icon color=\"primary\">close</mat-icon>\n        </button>\n        <i *ngIf=\"icon\" class=\"{{icon}} fds-coaster-icon\" aria-hidden=\"true\"></i>\n        <div class=\"ellipsis\" fxLayout=\"row\" title=\"{{title}}\" fxLayoutAlign=\"space-between center\">\n            {{title}}\n        </div>\n    </fds-snackbar-title>\n    <fds-snackbar-content title=\"{{message}}\" class=\"fds-coaster-message tc-grey-700\">\n        {{message}}\n    </fds-snackbar-content>\n    <fds-snackbar-actions>\n    </fds-snackbar-actions>\n</fds-snackbar>\n";

/***/ }),

/***/ "./platform/core/snackbars/coaster/coaster.component.js":
/*!**************************************************************!*\
  !*** ./platform/core/snackbars/coaster/coaster.component.js ***!
  \**************************************************************/
/*! exports provided: FdsCoasterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsCoasterComponent", function() { return FdsCoasterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * FdsCoasterComponent constructor.
 *
 * @constructor
 */

function FdsCoasterComponent() {
  this.title = '';
  this.message = '';
  this.icon = '';
  this.color = '';
  this.snackBarRef = undefined;
  this.viewContainerRef = undefined;
}

FdsCoasterComponent.prototype = {
  constructor: FdsCoasterComponent,

  /**
   * Initialize the component.
   */
  ngAfterViewChecked: function ngAfterViewChecked() {
    jquery__WEBPACK_IMPORTED_MODULE_1___default()('.fds-snackbar-wrapper').css('border-color', this.color);
    jquery__WEBPACK_IMPORTED_MODULE_1___default()('.fds-snackbar-title').css('color', this.color);
    jquery__WEBPACK_IMPORTED_MODULE_1___default()('.fds-coaster-icon').css('color', this.color);

    if (this.icon) {
      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.fds-snackbar-wrapper').css('padding', '15px 15px 15px 45px');
    } else {
      jquery__WEBPACK_IMPORTED_MODULE_1___default()('.fds-snackbar-wrapper').css('padding', '15px 15px 15px 15px');
    }
  },

  /**
   * Close the snackbar and send a cancel response to any subscribers.
   */
  cancel: function cancel() {
    this.snackBarRef.dismiss(false);
  }
};
FdsCoasterComponent.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"]({
  selector: 'fds-coaster',
  template: __webpack_require__(/*! ./coaster.component.html */ "./platform/core/snackbars/coaster/coaster.component.html")})];
FdsCoasterComponent.parameters = [];


/***/ }),

/***/ "./platform/core/snackbars/fds-snackbar.component.html":
/*!*************************************************************!*\
  !*** ./platform/core/snackbars/fds-snackbar.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<div class=\"fds-snackbar-wrapper\">\n    <div class=\"fds-snackbar-title\" *ngIf=\"snackBarTitle.length > 0\">\n        <ng-content select=\"fds-snackbar-title\"></ng-content>\n    </div>\n    <div class=\"fds-snackbar-content\" *ngIf=\"snackBarContent.length > 0\">\n        <ng-content select=\"fds-snackbar-content\"></ng-content>\n    </div>\n    <div class=\"fds-snackbar-actions\" *ngIf=\"snackBarActions.length > 0\" layout=\"row\">\n        <span flex></span>\n        <ng-content select=\"fds-snackbar-actions\"></ng-content>\n    </div>\n</div>\n";

/***/ }),

/***/ "./platform/core/snackbars/fds-snackbar.component.js":
/*!***********************************************************!*\
  !*** ./platform/core/snackbars/fds-snackbar.component.js ***!
  \***********************************************************/
/*! exports provided: FdsSnackBarTitleDirective, FdsSnackBarContentDirective, FdsSnackBarActionsDirective, FdsSnackBarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarTitleDirective", function() { return FdsSnackBarTitleDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarContentDirective", function() { return FdsSnackBarContentDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarActionsDirective", function() { return FdsSnackBarActionsDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarComponent", function() { return FdsSnackBarComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

function FdsSnackBarTitleDirective() {}
FdsSnackBarTitleDirective.prototype = {
  contstructor: FdsSnackBarTitleDirective
};
FdsSnackBarTitleDirective.decorators = [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
  args: [{
    selector: 'fds-snackbar-title'
  }]
}];
function FdsSnackBarContentDirective() {}
FdsSnackBarContentDirective.prototype = {
  contstructor: FdsSnackBarContentDirective
};
FdsSnackBarContentDirective.decorators = [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
  args: [{
    selector: 'fds-snackbar-content'
  }]
}];
function FdsSnackBarActionsDirective() {}
FdsSnackBarActionsDirective.prototype = {
  contstructor: FdsSnackBarActionsDirective
};
FdsSnackBarActionsDirective.decorators = [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
  args: [{
    selector: 'fds-snackbar-actions'
  }]
}];
/**
 * FdsSnackBarComponent constructor
 *
 * @constructor
 */

function FdsSnackBarComponent() {
  this.snackBarTitle = '';
  this.snackBarContent = '';
  this.snackBarActions = '';
}

FdsSnackBarComponent.prototype = {
  constructor: FdsSnackBarComponent,

  /**
   * Respond after Angular projects external content into the component's view.
   */
  ngAfterContentInit: function ngAfterContentInit() {
    if (this.snackBarTitle.length > 1) {
      throw new Error('Duplicate fds-snackbar-title component at in fds-snackbar.');
    }

    if (this.snackBarContent.length > 1) {
      throw new Error('Duplicate fds-snackbar-content component at in fds-snackbar.');
    }

    if (this.snackBarActions.length > 1) {
      throw new Error('Duplicate fds-snackbar-actions component at in fds-snackbar.');
    }
  }
};
FdsSnackBarComponent.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"]({
  selector: 'fds-snackbar',
  template: __webpack_require__(/*! ./fds-snackbar.component.html */ "./platform/core/snackbars/fds-snackbar.component.html"),
  queries: {
    snackBarTitle: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](FdsSnackBarTitleDirective),
    snackBarContent: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](FdsSnackBarContentDirective),
    snackBarActions: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"](FdsSnackBarActionsDirective)
  }
})];
FdsSnackBarComponent.parameters = [];


/***/ }),

/***/ "./platform/core/snackbars/fds-snackbars.module.js":
/*!*********************************************************!*\
  !*** ./platform/core/snackbars/fds-snackbars.module.js ***!
  \*********************************************************/
/*! exports provided: FdsSnackBarsModule, ICoasterConfig, FdsSnackBarService, FdsSnackBarComponent, FdsSnackBarTitleDirective, FdsSnackBarContentDirective, FdsSnackBarActionsDirective, FdsCoasterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarsModule", function() { return FdsSnackBarsModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "./node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./fds-snackbar.component */ "./platform/core/snackbars/fds-snackbar.component.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarComponent", function() { return _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarTitleDirective", function() { return _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarTitleDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarContentDirective", function() { return _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarContentDirective"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarActionsDirective", function() { return _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarActionsDirective"]; });

/* harmony import */ var _services_snackbar_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services/snackbar.service */ "./platform/core/snackbars/services/snackbar.service.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ICoasterConfig", function() { return _services_snackbar_service__WEBPACK_IMPORTED_MODULE_6__["ICoasterConfig"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarService", function() { return _services_snackbar_service__WEBPACK_IMPORTED_MODULE_6__["FdsSnackBarService"]; });

/* harmony import */ var _coaster_coaster_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coaster/coaster.component */ "./platform/core/snackbars/coaster/coaster.component.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FdsCoasterComponent", function() { return _coaster_coaster_component__WEBPACK_IMPORTED_MODULE_7__["FdsCoasterComponent"]; });

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */








var FDS_SNACKBARS = [_fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarComponent"], _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarTitleDirective"], _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarActionsDirective"], _fds_snackbar_component__WEBPACK_IMPORTED_MODULE_5__["FdsSnackBarContentDirective"], _coaster_coaster_component__WEBPACK_IMPORTED_MODULE_7__["FdsCoasterComponent"]];
var FDS_SNACKBARS_ENTRY_COMPONENTS = [_coaster_coaster_component__WEBPACK_IMPORTED_MODULE_7__["FdsCoasterComponent"]];
/**
 * FdsSnackBarsModule constructor.
 *
 * @constructor
 */

function FdsSnackBarsModule() {}

FdsSnackBarsModule.prototype = {
  constructor: FdsSnackBarsModule
};
FdsSnackBarsModule.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"]({
  imports: [_angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["FlexLayoutModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatSnackBarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatIconModule"]],
  declarations: [FDS_SNACKBARS],
  exports: [FDS_SNACKBARS],
  providers: [_services_snackbar_service__WEBPACK_IMPORTED_MODULE_6__["FdsSnackBarService"]],
  entryComponents: [FDS_SNACKBARS_ENTRY_COMPONENTS]
})];


/***/ }),

/***/ "./platform/core/snackbars/services/snackbar.service.js":
/*!**************************************************************!*\
  !*** ./platform/core/snackbars/services/snackbar.service.js ***!
  \**************************************************************/
/*! exports provided: ISnackBarConfig, ICoasterConfig, FdsSnackBarService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISnackBarConfig", function() { return ISnackBarConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ICoasterConfig", function() { return ICoasterConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FdsSnackBarService", function() { return FdsSnackBarService; });
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _coaster_coaster_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../coaster/coaster.component */ "./platform/core/snackbars/coaster/coaster.component.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



function ISnackBarConfig() {
  this.title = '';
  this.message = '';
  this.snackBarRef = undefined;
  this.viewContainerRef = undefined;
}
ISnackBarConfig.prototype = {
  contstructor: ISnackBarConfig
};
jquery__WEBPACK_IMPORTED_MODULE_1___default.a.extend(ISnackBarConfig, _angular_material__WEBPACK_IMPORTED_MODULE_0__["MatSnackBarConfig"]);
function ICoasterConfig() {
  this.icon = '';
  this.color = '';
}
ICoasterConfig.prototype = {
  contstructor: ICoasterConfig
};
jquery__WEBPACK_IMPORTED_MODULE_1___default.a.extend(ICoasterConfig, ISnackBarConfig);
/**
 * FdsSnackBarService constructor.
 *
 * @param MatSnackBar      The angular material MatSnackBar.
 * @constructor
 */

function FdsSnackBarService(MatSnackBar) {
  this.snackBarService = MatSnackBar;
}
FdsSnackBarService.prototype = {
  contstructor: FdsSnackBarService,

  /**
   * Wrapper function over the open() method in MatSnackBar.
   *
   * @param message               The message to show in the snackbar.
   * @param action                The label for the snackbar action.
   * @param config                Additional configuration options for the snackbar.
   *
   * @returns {MatSnackBarRef}    The reference to the snackbar.
   */
  open: function open(message, action, config) {
    return this.snackBarService.open(message, action, config);
  },

  /**
   * Wrapper function over the openFromComponent() method in MatSnackBar.
   * Opens a snackbar containing the given component.
   *
   * @param component     The angular ComponentType<T>.
   * @param config        The angular material MatSnackBarConfig.
   *
   * @returns {MatSnackBarRef}    The reference to the snackbar.
   */
  openFromComponent: function openFromComponent(component, config) {
    return this.snackBarService.openFromComponent(component, config);
  },

  /**
   * Wrapper function over the dismiss() method in MatSnackBar.
   * Dismisses the currently-open snackbar.
   */
  dismiss: function dismiss() {
    this.snackBarService.dismiss();
  },

  /**
   * Opens a coaster snackbar with the provided config.
   *
   * @param config     ICoasterConfig {
   *                                      message?: string;
   *                                      title?: string;
   *                                      snackBarRef?: MatSnackBarRef;
   *                                      viewContainerRef?: ViewContainerRef;
   *                                      icon?: string;
   *                                      color?: string;
   *                                   }
   *
   * @returns {MatSnackBarRef}    The reference to the snackbar.
   */
  openCoaster: function openCoaster(config) {
    var snackBarConfig = new ICoasterConfig();
    snackBarConfig.verticalPosition = config.verticalPosition;
    snackBarConfig.horizontalPosition = config.horizontalPosition;
    snackBarConfig.duration = config.duration;
    var snackBarRef = this.snackBarService.openFromComponent(_coaster_coaster_component__WEBPACK_IMPORTED_MODULE_2__["FdsCoasterComponent"], snackBarConfig);
    var coasterComponent = snackBarRef.instance;
    coasterComponent.snackBarRef = snackBarRef;

    if (config.title) {
      coasterComponent.title = config.title;
    }

    if (config.message) {
      coasterComponent.message = config.message;
    }

    if (config.icon) {
      coasterComponent.icon = config.icon;
    }

    if (config.color) {
      coasterComponent.color = config.color;
    }

    return snackBarRef;
  }
};
FdsSnackBarService.parameters = [_angular_material__WEBPACK_IMPORTED_MODULE_0__["MatSnackBar"]];

/***/ }),

/***/ "./webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.html":
/*!********************************************************************************!*\
  !*** ./webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<div>Hello Dialog!</div>\n";

/***/ }),

/***/ "./webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.js":
/*!******************************************************************************!*\
  !*** ./webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * NfRegistryEditBucketPolicy constructor.
 *
 * @param nfRegistryApi         The api service.
 * @param nfRegistryService     The nf-registry.service module.
 * @param activatedRoute        The angular route module.
 * @param matDialogRef          The angular material dialog ref.
 * @param data                  The data passed into this component.
 * @constructor
 */

function FdsDemoDialog(matDialogRef, data) {
  // Services
  this.dialogRef = matDialogRef;
  this.data = data;
}

FdsDemoDialog.prototype = {
  constructor: FdsDemoDialog,

  /**
   * Cancel creation of a new policy and close dialog.
   */
  cancel: function cancel() {
    this.dialogRef.close();
  }
};
FdsDemoDialog.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"]({
  template: __webpack_require__(/*! ./fds-demo-dialog.html */ "./webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.html")})];
FdsDemoDialog.parameters = [_angular_material__WEBPACK_IMPORTED_MODULE_0__["MatDialogRef"], _angular_material__WEBPACK_IMPORTED_MODULE_0__["MAT_DIALOG_DATA"]];
/* harmony default export */ __webpack_exports__["default"] = (FdsDemoDialog);

/***/ }),

/***/ "./webapp/components/flow-design-system/fds-demo.html":
/*!************************************************************!*\
  !*** ./webapp/components/flow-design-system/fds-demo.html ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<mat-sidenav-container>\n    <mat-sidenav #sidenav mode=\"over\" position=\"end\" opened=\"false\">\n        <div fxLayout=\"column\" fxLayoutAlign=\"space-between center\">\n            <p>You can also open a dialog from a side nav.</p>\n            <button mat-raised-button color=\"fds-primary\" (click)=\"openDialog()\">Show simple dialog</button>\n        </div>\n    </mat-sidenav>\n    <div id=\"fds-demo\">\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\">Apache NiFi Flow Design System</mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content class=\"pad-top-sm\">\n                <p>With the Apache NiFi Flow Design System module, we get an atomic, reusable component platform for\n                    Apache NiFi and its sub-projects to consume, while collaborating in an open source model. This\n                    module packages the <a class=\"link\" href=\"https://material.angular.io/components\" target=\"_blank\">Angular\n                        Material</a> module as well as the <a class=\"link\"\n                                                              href=\"https://teradata.github.io/covalent/#/components\"\n                                                              target=\"_blank\">Teradata Covalent</a> module. These\n                    modules have been themed to match the FDS color palette.</p>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Typography\">Typography <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Typography\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <p class=\"mat-body-1\">FDS provides typography CSS classes you can use to create visual consistency across your application. Optionally style tags with the classes shown below:</p>\n                <div layout-align=\"center end\">\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-display-4</code>\n                        <span class=\"mat-display-4\">Display 4</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-display-3</code>\n                        <span class=\"mat-display-3\">Display 3</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-display-2</code>\n                        <span class=\"mat-display-2\">Display 2</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-display-1</code>\n                        <span class=\"mat-display-1\">Display 1</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-headline</code>\n                        <span class=\"mat-headline\">Headline</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.md-title</code>\n                        <span class=\"md-title\">Title</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.md-subhead</code>\n                        <span class=\"md-subhead\">Subhead</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.link</code>\n                        <span class=\"link\">Link</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-body-1</code>\n                        <span class=\"mat-body-1\">Body 1</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-body-2</code>\n                        <span class=\"mat-body-2\">Body 2</span>\n                    </div>\n                    <div layout=\"row\" layout-align=\"start center\">\n                        <code flex=\"15\">.mat-caption</code>\n                        <span class=\"mat-caption\">Caption</span>\n                    </div>\n                </div>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n    <pre lang=\"html\">\n    <![CDATA[\n        <span class=\"mat-display-4\">Display 4</span>\n        <span class=\"mat-display-3\">Display 3</span>\n        <span class=\"mat-display-2\">Display 2</span>\n        <span class=\"mat-display-1\">Display 1</span>\n        <span class=\"mat-headline\">Headline</span>\n        <span class=\"md-title\">Title</span>\n        <span class=\"md-subhead\">Subhead</span>\n        <span class=\"link\">Link</span>\n        <span class=\"mat-body-1\">Body 1</span>\n        <span class=\"mat-body-2\">Body 2</span>\n        <span class=\"mat-caption\">Caption</span>\n    ]]>\n    </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"RaisedButtons\">Raised Buttons <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"RaisedButtons\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <p>Tip: Use UPPERCASE text for 1-2 words, and Titlecase text for 3+ words.</p>\n                <button mat-raised-button color=\"primary\">Primary</button>\n                <button mat-raised-button color=\"accent\">Accent</button>\n                <button mat-raised-button color=\"warn\">Warn</button>\n                <button mat-raised-button color=\"fds-primary\">FDS Primary</button>\n                <button mat-raised-button color=\"fds-secondary\">FDS Secondary</button>\n                <button mat-raised-button color=\"fds-regular\">FDS regular</button>\n                <button mat-raised-button color=\"fds-warn\">FDS warn</button>\n                <button mat-raised-button color=\"fds-critical\">FDS critical</button>\n                <button mat-raised-button disabled color=\"primary\">Primary</button>\n                <button mat-raised-button disabled color=\"accent\">Accent</button>\n                <button mat-raised-button disabled color=\"warn\">Warn</button>\n                <button mat-raised-button disabled color=\"fds-primary\">FDS primary</button>\n                <button mat-raised-button disabled color=\"fds-secondary\">FDS Secondary</button>\n                <button mat-raised-button disabled color=\"fds-regular\">FDS regular</button>\n                <button mat-raised-button disabled color=\"fds-warn\">FDS warn</button>\n                <button mat-raised-button disabled color=\"fds-critical\">FDS critical</button>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n    <![CDATA[\n        <!-- Themed Raised Buttons -->\n        <button mat-raised-button color=\"primary\">Primary</button>\n        <button mat-raised-button color=\"accent\">Secondary</button>\n        <button mat-raised-button color=\"warn\">warn</button>\n        <button mat-raised-button color=\"fds-primary\">FDS Primary</button>\n        <button mat-raised-button color=\"fds-secondary\">FDS Secondary</button>\n        <button mat-raised-button color=\"fds-regular\">FDS regular</button>\n        <button mat-raised-button color=\"fds-warn\">FDS warn</button>\n        <button mat-raised-button color=\"fds-critical\">FDS critical</button>\n        <!-- Disabled Raised Buttons -->\n        <button mat-raised-button disabled color=\"primary\">Primary</button>\n        <button mat-raised-button disabled color=\"accent\">Secondary</button>\n        <button mat-raised-button disabled color=\"warn\">warn</button>\n        <button mat-raised-button disabled color=\"fds-primary\">FDS primary</button>\n        <button mat-raised-button disabled color=\"fds-secondary\">FDS Secondary</button>\n        <button mat-raised-button disabled color=\"fds-regular\">FDS regular</button>\n        <button mat-raised-button disabled color=\"fds-warn\">FDS warn</button>\n        <button mat-raised-button disabled color=\"fds-critical\">FDS critical</button>\n    ]]>\n    </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"FlatButtons\">Flat Buttons <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"FlatButtons\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <mat-card-actions>\n                    <button mat-button>Default</button>\n                    <button mat-button color=\"primary\">Primary</button>\n                    <button mat-button color=\"accent\">Secondary</button>\n                    <button mat-button color=\"warn\">Warn</button>\n                    <button mat-button disabled>Disabled Default</button>\n                    <button mat-button disabled color=\"primary\">Disabled Primary</button>\n                    <button mat-button disabled color=\"accent\">Disabled Secondary</button>\n                    <button mat-button disabled color=\"warn\">Disabled Warn</button>\n                </mat-card-actions>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n    <![CDATA[\n        <!-- Themed Flat Buttons -->\n        <button mat-button>Default</button>\n        <button mat-button color=\"primary\">Primary</button>\n        <button mat-button color=\"accent\">Secondary</button>\n        <button mat-button color=\"warn\">warn</button>\n        <!-- Disabled Flat Buttons -->\n        <button mat-button disabled>disabled Default</button>\n        <button mat-button disabled color=\"primary\">disabled primary</button>\n        <button mat-button disabled color=\"accent\">disabled Secondary</button>\n        <button mat-button disabled color=\"warn\">disabled warn</button>\n    ]]>\n    </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"FabButtons\">Fab Buttons <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"FabButtons\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <mat-card-actions class=\"pad-left-sm\">\n                    <button mat-mini-fab color=\"primary\">P</button>\n                    <button mat-mini-fab color=\"accent\">A</button>\n                    <button mat-mini-fab color=\"warn\">W</button>\n                    <button mat-mini-fab disabled color=\"primary\">P</button>\n                    <button mat-mini-fab disabled color=\"accent\">A</button>\n                    <button mat-mini-fab disabled color=\"warn\">W</button>\n                </mat-card-actions>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n    <![CDATA[\n        <!-- Themed Fab Buttons -->\n        <button mat-mini-fab color=\"primary\">P</button>\n        <button mat-mini-fab color=\"accent\">A</button>\n        <button mat-mini-fab color=\"warn\">W</button>\n        <!-- Disabled Fab Buttons -->\n        <button mat-mini-fab disabled color=\"primary\">P</button>\n        <button mat-mini-fab disabled color=\"accent\">A</button>\n        <button mat-mini-fab disabled color=\"warn\">W</button>\n    ]]>\n    </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"ButtonToggles\">Button Toggles <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"ButtonToggles\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <mat-button-toggle-group name=\"alignment\">\n                    <mat-button-toggle value=\"left\">\n                        <mat-icon>format_align_left</mat-icon>\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"center\">\n                        <mat-icon>format_align_center</mat-icon>\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"right\">\n                        <mat-icon>format_align_right</mat-icon>\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"justify\">\n                        <mat-icon>format_align_justify</mat-icon>\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n                <div fxLayout=\"row\" class=\"pad-top-md pad-bot-md\"></div>\n                <mat-button-toggle-group name=\"onOffToggle\" class=\"on-off-toggle-group\">\n                    <mat-button-toggle value=\"on\" [checked]=\"true\">\n                        ON\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"off\" class=\"off-toggle\">\n                        OFF\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n                <div fxLayout=\"row\" class=\"pad-top-md pad-bot-md\"></div>\n                <mat-button-toggle-group fxLayout=\"row\" fxLayoutAlign=\"space-between center\"\n                                         class=\"expansion-panel-filter-toggle-group\" multiple>\n                    <mat-button-toggle>\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">34</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Assets</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle>\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">300</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Extensions</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle>\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">5000</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Flows</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle>\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">0</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Certifications</div>\n                        </div>\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n                <div fxLayout=\"row\" class=\"pad-top-md pad-bot-md\"></div>\n                <mat-button-toggle-group name=\"fds-administration-perspective\" fxLayout=\"row\" class=\"tab-toggle-group\">\n                    <mat-button-toggle value=\"general\">\n                        general\n                    </mat-button-toggle>\n                    <div fxLayout=\"row\" class=\"pad-left-md\"></div>\n                    <mat-button-toggle value=\"users\">\n                        Users\n                    </mat-button-toggle>\n                    <div fxLayout=\"row\" class=\"pad-left-md\"></div>\n                    <mat-button-toggle value=\"workflow\">\n                        Workflow\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n         <mat-button-toggle-group name=\"alignment\">\n            <mat-button-toggle value=\"left\">\n                <mat-icon>format_align_left</mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle value=\"center\">\n                <mat-icon>format_align_center</mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle value=\"right\">\n                <mat-icon>format_align_right</mat-icon>\n            </mat-button-toggle>\n            <mat-button-toggle value=\"justify\">\n                <mat-icon>format_align_justify</mat-icon>\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n        <div fxLayout=\"row\" class=\"pad-top-md pad-bot-md\"></div>\n        <mat-button-toggle-group name=\"onOffToggle\" class=\"on-off-toggle-group\">\n            <mat-button-toggle value=\"on\" [checked]=\"true\">\n                ON\n            </mat-button-toggle>\n            <mat-button-toggle value=\"off\" class=\"off-toggle\">\n                OFF\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n        <div fxLayout=\"row\" class=\"pad-top-md pad-bot-md\"></div>\n        <mat-button-toggle-group fxLayout=\"row\" fxLayoutAlign=\"space-between center\"\n                                 class=\"expansion-panel-filter-toggle-group\" multiple>\n            <mat-button-toggle>\n                <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                    <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">34</div>\n                    <div class=\"pad-top-sm\" fxFlex=\"45\">Assets</div>\n                </div>\n            </mat-button-toggle>\n            <mat-button-toggle>\n                <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                    <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">300</div>\n                    <div class=\"pad-top-sm\" fxFlex=\"45\">Extensions</div>\n                </div>\n            </mat-button-toggle>\n            <mat-button-toggle>\n                <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                    <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">5000</div>\n                    <div class=\"pad-top-sm\" fxFlex=\"45\">Flows</div>\n                </div>\n            </mat-button-toggle>\n            <mat-button-toggle>\n                <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                    <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">0</div>\n                    <div class=\"pad-top-sm\" fxFlex=\"45\">Certifications</div>\n                </div>\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n        <div fxLayout=\"row\" class=\"pad-top-md pad-bot-md\"></div>\n        <mat-button-toggle-group name=\"fds-administration-perspective\" fxLayout=\"row\" class=\"tab-toggle-group\">\n            <mat-button-toggle value=\"general\">\n                general\n            </mat-button-toggle>\n            <div fxLayout=\"row\" class=\"pad-left-md\"></div>\n            <mat-button-toggle value=\"users\">\n                Users\n            </mat-button-toggle>\n            <div fxLayout=\"row\" class=\"pad-left-md\"></div>\n            <mat-button-toggle value=\"workflow\">\n                Workflow\n            </mat-button-toggle>\n        </mat-button-toggle-group>\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Input\">Input <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Input\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <form>\n                    <div layout=\"row\" layout-margin>\n                        <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                            <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\n                        </mat-form-field>\n                    </div>\n                    <div layout=\"row\" layout-margin>\n                        <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                            <input matInput disabled placeholder=\"First name\">\n                        </mat-form-field>\n                        <mat-form-field floatLabel=\"always\" flex>\n                            <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\n                        </mat-form-field>\n                    </div>\n                    <div layout=\"row\" layout-margin>\n                        <div flex fxLayoutAlign=\"start center\">\n                            <mat-form-field floatLabel=\"always\" flex>\n                                <input matInput placeholder=\"Button Addon with dropdown\">\n                            </mat-form-field>\n                            <button class=\"input-button\" color=\"fds-regular\" mat-raised-button\n                                    [matMenuTriggerFor]=\"inputButtonDropdownAddonMenu\">\n                                Select<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                            </button>\n                            <mat-menu xPosition=\"before\" #inputButtonDropdownAddonMenu=\"matMenu\"\n                                      [overlapTrigger]=\"false\">\n                                <button mat-menu-item> Refresh</button>\n                                <button mat-menu-item> Settings</button>\n                                <button mat-menu-item> Help</button>\n                                <button mat-menu-item disabled> Sign Out</button>\n                            </mat-menu>\n                        </div>\n                        <div flex fxLayoutAlign=\"start center\">\n                            <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                                <input matInput placeholder=\"Button Addon\">\n                            </mat-form-field>\n                            <button class=\"input-button\" color=\"fds-regular\" mat-raised-button>\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                    <div layout=\"row\" layout-margin>\n                        <div flex fxLayoutAlign=\"start center\">\n                            <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                                <input disabled matInput placeholder=\"Button Addon with dropdown\">\n                            </mat-form-field>\n                            <button disabled class=\"input-button\" color=\"fds-regular\" mat-raised-button>\n                                Select<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                            </button>\n                        </div>\n                        <div flex fxLayoutAlign=\"start center\">\n                            <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                                <input disabled matInput placeholder=\"Button Addon\">\n                            </mat-form-field>\n                            <button disabled class=\"input-button\" color=\"fds-regular\" mat-raised-button>\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                    <div layout=\"row\" layout-margin>\n                        <mat-form-field floatLabel=\"always\" flex>\n                            <textarea matInput placeholder=\"Address\" value=\"1600 Amphitheatre Pkway\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <div layout=\"row\" layout-margin>\n                        <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                            <textarea disabled value=\"Address 2 Value\" matInput placeholder=\"Address 2\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <div layout=\"row\" layout-margin>\n                        <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                            <input matInput placeholder=\"City\">\n                        </mat-form-field>\n                        <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                            <input matInput placeholder=\"State\">\n                        </mat-form-field>\n                        <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\n                            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n                        </mat-form-field>\n                    </div>\n                </form>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n    <![CDATA[\n        <!-- Inputs -->\n        <form>\n            <div layout=\"row\" layout-margin>\n                <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                    <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\">\n                </mat-form-field>\n            </div>\n            <div layout=\"row\" layout-margin>\n                <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                    <input matInput disabled placeholder=\"First name\">\n                </mat-form-field>\n                <mat-form-field floatLabel=\"always\" flex>\n                    <input matInput placeholder=\"Long Last Name That Will Be Truncated\">\n                </mat-form-field>\n            </div>\n            <div layout=\"row\" layout-margin>\n                <div flex fxLayoutAlign=\"start center\">\n                    <mat-form-field floatLabel=\"always\" flex>\n                        <input matInput placeholder=\"Button Addon with dropdown\">\n                    </mat-form-field>\n                    <button class=\"input-button\" color=\"fds-regular\" mat-raised-button\n                            [matMenuTriggerFor]=\"inputButtonDropdownAddonMenu\">\n                        Select<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                    </button>\n                    <mat-menu xPosition=\"before\" #inputButtonDropdownAddonMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                        <button mat-menu-item> Refresh </button>\n                        <button mat-menu-item> Settings </button>\n                        <button mat-menu-item> Help </button>\n                        <button mat-menu-item disabled> Sign Out </button>\n                    </mat-menu>\n                </div>\n                <div flex fxLayoutAlign=\"start center\">\n                    <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                        <input matInput placeholder=\"Button Addon\">\n                    </mat-form-field>\n                    <button class=\"input-button\" color=\"fds-regular\" mat-raised-button>\n                        Search\n                    </button>\n                </div>\n            </div>\n            <div layout=\"row\" layout-margin>\n                <div flex fxLayoutAlign=\"start center\">\n                    <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                        <input disabled matInput placeholder=\"Button Addon with dropdown\">\n                    </mat-form-field>\n                    <button disabled class=\"input-button\" color=\"fds-regular\" mat-raised-button>\n                        Select<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n                <div flex fxLayoutAlign=\"start center\">\n                    <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                        <input disabled matInput placeholder=\"Button Addon\">\n                    </mat-form-field>\n                    <button disabled class=\"input-button\" color=\"fds-regular\" mat-raised-button>\n                        Search\n                    </button>\n                </div>\n            </div>\n            <div layout=\"row\" layout-margin>\n                <mat-form-field floatLabel=\"always\" flex>\n                    <textarea matInput placeholder=\"Address\" value=\"1600 Amphitheatre Pkway\"></textarea>\n                </mat-form-field>\n            </div>\n            <div layout=\"row\" layout-margin>\n                <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                    <textarea disabled value=\"Address 2 Value\" matInput placeholder=\"Address 2\"></textarea>\n                </mat-form-field>\n            </div>\n            <div layout=\"row\" layout-margin>\n                <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                    <input matInput placeholder=\"City\">\n                </mat-form-field>\n                <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                    <input matInput placeholder=\"State\">\n                </mat-form-field>\n                <mat-form-field floatLabel=\"always\" floatPlaceholder=\"always\" flex>\n                    <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" value=\"94043\">\n                    <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    ]]>\n    </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Tabs\">Tabs <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Tabs\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <mat-tab-group dynamicHeight color=\"accent\">\n                    <mat-tab>\n                        <ng-template mat-tab-label>One</ng-template>\n                        <h3 class=\"md-title\">First tab content</h3>\n                        <p>Plaid echo park knausgaard normcore franzen cronut. Pickled humblebrag tofu hoodie, umami\n                            salvia farm-to-table schlitz try-hard food truck knausgaard pabst. Yuccie portland jean\n                            shorts, authentic mixtape waistcoat gentrify blue bottle. Fixie kickstarter church-key small\n                            batch seitan, shabby chic vegan listicle before they sold out. Hammock raw denim flannel\n                            tousled seitan you probably haven't heard of them. Trust fund man bun pug, kickstarter\n                            artisan selvage letterpress cornhole tote bag butcher locavore. Affogato try-hard\n                            kickstarter seitan, DIY pickled hella godard pork belly four loko ugh.</p>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>Two</ng-template>\n                        <h3 class=\"md-title\">Second tab content</h3>\n                        <p>Hashtag distillery skateboard man bun gochujang, salvia man braid art party meggings heirloom\n                            kitsch farm-to-table. Franzen beard fingerstache gentrify, heirloom portland ennui XOXO\n                            microdosing kitsch plaid. Chicharrones bushwick chia, banh mi irony tattooed hammock butcher\n                            shabby chic taxidermy semiotics marfa post-ironic. Blue bottle keffiyeh farm-to-table ennui,\n                            chambray pitchfork art party pinterest artisan pop-up. Etsy banjo marfa, blue bottle\n                            kombucha crucifix XOXO tousled beard. Tilde disrupt kale chips bicycle rights skateboard\n                            master cleanse hella shoreditch, meditation retro shabby chic vice heirloom. Etsy listicle\n                            vice actually, iPhone chia hoodie four loko.</p>\n                    </mat-tab>\n                </mat-tab-group>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <mat-tab-group dynamicHeight color=\"accent\">\n          <mat-tab>\n            <ng-template mat-tab-label>First tab content</ng-template>\n            <h1>First content</h1>\n            <p>...</p>\n          </mat-tab>\n          <mat-tab>\n            <ng-template mat-tab-label>Second tab content</ng-template>\n            <h1>Second tab content</h1>\n            <p>...</p>\n          </mat-tab>\n        </mat-tab-group>\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Stepper\">Stepper <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Stepper\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <td-steps mode=\"vertical\">\n                    <td-step label=\"Version 1\"\n                             sublabel=\"by Admin\"\n                             [active]=\"true\">\n                        <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n                            <div fxLayout=\"row\" class=\"md-body-2\">\n                                Comments go here\n                            </div>\n                            <div fxLayout=\"row\" class=\"mat-caption\">\n                                An hour ago\n                            </div>\n                        </div>\n                    </td-step>\n                    <td-step label=\"Version 2\"\n                             sublabel=\"by Admin\">\n                        <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n                            <div fxLayout=\"row\" class=\"md-body-2\">\n                                Comments go here\n                            </div>\n                            <div fxLayout=\"row\" class=\"mat-caption\">\n                                A day ago\n                            </div>\n                        </div>\n                    </td-step>\n                </td-steps>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <td-steps mode=\"vertical\">\n            <td-step label=\"Version 1\"\n                     sublabel=\"by Admin\"\n                     [active]=\"true\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n                    <div fxLayout=\"row\" class=\"md-body-2\">\n                        Description goes here\n                    </div>\n                    <div fxLayout=\"row\" class=\"mat-caption\">\n                        An hour ago\n                    </div>\n                </div>\n            </td-step>\n            <td-step label=\"Version 2\"\n                     sublabel=\"by Admin\">\n                <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n                    <div fxLayout=\"row\" class=\"md-body-2\">\n                        Description goes here\n                    </div>\n                    <div fxLayout=\"row\" class=\"mat-caption\">\n                        A day ago\n                    </div>\n                </div>\n            </td-step>\n        </td-steps>\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Autocomplete\">Autocomplete <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Autocomplete\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <div class=\"pad-top-sm\" layout=\"row\">\n                    <mat-form-field floatLabel=\"always\" flex=\"50\">\n                        <input matInput placeholder=\"State\" [matAutocomplete]=\"tdAuto\" [(ngModel)]=\"currentState\"\n                               #modelDir=\"ngModel\" (ngModelChange)=\"this.tdStates = filterStates(currentState)\"\n                               [disabled]=\"tdDisabled\">\n                    </mat-form-field>\n                </div>\n                <div class=\"push-top\">\n                    <button mat-button (click)=\"modelDir.reset()\" class=\"text-upper\">Reset</button>\n                    <button mat-button (click)=\"currentState='California'\" class=\"text-upper\">Set value</button>\n                    <button mat-button (click)=\"tdDisabled=!tdDisabled\" class=\"text-upper\">Toggle disabled</button>\n                </div>\n                <mat-autocomplete #tdAuto=\"matAutocomplete\">\n                    <mat-option *ngFor=\"let state of tdStates\" [value]=\"state.name\">\n                        <span>{{ state.name }}</span>\n                        <span class=\"demo-secondary-text\"> ({{state.code}}) </span>\n                    </mat-option>\n                </mat-autocomplete>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <div class=\"pad-top-sm\" layout=\"row\">\n            <mat-form-field floatLabel=\"always\" flex=\"50\">\n                <input matInput placeholder=\"State\" [matAutocomplete]=\"tdAuto\" [(ngModel)]=\"currentState\"\n                       #modelDir=\"ngModel\" (ngModelChange)=\"this.tdStates = filterStates(currentState)\"\n                       [disabled]=\"tdDisabled\">\n            </mat-form-field>\n        </div>\n        <div class=\"push-top\">\n            <button mat-button (click)=\"modelDir.reset()\" class=\"text-upper\">Reset</button>\n            <button mat-button (click)=\"currentState='California'\" class=\"text-upper\">Set value</button>\n            <button mat-button (click)=\"tdDisabled=!tdDisabled\" class=\"text-upper\">Toggle disabled</button>\n        </div>\n        <mat-autocomplete #tdAuto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let state of tdStates\" [value]=\"state.name\">\n                <span>{ { state.name } }</span>\n                <span class=\"demo-secondary-text\"> ({ {state.code} }) </span>\n            </mat-option>\n        </mat-autocomplete>\n        ]]>\n      </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n      <![CDATA[\n        this.currentState = '';\n        this.reactiveStates = '';\n        this.tdStates = [];\n        this.tdDisabled = false;\n        this.states = [\n            { code: 'AL', name: 'Alabama' },\n            { code: 'AK', name: 'Alaska' },\n            { code: 'AZ', name: 'Arizona' },\n            { code: 'AR', name: 'Arkansas' },\n            { code: 'CA', name: 'California' },\n            { code: 'CO', name: 'Colorado' },\n            { code: 'CT', name: 'Connecticut' },\n            { code: 'DE', name: 'Delaware' },\n            { code: 'FL', name: 'Florida' },\n            { code: 'GA', name: 'Georgia' },\n            { code: 'HI', name: 'Hawaii' },\n            { code: 'ID', name: 'Idaho' },\n            { code: 'IL', name: 'Illinois' },\n            { code: 'IN', name: 'Indiana' },\n            { code: 'IA', name: 'Iowa' },\n            { code: 'KS', name: 'Kansas' },\n            { code: 'KY', name: 'Kentucky' },\n            { code: 'LA', name: 'Louisiana' },\n            { code: 'ME', name: 'Maine' },\n            { code: 'MD', name: 'Maryland' },\n            { code: 'MA', name: 'Massachusetts' },\n            { code: 'MI', name: 'Michigan' },\n            { code: 'MN', name: 'Minnesota' },\n            { code: 'MS', name: 'Mississippi' },\n            { code: 'MO', name: 'Missouri' },\n            { code: 'MT', name: 'Montana' },\n            { code: 'NE', name: 'Nebraska' },\n            { code: 'NV', name: 'Nevada' },\n            { code: 'NH', name: 'New Hampshire' },\n            { code: 'NJ', name: 'New Jersey' },\n            { code: 'NM', name: 'New Mexico' },\n            { code: 'NY', name: 'New York' },\n            { code: 'NC', name: 'North Carolina' },\n            { code: 'ND', name: 'North Dakota' },\n            { code: 'OH', name: 'Ohio' },\n            { code: 'OK', name: 'Oklahoma' },\n            { code: 'OR', name: 'Oregon' },\n            { code: 'PA', name: 'Pennsylvania' },\n            { code: 'RI', name: 'Rhode Island' },\n            { code: 'SC', name: 'South Carolina' },\n            { code: 'SD', name: 'South Dakota' },\n            { code: 'TN', name: 'Tennessee' },\n            { code: 'TX', name: 'Texas' },\n            { code: 'UT', name: 'Utah' },\n            { code: 'VT', name: 'Vermont' },\n            { code: 'VA', name: 'Virginia' },\n            { code: 'WA', name: 'Washington' },\n            { code: 'WV', name: 'West Virginia' },\n            { code: 'WI', name: 'Wisconsin' },\n            { code: 'WY', name: 'Wyoming' },\n        ];\n\n        ...\n\n        displayFn: function(value) {\n            return value && typeof value === 'object' ? value.name : value;\n        },\n\n        filterStates: function(val) {\n            return val ? this.states.filter((s) => s.name.match(new RegExp(val, 'gi'))) : this.states;\n        },\n\n        ...\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Filter\">Filter <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Filter\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <h3 class=\"md-title\">Autocomplete with chips and no custom inputs</h3>\n                <mat-divider></mat-divider>\n                <mat-tab-group mat-stretch-tabs dynamicHeight color=\"accent\">\n                    <mat-tab>\n                        <ng-template mat-tab-label>Demo</ng-template>\n                        <div class=\"push\">\n                            <div class=\"mat-body-1\">Type and select a preset option:</div>\n                            <td-chips [items]=\"items\" [(ngModel)]=\"itemsRequireMatch\"\n                                      placeholder=\"Enter autocomplete strings\" [disabled]=\"readOnly\"\n                                      requireMatch></td-chips>\n                        </div>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>Code</ng-template>\n                        <mat-card-content>\n                            <p>HTML:</p>\n                            <pre lang=\"html\">\n                            <![CDATA[\n        <td-chips [items]=\"items\" [(ngModel)]=\"itemsRequireMatch\" placeholder=\"Enter autocomplete strings\"\n                  [disabled]=\"readOnly\" requireMatch></td-chips>\n          ]]>\n                        </pre>\n                            <p>Javascript:</p>\n                            <pre lang=\"javascript\">\n                            <![CDATA[\n        this.readOnly = false;\n\n        this.items = [\n            'stepper',\n            'expansion-panel',\n            'markdown',\n            'highlight',\n            'loading',\n            'media',\n            'chips',\n            'http',\n            'json-formatter',\n            'pipes',\n            'need more?',\n        ];\n\n        this.itemsRequireMatch = this.items.slice(0, 6);\n\n        ...\n\n        toggleReadOnly: function() {\n            this.readOnly = !this.readOnly;\n        },\n\n        ...\n          ]]>\n                        </pre>\n                        </mat-card-content>\n                    </mat-tab>\n                </mat-tab-group>\n                <mat-divider></mat-divider>\n                <mat-card-actions>\n                    <button mat-button color=\"primary\" (click)=\"toggleReadOnly()\" class=\"text-upper\">Toggle ReadOnly\n                    </button>\n                </mat-card-actions>\n            </mat-card-content>\n            <mat-card-content>\n                <h3 class=\"md-title\">Autocomplete with custom inputs</h3>\n                <mat-divider></mat-divider>\n                <mat-tab-group mat-stretch-tabs dynamicHeight color=\"accent\">\n                    <mat-tab>\n                        <ng-template mat-tab-label>Demo</ng-template>\n                        <div class=\"push\">\n                            <div class=\"mat-body-1\">Type and select option or enter custom text and press enter:</div>\n                            <td-chips [items]=\"items\" placeholder=\"Enter any string\"></td-chips>\n                        </div>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>Code</ng-template>\n                        <mat-card-content>\n                            <p>HTML:</p>\n                            <pre lang=\"html\">\n                            <![CDATA[\n        <td-chips [items]=\"items\" placeholder=\"Enter any string\"></td-chips>\n          ]]>\n                        </pre>\n                            <p>Javascript:</p>\n                            <pre lang=\"javascript\">\n                            <![CDATA[\n        this.items = [\n            'stepper',\n            'expansion-panel',\n            'markdown',\n            'highlight',\n            'loading',\n            'media',\n            'chips',\n            'http',\n            'json-formatter',\n            'pipes',\n            'need more?',\n        ];\n          ]]>\n                        </pre>\n                        </mat-card-content>\n                    </mat-tab>\n                </mat-tab-group>\n            </mat-card-content>\n            <mat-card-content>\n                <h3 class=\"md-title\">Demo allowing custom inputs for tags</h3>\n                <mat-divider></mat-divider>\n                <mat-tab-group mat-stretch-tabs dynamicHeight color=\"accent\">\n                    <mat-tab>\n                        <ng-template mat-tab-label>Demo</ng-template>\n                        <div class=\"push\">\n                            <div class=\"mat-body-1\">Type any test and press enter:</div>\n                            <td-chips placeholder=\"Enter any string\"></td-chips>\n                        </div>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>Code</ng-template>\n                        <mat-card-content>\n                            <p>HTML:</p>\n                            <pre lang=\"html\">\n                            <![CDATA[\n        <td-chips placeholder=\"Enter any string\"></td-chips>\n          ]]>\n                        </pre>\n                        </mat-card-content>\n                    </mat-tab>\n                </mat-tab-group>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"SearchableExpansionPanels\">Searchable/Filterable Expansion Panels <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"SearchableExpansionPanels\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <mat-tab-group mat-stretch-tabs color=\"accent\">\n                    <mat-tab>\n                        <ng-template mat-tab-label>Demo</ng-template>\n                        <div class=\"pad-top-md pad-bottom-md pad-right-xxl pad-left-xxl\">\n                            <div class=\"pad-top-md pad-bottom-sm\">\n                                <mat-button-toggle-group fxLayout=\"row\" fxLayoutAlign=\"space-between center\"\n                                                         class=\"expansion-panel-filter-toggle-group\" multiple>\n                                    <mat-button-toggle (change)=\"toggleDropletsFilter('type:asset')\"\n                                                       [checked]=\"isDropletFilterChecked('type:asset')\">\n                                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                                            <div class=\"mat-display-1 pad-top-sm\"\n                                                 fxFlex=\"55\">{{getDropletTypeCount('asset')}}</div>\n                                            <div class=\"pad-top-sm\" fxFlex=\"45\">Assets</div>\n                                        </div>\n                                    </mat-button-toggle>\n                                    <mat-button-toggle (change)=\"toggleDropletsFilter('type:extension')\"\n                                                       [checked]=\"isDropletFilterChecked('type:extension')\">\n                                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                                            <div class=\"mat-display-1 pad-top-sm\"\n                                                 fxFlex=\"55\">{{getDropletTypeCount('extension')}}</div>\n                                            <div class=\"pad-top-sm\" fxFlex=\"45\">Extensions</div>\n                                        </div>\n                                    </mat-button-toggle>\n                                    <mat-button-toggle (change)=\"toggleDropletsFilter('type:flow')\"\n                                                       [checked]=\"isDropletFilterChecked('type:flow')\">\n                                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                                            <div class=\"mat-display-1 pad-top-sm\"\n                                                 fxFlex=\"55\">{{getDropletTypeCount('flow')}}</div>\n                                            <div class=\"pad-top-sm\" fxFlex=\"45\">Flows</div>\n                                        </div>\n                                    </mat-button-toggle>\n                                    <mat-button-toggle (change)=\"toggleDropletsFilter('compliant.label:Compliant')\"\n                                                       [checked]=\"isDropletFilterChecked('compliant.label:Compliant')\">\n                                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                                            <div class=\"mat-display-1 pad-top-sm\"\n                                                 fxFlex=\"55\">{{getDropletCertificationCount('compliant')}}</div>\n                                            <div class=\"pad-top-sm\" fxFlex=\"45\">Compliant</div>\n                                        </div>\n                                    </mat-button-toggle>\n                                    <mat-button-toggle (change)=\"toggleDropletsFilter('fleet.label:Fleet')\"\n                                                       [checked]=\"isDropletFilterChecked('fleet.label:Fleet')\">\n                                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                                            <div class=\"mat-display-1 pad-top-sm\"\n                                                 fxFlex=\"55\">{{getDropletCertificationCount('fleet')}}</div>\n                                            <div class=\"pad-top-sm\" fxFlex=\"45\">Fleet</div>\n                                        </div>\n                                    </mat-button-toggle>\n                                    <mat-button-toggle (change)=\"toggleDropletsFilter('prod.label:Production Ready')\"\n                                                       [checked]=\"isDropletFilterChecked('prod.label:Production Ready')\">\n                                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                                            <div class=\"mat-display-1 pad-top-sm\"\n                                                 fxFlex=\"55\">{{getDropletCertificationCount('prod')}}</div>\n                                            <div class=\"pad-top-sm\" fxFlex=\"45\">Production Ready</div>\n                                        </div>\n                                    </mat-button-toggle>\n                                    <mat-button-toggle (change)=\"toggleDropletsFilter('secure.label:Secure')\"\n                                                       [checked]=\"isDropletFilterChecked('secure.label:Secure')\">\n                                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                                            <div class=\"mat-display-1 pad-top-sm\"\n                                                 fxFlex=\"55\">{{getDropletCertificationCount('secure')}}</div>\n                                            <div class=\"pad-top-sm\" fxFlex=\"45\">Secure</div>\n                                        </div>\n                                    </mat-button-toggle>\n                                </mat-button-toggle-group>\n                                <div id=\"fds-droplet-filter-clear-grouping-button-container\">\n                                    <span *ngIf=\"dropletsSearchTerms.length > 0\"\n                                          (click)=\"dropletsSearchTerms = [];filterDroplets(activeDropletColumn.name, activeDropletColumn.sortOrder);\"><i\n                                        class=\"fa fa-plus-circle fa-rotate-45\" aria-hidden=\"true\"></i><span\n                                        class=\"pad-left-sm link\">Clear Grouping</span></span>\n                                </div>\n                            </div>\n                            <div layout=\"row\" layout-align=\"space-between center\">\n                                <div flex fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                    <td-chips [(ngModel)]=\"dropletsSearchTerms\" [items]=\"autoCompleteDroplets\"\n                                              (add)=\"filterDroplets(activeDropletColumn.name, activeDropletColumn.sortOrder);\"\n                                              (remove)=\"filterDroplets(activeDropletColumn.name, activeDropletColumn.sortOrder);\"\n                                              class=\"push-right-sm\"></td-chips>\n                                    <span class=\"push-top-sm pad-right-sm\">Sort by:</span>\n                                    <button class=\"push-top-sm\" color=\"fds-primary\" mat-raised-button\n                                            [matMenuTriggerFor]=\"dropletGridSortMenu\">\n                                        {{getSortBy()}}<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                                <mat-menu class=\"fds-primary-dropdown-button-menu\" #dropletGridSortMenu=\"matMenu\"\n                                          [overlapTrigger]=\"false\">\n                                    <div *ngFor=\"let column of dropletColumns\">\n                                        <button mat-menu-item *ngIf=\"column.sortable\"\n                                                (click)=\"sortDroplets(column);\">{{column.label}} {{(column.sortOrder === 'ASC') ? 'DESC' : 'ASC'}}</button>\n                                    </div>\n                                </mat-menu>\n                            </div>\n                        </div>\n                        <div class=\"pad-right-xxl pad-left-xxl\">\n                            <div *ngFor=\"let droplet of filteredDroplets\">\n                                <td-expansion-panel class=\"mat-elevation-z5\" label={{droplet.label}}\n                                                    sublabel={{droplet.sublabel}} [disabled]=\"disabled\">\n                                    <ng-template td-expansion-panel-label>\n                                        <div fxLayout=\"column\" fxLayoutAlign=\"space-between start\">\n                                            <span class=\"md-title text-caps\">{{droplet.displayName}}</span>\n                                            <span class=\"md-subhead\">{{droplet.type}}</span>\n                                        </div>\n                                    </ng-template>\n                                    <ng-template td-expansion-panel-sublabel>\n                                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                                 fxLayoutAlign=\"space-between start\">\n                                                <span class=\"text-upper\">Versions</span> {{droplet.versions.length}}\n                                            </div>\n                                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                                 fxLayoutAlign=\"space-between start\">\n                                                <span class=\"text-upper\">Flows</span> {{droplet.flows.length}}\n                                            </div>\n                                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                                 fxLayoutAlign=\"space-between start\">\n                                                <span class=\"text-upper\">Extensions</span> {{droplet.extensions.length}}\n                                            </div>\n                                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                                 fxLayoutAlign=\"space-between start\">\n                                                <span class=\"text-upper\">Assests</span> {{droplet.assets.length}}\n                                            </div>\n                                        </div>\n                                    </ng-template>\n                                    <div class=\"mat-padding\">\n                                        <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n                                            <div class=\"pad-bottom-sm\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                                <button color=\"fds-primary\"\n                                                        [matMenuTriggerFor]=\"primaryButtonDropdownMenu\"\n                                                        mat-raised-button>\n                                                    Actions<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                                                </button>\n                                                <mat-menu class=\"fds-primary-dropdown-button-menu\"\n                                                          #primaryButtonDropdownMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                                                    <button mat-menu-item *ngFor=\"let action of droplet.actions\">\n                                                        <span>{{action.name}}</span>\n                                                    </button>\n                                                </mat-menu>\n                                            </div>\n                                            <div fxLayout=\"row\">\n                                                <div fxFlex=\"25\">\n                                                    <span class=\"text-upper\">Description</span>\n                                                    <p>Blah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah\n                                                        blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla\n                                                        bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah\n                                                        bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah\n                                                        blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla,\n                                                        blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla,\n                                                        bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah\n                                                        blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah\n                                                        blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla\n                                                        bla, blah blah bla</p>\n                                                </div>\n                                                <div fxFlex=\"50\">\n                                                    <mat-card fxFlex>\n                                                        <mat-card-content class=\"pad-top-sm\">\n                                                            <img src=\"{{droplet.img}}\">\n                                                        </mat-card-content>\n                                                    </mat-card>\n                                                </div>\n                                                <div fxFlex=\"25\">\n                                                    <span class=\"text-upper\">Change Log</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </td-expansion-panel>\n                                <div class=\"pad-bottom-sm\"></div>\n                            </div>\n                        </div>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>Code</ng-template>\n                        <p>HTML:</p>\n                        <pre lang=\"html\">\n                        <![CDATA[\n        <div class=\"pad-top-md pad-bottom-md pad-right-xxl pad-left-xxl\">\n            <div class=\"pad-top-md pad-bottom-sm\">\n                <mat-button-toggle-group fxLayout=\"row\" fxLayoutAlign=\"space-between center\"\n                                         class=\"expansion-panel-filter-toggle-group\" multiple>\n                    <mat-button-toggle (change)=\"toggleDropletsFilter('type:asset')\"\n                                       [checked]=\"isDropletFilterChecked('type:asset')\">\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">{ {getDropletTypeCount('asset')} }</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Assets</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle (change)=\"toggleDropletsFilter('type:extension')\"\n                                       [checked]=\"isDropletFilterChecked('type:extension')\">\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">{\n                                {getDropletTypeCount('extension')} }</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Extensions</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle (change)=\"toggleDropletsFilter('type:flow')\"\n                                       [checked]=\"isDropletFilterChecked('type:flow')\">\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">{ {getDropletTypeCount('flow')} }</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Flows</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle (change)=\"toggleDropletsFilter('compliant.label:Compliant')\"\n                                       [checked]=\"isDropletFilterChecked('compliant.label:Compliant')\">\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">{ {getDropletCertificationCount('compliant')} }</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Compliant</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle (change)=\"toggleDropletsFilter('fleet.label:Fleet')\"\n                                       [checked]=\"isDropletFilterChecked('fleet.label:Fleet')\">\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">{ {getDropletCertificationCount('fleet')} }</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Fleet</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle (change)=\"toggleDropletsFilter('prod.label:Production Ready')\"\n                                       [checked]=\"isDropletFilterChecked('prod.label:Production Ready')\">\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">{\n                                {getDropletCertificationCount('prod')} }</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Production Ready</div>\n                        </div>\n                    </mat-button-toggle>\n                    <mat-button-toggle (change)=\"toggleDropletsFilter('secure.label:Secure')\"\n                                       [checked]=\"isDropletFilterChecked('secure.label:Secure')\">\n                        <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"space-around stretch\">\n                            <div class=\"mat-display-1 pad-top-sm\" fxFlex=\"55\">{ {getDropletCertificationCount('secure')} }</div>\n                            <div class=\"pad-top-sm\" fxFlex=\"45\">Secure</div>\n                        </div>\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n                <button *ngIf=\"activeDropletColumn\" mat-button color=\"primary\"\n                        (click)=\"dropletsSearchTerms = [];filterDroplets(activeDropletColumn.name, activeDropletColumn.sortOrder);\">Clear Grouping</button>\n            </div>\n            <div layout=\"row\" layout-align=\"space-between center\">\n                <div flex fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                    <td-chips [(ngModel)]=\"dropletsSearchTerms\" [items]=\"autoCompleteDroplets\"\n                              (add)=\"filterDroplets(activeDropletColumn.name, activeDropletColumn.sortOrder);\"\n                              (remove)=\"filterDroplets(activeDropletColumn.name, activeDropletColumn.sortOrder);\"\n                              class=\"push-right-sm\"></td-chips>\n                    <span class=\"pad-right-sm\">Sort by:</span>\n                    <button color=\"fds-primary\" mat-raised-button [matMenuTriggerFor]=\"dropletGridSortMenu\">\n                        { {getSortBy()} }<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n                <mat-menu class=\"fds-primary-dropdown-button-menu\" #dropletGridSortMenu=\"matMenu\"\n                          [overlapTrigger]=\"false\">\n                    <div *ngFor=\"let column of dropletColumns\">\n                        <button mat-menu-item *ngIf=\"column.sortable\" (click)=\"sortDroplets(column);\">{\n                            {column.label} } { {(column.sortOrder === 'ASC') ? 'DESC' : 'ASC'} }</button>\n                    </div>\n                </mat-menu>\n            </div>\n        </div>\n        <div class=\"pad-right-xxl pad-left-xxl\">\n            <div *ngFor=\"let droplet of filteredDroplets\">\n                <td-expansion-panel class=\"mat-elevation-z5\" label={ {droplet.label} } sublabel={ {droplet.sublabel} }\n                                    [disabled]=\"disabled\">\n                    <ng-template td-expansion-panel-label>\n                        <div fxLayout=\"column\" fxLayoutAlign=\"space-between start\">\n                            <span class=\"md-title text-caps\">{ {droplet.displayName} }</span>\n                            <span class=\"md-subhead\">{ {droplet.type} }</span>\n                        </div>\n                    </ng-template>\n                    <ng-template td-expansion-panel-sublabel>\n                        <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                 fxLayoutAlign=\"space-between start\">\n                                <span class=\"text-upper\">Versions</span> { {droplet.versions.length} }\n                            </div>\n                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                 fxLayoutAlign=\"space-between start\">\n                                <span class=\"text-upper\">Flows</span> { {droplet.flows.length} }\n                            </div>\n                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                 fxLayoutAlign=\"space-between start\">\n                                <span class=\"text-upper\">Extensions</span> { {droplet.extensions.length} }\n                            </div>\n                            <div class=\"pad-right-xxl pad-left-xxl\" fxLayout=\"column\"\n                                 fxLayoutAlign=\"space-between start\">\n                                <span class=\"text-upper\">Assests</span> { {droplet.assets.length} }\n                            </div>\n                        </div>\n                    </ng-template>\n                    <div class=\"mat-padding\">\n                        <div fxLayout=\"column\" fxLayoutAlign=\"space-between stretch\">\n                            <div class=\"pad-bottom-sm\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                <button color=\"fds-primary\" [matMenuTriggerFor]=\"primaryButtonDropdownMenu\"\n                                        mat-raised-button>\n                                    Actions<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                                </button>\n                                <mat-menu class=\"fds-primary-dropdown-button-menu\" #primaryButtonDropdownMenu=\"matMenu\"\n                                          [overlapTrigger]=\"false\">\n                                    <button mat-menu-item *ngFor=\"let action of droplet.actions\">\n                                        <span>{ {action.name} }</span>\n                                    </button>\n                                </mat-menu>\n                            </div>\n                            <div fxLayout=\"row\">\n                                <div fxFlex=\"25\">\n                                    <span class=\"text-upper\">Description</span>\n                                    <p>Blah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah blaBlah blah bla, bla bla, blah blah bla</p>\n                                </div>\n                                <div fxFlex=\"50\">\n                                    <mat-card fxFlex>\n                                        <mat-card-content class=\"pad-top-sm\">\n                                            <img src=\"{ {droplet.img} }\">\n                                        </mat-card-content>\n                                    </mat-card>\n                                </div>\n                                <div fxFlex=\"25\">\n                                    <span class=\"text-upper\">Change Log</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </td-expansion-panel>\n                <div class=\"pad-bottom-sm\"></div>\n            </div>\n        </div>\n          ]]>\n                    </pre>\n                        <p>Javascript:</p>\n                        <pre lang=\"javascript\">\n                        <![CDATA[\n        this.dataTableService = TdDataTableService;\n\n        this.droplets = [\n            {\n                id: '23f6cc59-0156-1000-09b4-2b0610089090',\n                name: \"Decompression_Circular_Flow\",\n                displayName: 'Decompressed Circular flow',\n                type: 'flow',\n                sublabel: 'A sublabel',\n                compliant: {\n                    id: '25fd6vv87-3549-0001-05g6-4d4567890765',\n                    label: 'Compliant',\n                    type: 'certification'\n                },\n                fleet: {\n                    id: '23f6cc59-3549-0001-05g6-4d4567890765',\n                    label: 'Fleet',\n                    type: 'certification'\n                },\n                prod: {\n                    id: '52fd6vv87-3549-0001-05g6-4d4567890765',\n                    label: 'Production Ready',\n                    type: 'certification'\n                },\n                secure: {\n                    id: '32f6cc59-3549-0001-05g6-4d4567890765',\n                    label: 'Secure',\n                    type: 'certification'\n                },\n                versions: [\n                    {\n                        id: '23f6cc59-0156-1000-06b4-2b0810089090',\n                        revision: '1',\n                        dependentFlows: [\n                            {\n                                id: '25fd6vv87-3549-0001-05g6-4d4567890765'\n                            }\n                        ],\n                        created: date.setDate(date.getDate() - 1),\n                        updated: new Date()\n                    }, {\n                        id: '25fd6vv87-3549-0001-05g6-4d4567890765',\n                        revision: '2',\n                        dependentFlows: [\n                            {\n                                id: '23f6cc59-0156-1000-06b4-2b0810089090'\n                            }\n                        ],\n                        created: new Date(),\n                        updated: new Date()\n                    }\n                ],\n                flows: [],\n                extensions: [],\n                assets: [],\n                actions: [\n                    {\n                        'name': 'Delete',\n                        'icon': 'fa fa-close',\n                        'tooltip': 'Delete User'\n                    },\n                    {\n                        'name': 'Manage',\n                        'icon': 'fa fa-user',\n                        'tooltip': 'Manage User'\n                    },\n                    {\n                        'name': 'Action 3',\n                        'icon': 'fa fa-question',\n                        'tooltip': 'Whatever else we want to do...'\n                    }\n                ]\n            },\n            {\n                id: '25fd6vv87-3249-0001-05g6-4d4767890765',\n                name: \"DateConversion\",\n                displayName: 'Date conversion',\n                type: 'asset',\n                sublabel: 'A sublabel',\n                compliant: {\n                    id: '25fd6vv34-3549-0001-05g6-4d4567890765',\n                    label: 'Compliant',\n                    type: 'certification'\n                },\n                prod: {\n                    id: '52vn6vv87-3549-0001-05g6-4d4567890765',\n                    label: 'Production Ready',\n                    type: 'certification'\n                },\n                versions: [\n                    {\n                        id: '23f6ic59-0156-1000-06b4-2b0810089090',\n                        revision: '1',\n                        dependentFlows: [\n                            {\n                                id: '23f6cc19-0156-1000-06b4-2b0810089090'\n                            }\n                        ],\n                        created: new Date(),\n                        updated: new Date()\n                    }\n                ],\n                flows: [],\n                extensions: [],\n                assets: [],\n                actions: [\n                    {\n                        'name': 'Delete',\n                        'icon': 'fa fa-close',\n                        'tooltip': 'Delete User'\n                    }\n                ]\n            },\n            {\n                id: '52fd6vv87-3294-0001-05g6-4d4767890765',\n                name: \"nifi-email-bundle\",\n                displayName: 'nifi-email-bundle',\n                type: 'extension',\n                sublabel: 'A sublabel',\n                compliant: {\n                    id: '33fd6vv87-3549-0001-05g6-4d4567890765',\n                    label: 'Compliant',\n                    test: {\n                        label: 'test'\n                    },\n                    type: 'certification'\n                },\n                versions: [\n                    {\n                        id: '23d3cc59-0156-1000-06b4-2b0810089090',\n                        revision: '1',\n                        dependentFlows: [\n                            {\n                                id: '23f6cc89-0156-1000-06b4-2b0810089090'\n                            }\n                        ],\n                        created: new Date(),\n                        updated: new Date()\n                    }\n                ],\n                flows: [],\n                extensions: [],\n                assets: [],\n                actions: [\n                    {\n                        'name': 'Delete',\n                        'icon': 'fa fa-close',\n                        'tooltip': 'Delete User'\n                    }, {\n                        'name': 'Manage',\n                        'icon': 'fa fa-user',\n                        'tooltip': 'Manage User'\n                    }\n                ]\n        }];\n\n        this.filteredDroplets = [];\n\n        this.dropletColumns = [\n            { name: 'id', label: 'ID', sortable: true },\n            { name: 'name', label: 'Name', sortable: true },\n            { name: 'displayName', label: 'Display Name', sortable: true },\n            { name: 'sublabel', label: 'Label', sortable: true },\n            { name: 'type', label: 'Type', sortable: true }\n        ];\n\n        this.autoCompleteDroplets = [];\n        this.dropletsSearchTerms = [];\n\n        ...\n\n        isDropletFilterChecked: function(term) {\n            return (this.dropletsSearchTerms.indexOf(term) > -1);\n        },\n\n        getDropletTypeCount: function(type) {\n            return this.filteredDroplets.filter(function(droplet) {\n                return droplet.type === type;\n            }).length;\n        },\n\n        getDropletCertificationCount: function(certification) {\n            return this.filteredDroplets.filter(droplet => {\n                return Object.keys(droplet).find((key) => {\n                    if (key === certification && droplet[certification].type === 'certification') {\n                        return droplet;\n                    }\n                });\n            }).length;\n        },\n\n        getSortBy: function() {\n            var sortByColumnLabel;\n            var arrayLength = this.dropletColumns.length;\n            for (var i = 0; i < arrayLength; i++) {\n                if (this.dropletColumns[i].active === true) {\n                    sortByColumnLabel = this.dropletColumns[i].label;\n                    break;\n                }\n            }\n            return sortByColumnLabel;\n        },\n\n        sortDroplets: function(column) {\n            if (column.sortable === true) {\n                // toggle column sort order\n                var sortOrder = column.sortOrder = (column.sortOrder === 'ASC') ? 'DESC' : 'ASC';\n                this.filterDroplets(column.name, sortOrder);\n\n                //only one column can be actively sorted so we reset all to inactive\n                this.dropletColumns.forEach(function (c) {\n                            c.active = false;\n                });\n\n                //and set this column as the actively sorted column\n                column.active = true;\n                this.activeDropletColumn = column;\n            }\n        },\n\n        toggleDropletsFilter: function(searchTerm) {\n            var applySearchTerm = true;\n            // check if the search term is already applied and remove it if true\n            if (this.dropletsSearchTerms.length > 0) {\n                var arrayLength = this.dropletsSearchTerms.length;\n                for (var i = 0; i < arrayLength; i++) {\n                    var index = this.dropletsSearchTerms.indexOf(searchTerm);\n                    if (index > -1) {\n                        this.dropletsSearchTerms.splice(index, 1);\n                        applySearchTerm = false;\n                    }\n                }\n            }\n\n            // if we just removed the search term do NOT apply it again\n            if (applySearchTerm) {\n                this.dropletsSearchTerms.push(searchTerm);\n            }\n\n            this.filterDroplets(this.activeDropletColumn.name, this.activeDropletColumn.sortOrder);\n        },\n\n        filterDroplets: function(sortBy, sortOrder) {\n            // if `sortBy` is `undefined` then find the first sortable column in this.dropletColumns\n            if (sortBy === undefined) {\n                var arrayLength = this.dropletColumns.length;\n                for (var i = 0; i < arrayLength; i++) {\n                    if (this.dropletColumns[i].sortable === true) {\n                        sortBy = this.dropletColumns[i].name;\n                        this.activeDropletColumn = this.dropletColumns[i];\n\n                        //only one column can be actively sorted so we reset all to inactive\n                        this.dropletColumns.forEach(c => c.active = false);\n\n                        //and set this column as the actively sorted column\n                        this.dropletColumns[i].active = true;\n                        break;\n                    }\n                }\n            }\n\n            // if `sortOrder` is `undefined` then use 'ASC'\n            if (sortOrder === undefined) {\n                sortOrder = 'ASC'\n            }\n\n            var newData = this.droplets;\n\n            for (var i = 0; i < this.dropletsSearchTerms.length; i++) {\n                newData = this.filterData(newData, this.dropletsSearchTerms[i], true, this.activeDropletColumn.name);\n            }\n\n            newData = this.dataTableService.sortData(newData, sortBy, sortOrder);\n            this.filteredDroplets = newData;\n            this.getAutoCompleteDroplets();\n        },\n\n        getAutoCompleteDroplets: function() {\n            this.autoCompleteDroplets = [];\n            this.dropletColumns.forEach(c => this.filteredDroplets.forEach(r => (r[c.name.toLowerCase()]) ? this.autoCompleteDroplets.push(r[c.name.toLowerCase()].toString()) : ''));\n        },\n\n        filterData: function(data, searchTerm, ignoreCase) {\n            var field = '';\n            if (searchTerm.indexOf(\":\") > -1) {\n                field = searchTerm.split(':')[0].trim();\n                searchTerm = searchTerm.split(':')[1].trim();\n            }\n            var filter = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n\n            if (filter) {\n                data = data.filter(item => {\n                        var res = Object.keys(item).find((key) => {\n                        if (field.indexOf(\".\") > -1) {\n                            var objArray = field.split(\".\");\n                            var obj = item;\n                            var arrayLength = objArray.length;\n                            for (var i = 0; i < arrayLength; i++) {\n                                try {\n                                    obj = obj[objArray[i]];\n                                } catch (e) {\n                                    return false;\n                                }\n                            }\n                            var preItemValue = ('' + obj);\n                            var itemValue = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n                            return itemValue.indexOf(filter) > -1;\n                        } else {\n                            if (key !== field && field !== '') {\n                                return false;\n                            }\n                            var preItemValue = ('' + item[key]);\n                            var itemValue = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n                            return itemValue.indexOf(filter) > -1;\n                        }\n                    });\n                    return !(typeof res === 'undefined');\n                });\n            }\n            return data;\n        },\n\n        ...\n          ]]>\n                    </pre>\n                    </mat-tab>\n                </mat-tab-group>\n            </mat-card-content>\n            <mat-divider></mat-divider>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Table\">Table <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Table\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <p>Example table with: Paging Bar / Filter / Sortable Columns / Multi-select with available Actions</p>\n                <mat-tab-group mat-stretch-tabs color=\"accent\">\n                    <mat-tab>\n                        <ng-template mat-tab-label>Demo</ng-template>\n                        <div layout=\"row\" layout-align=\"space-between center\"\n                             class=\"pad-top-md pad-bottom-sm pad-left-md pad-right-md\">\n                            <span class=\"table-title\">\n                            <span>Table title</span>\n                            </span>\n                            <div flex class=\"push-right-sm\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                <td-chips [items]=\"autoCompleteData\" (add)=\"searchAdd($event)\"\n                                          (remove)=\"searchRemove($event)\"></td-chips>\n                                <button class=\"push-top-sm\" color=\"fds-primary\" mat-raised-button\n                                        [matMenuTriggerFor]=\"dataTableActionMenu\">\n                                    Actions<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                                </button>\n                            </div>\n                            <mat-menu class=\"fds-primary-dropdown-button-menu\" #dataTableActionMenu=\"matMenu\"\n                                      [overlapTrigger]=\"false\">\n                                <button mat-menu-item> Option 1</button>\n                                <button mat-menu-item> Option 2</button>\n                            </mat-menu>\n                        </div>\n                        <div class=\"pad-left-md pad-right-md\">\n                            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"td-data-table\">\n                                <div class=\"td-data-table-column\" (click)=\"sort($event, column)\"\n                                     [matTooltip]=\"column.tooltip\" *ngFor=\"let column of columns\"\n                                     fxFlex=\"{{column.width}}\">\n                                    <i *ngIf=\"column.active && column.sortable && column.sortOrder === 'ASC'\"\n                                       class=\"fa fa-caret-up\" aria-hidden=\"true\"></i>\n                                    <i *ngIf=\"column.active && column.sortable && column.sortOrder === 'DESC'\"\n                                       class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                                    {{column.label}}\n                                </div>\n                                <div class=\"td-data-table-column\" fxFlex=10>\n                                    <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                        <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"allRowsSelected\"\n                                                      (checked)=\"allRowsSelected\"\n                                                      (change)=\"toggleSelectAll()\"></mat-checkbox>\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"td-data-table-row\"\n                                     [ngClass]=\"{'selected' : row.checked}\" *ngFor=\"let row of filteredData\"\n                                     (click)=\"row.checked = !row.checked;toggleSelect(row)\">\n                                    <div class=\"td-data-table-cell\" *ngFor=\"let column of columns\"\n                                         fxFlex=\"{{column.width}}\">\n                                        <div *ngIf=\"column.name !== 'comments' || row['comments']\">\n                                            {{column.format ? column.format(row[column.name]) : row[column.name]}}\n                                        </div>\n                                    </div>\n                                    <div class=\"td-data-table-cell\" fxFlex=10>\n                                        <div *ngIf=\"row.actions\">\n                                            <div *ngIf=\"row.actions.length <= 4\" fxLayout=\"row\"\n                                                 fxLayoutAlign=\"end center\">\n                                                <button (click)=\"row.checked = !row.checked\"\n                                                        *ngFor=\"let action of row.actions\"\n                                                        matTooltip=\"{{action.tooltip}}\" mat-icon-button color=\"accent\"\n                                                        [disabled]=\"action.disabled ? '' : null\">\n                                                    <i class=\"{{action.icon}}\" aria-hidden=\"true\"></i>\n                                                </button>\n                                                <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"row.checked\"\n                                                              [checked]=\"row.checked\" (change)=\"toggleSelect(row)\"\n                                                              (click)=\"row.checked = !row.checked;toggleSelect(row)\"></mat-checkbox>\n                                            </div>\n                                            <div *ngIf=\"row.actions.length > 4\" fxLayout=\"row\"\n                                                 fxLayoutAlign=\"end center\">\n                                                <button (click)=\"row.checked = !row.checked\" matTooltip=\"Actions\"\n                                                        mat-icon-button color=\"accent\"\n                                                        [matMenuTriggerFor]=\"tableActionMenu\">\n                                                    <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i>\n                                                </button>\n                                                <mat-menu #tableActionMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                                                    <button *ngFor=\"let action of row.actions\"\n                                                            matTooltip=\"{{action.tooltip}}\" mat-menu-item\n                                                            [disabled]=\"action.disabled ? '' : null\">\n                                                        <i class=\"{{action.icon}}\" aria-hidden=\"true\"></i>\n                                                        <span>{{action.name}}</span>\n                                                    </button>\n                                                </mat-menu>\n                                                <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"row.checked\"\n                                                              [checked]=\"row.checked\" (change)=\"toggleSelect(row)\"\n                                                              (click)=\"row.checked = !row.checked;toggleSelect(row)\"></mat-checkbox>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"!row.actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                            <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"row.checked\"\n                                                          [checked]=\"row.checked\" (change)=\"toggleSelect(row)\"\n                                                          (click)=\"row.checked = !row.checked;toggleSelect(row)\"></mat-checkbox>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"mat-padding\" *ngIf=\"!filteredData.length > 0\" layout=\"row\"\n                                 layout-align=\"center center\">\n                                <h3>No results to display.</h3>\n                            </div>\n                            <td-paging-bar #pagingBar [initialPage]=\"1\" [pageSize]=\"pageSize\" [total]=\"pageCount\"\n                                           (change)=\"page($event)\">\n                                <span hide-xs>Row per page:</span> {{pagingBar.range}} <span\n                                hide-xs>of {{pagingBar.total}}</span>\n                            </td-paging-bar>\n                        </div>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>Code</ng-template>\n                        <p>HTML:</p>\n                        <pre lang=\"html\">\n                        <![CDATA[\n        <div layout=\"row\" layout-align=\"space-between center\" class=\"pad-top-md pad-bottom-sm pad-left-md pad-right-md\">\n            <span class=\"table-title\">\n            <span>Table title</span>\n            </span>\n            <div flex class=\"push-right-sm\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                <td-chips [items]=\"autoCompleteData\" (add)=\"searchAdd($event)\"\n                          (remove)=\"searchRemove($event)\"></td-chips>\n                <button color=\"fds-primary\" mat-raised-button [matMenuTriggerFor]=\"dataTableActionMenu\">\n                    Actions<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </button>\n            </div>\n            <mat-menu class=\"fds-primary-dropdown-button-menu\" #dataTableActionMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                <button mat-menu-item> Option 1 </button>\n                <button mat-menu-item> Option 2 </button>\n            </mat-menu>\n        </div>\n        <div class=\"pad-left-md pad-right-md\">\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"td-data-table\">\n                <div class=\"td-data-table-column\" (click)=\"sort($event, column)\" [matTooltip]=\"column.tooltip\"\n                     *ngFor=\"let column of columns\" fxFlex=\"{ { column.width } }\">\n                    { { column.label } }\n                    <i *ngIf=\"column.active && column.sortable && column.sortOrder === 'ASC'\" class=\"fa fa-caret-up\"\n                       aria-hidden=\"true\"></i>\n                    <i *ngIf=\"column.active && column.sortable && column.sortOrder === 'DESC'\" class=\"fa fa-caret-down\"\n                       aria-hidden=\"true\"></i>\n                </div>\n                <div class=\"td-data-table-column\" fxFlex=10>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                        <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"allRowsSelected\" (checked)=\"allRowsSelected\"\n                                      (change)=\"toggleSelectAll()\"></mat-checkbox>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"td-data-table-row\"\n                     [ngClass]=\"{'selected' : row.checked}\" *ngFor=\"let row of filteredData\"\n                     (click)=\"row.checked = !row.checked;toggleSelect(row)\">\n                    <div class=\"td-data-table-cell\" *ngFor=\"let column of columns\" fxFlex=\"{ { column.width } }\">\n                        <div *ngIf=\"column.name !== 'comments' || row['comments']\">\n                            { { column.format ? column.format(row[column.name]) : row[column.name] } }\n                        </div>\n                    </div>\n                    <div class=\"td-data-table-cell\" fxFlex=10>\n                        <div *ngIf=\"row.actions\">\n                            <div *ngIf=\"row.actions.length <= 4\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                <button (click)=\"row.checked = !row.checked\" *ngFor=\"let action of row.actions\"\n                                        matTooltip=\"{ { action.tooltip } }\" mat-icon-button color=\"accent\"\n                                        [disabled]=\"action.disabled ? '' : null\">\n                                    <i class=\"{ { action.icon } }\" aria-hidden=\"true\"></i>\n                                </button>\n                                <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"row.checked\" [checked]=\"row.checked\"\n                                              (change)=\"toggleSelect(row)\"\n                                              (click)=\"row.checked = !row.checked;toggleSelect(row)\"></mat-checkbox>\n                            </div>\n                            <div *ngIf=\"row.actions.length > 4\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                                <button (click)=\"row.checked = !row.checked\" matTooltip=\"Actions\" mat-icon-button\n                                        color=\"accent\" [matMenuTriggerFor]=\"tableActionMenu\">\n                                    <i class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i>\n                                </button>\n                                <mat-menu #tableActionMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                                    <button *ngFor=\"let action of row.actions\" matTooltip=\"{ { action.tooltip } }\"\n                                            mat-menu-item [disabled]=\"action.disabled ? '' : null\">\n                                        <i class=\"{ { action.icon } }\" aria-hidden=\"true\"></i>\n                                        <span>{ { action.name } }</span>\n                                    </button>\n                                </mat-menu>\n                                <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"row.checked\" [checked]=\"row.checked\"\n                                              (change)=\"toggleSelect(row)\"\n                                              (click)=\"row.checked = !row.checked;toggleSelect(row)\"></mat-checkbox>\n                            </div>\n                        </div>\n                        <div *ngIf=\"!row.actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                            <mat-checkbox class=\"pad-left-sm\" [(ngModel)]=\"row.checked\" [checked]=\"row.checked\"\n                                          (change)=\"toggleSelect(row)\"\n                                          (click)=\"row.checked = !row.checked;toggleSelect(row)\"></mat-checkbox>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mat-padding\" *ngIf=\"!filteredData.length > 0\" layout=\"row\" layout-align=\"center center\">\n                <h3>No results to display.</h3>\n            </div>\n            <td-paging-bar #pagingBar [initialPage]=\"1\" [pageSize]=\"pageSize\" [total]=\"pageCount\"\n                           (change)=\"page($event)\">\n                <span hide-xs>Row per page:</span> { { pagingBar.range } } <span hide-xs>of {\n                { pagingBar.total } }</span>\n            </td-paging-bar>\n        </div>\n          ]]>\n                    </pre>\n                        <p>Javascript:</p>\n                        <pre lang=\"javascript\">\n                        <![CDATA[\n        this.dataTableService = TdDataTableService;\n\n        this.data = [\n            {\n                'id': 1,\n                'name': 'Frozen yogurt',\n                'type': 'Ice cream',\n                'calories': 159.0,\n                'fat': 6.0,\n                'carbs': 24.0,\n                'protein': 4.0,\n                'sodium': 87.0,\n                'calcium': 14.0,\n                'iron': 1.0,\n                'comments': 'I love froyo!',\n                'actions': [\n                    {\n                        'name': 'Action 1',\n                        'icon': 'fa fa-user',\n                        'tooltip': 'Manage Users'\n                    }, {\n                        'name': 'Action 2',\n                        'icon': 'fa fa-key',\n                        'tooltip': 'Manage Permissions'\n                    }\n                ]\n            },\n            {\n                'id': 2,\n                'name': 'Ice cream sandwich',\n                'type': 'Ice cream',\n                'calories': 237.0,\n                'fat': 9.0,\n                'carbs': 37.0,\n                'protein': 4.3,\n                'sodium': 129.0,\n                'calcium': 8.0,\n                'iron': 1.0,\n                'actions': [\n                    {\n                        'name': 'Action 1',\n                        'icon': 'fa fa-user',\n                        'tooltip': 'Manage Users'\n                    }, {\n                        'name': 'Action 2',\n                        'icon': 'fa fa-key',\n                        'tooltip': 'Manage Permissions'\n                    }, {\n                        'name': 'Action 3',\n                        'tooltip': 'Action 3'\n                    }, {\n                        'name': 'Action 4',\n                        'disabled': true,\n                        'tooltip': 'Action 4'\n                    }, {\n                        'name': 'Action 5',\n                        'tooltip': 'Action 5'\n                    }\n                ]\n            },\n            {\n                'id': 3,\n                'name': 'Eclair',\n                'type': 'Pastry',\n                'calories': 262.0,\n                'fat': 16.0,\n                'carbs': 24.0,\n                'protein': 6.0,\n                'sodium': 337.0,\n                'calcium': 6.0,\n                'iron': 7.0,\n                'actions': [{\n                        'name': 'Action 1',\n                        'icon': 'fa fa-user',\n                        'tooltip': 'Manage Users'\n                    }, {\n                        'name': 'Action 2',\n                        'icon': 'fa fa-key',\n                        'tooltip': 'Manage Permissions'\n                    }, {\n                        'name': 'Action 3',\n                        'tooltip': 'Action 3'\n                    }, {\n                        'name': 'Action 4',\n                        'disabled': true,\n                        'tooltip': 'Action 4'\n                    }, {\n                        'name': 'Action 5',\n                        'tooltip': 'Action 5'\n                    }\n                ],\n            },\n            {\n                'id': 4,\n                'name': 'Cupcake',\n                'type': 'Pastry',\n                'calories': 305.0,\n                'fat': 3.7,\n                'carbs': 67.0,\n                'protein': 4.3,\n                'sodium': 413.0,\n                'calcium': 3.0,\n                'iron': 8.0,\n                'actions': [{\n                        'name': 'Action 1',\n                        'icon': 'fa fa-user',\n                        'tooltip': 'Manage Users'\n                    }, {\n                        'name': 'Action 2',\n                        'icon': 'fa fa-key',\n                        'tooltip': 'Manage Permissions'\n                    }, {\n                        'name': 'Action 3',\n                        'tooltip': 'Action 3'\n                    }, {\n                        'name': 'Action 4',\n                        'disabled': true,\n                        'tooltip': 'Action 4'\n                    }, {\n                        'name': 'Action 5',\n                        'tooltip': 'Action 5'\n                    }\n                ],\n            },\n            {\n                'id': 5,\n                'name': 'Jelly bean',\n                'type': 'Candy',\n                'calories': 375.0,\n                'fat': 0.0,\n                'carbs': 94.0,\n                'protein': 0.0,\n                'sodium': 50.0,\n                'calcium': 0.0,\n                'iron': 0.0,\n            },\n            {\n                'id': 6,\n                'name': 'Lollipop',\n                'type': 'Candy',\n                'calories': 392.0,\n                'fat': 0.2,\n                'carbs': 98.0,\n                'protein': 0.0,\n                'sodium': 38.0,\n                'calcium': 0.0,\n                'iron': 2.0,\n            },\n            {\n                'id': 7,\n                'name': 'Honeycomb',\n                'type': 'Other',\n                'calories': 408.0,\n                'fat': 3.2,\n                'carbs': 87.0,\n                'protein': 6.5,\n                'sodium': 562.0,\n                'calcium': 0.0,\n                'iron': 45.0,\n            },\n            {\n                'id': 8,\n                'name': 'Donut',\n                'type': 'Pastry',\n                'calories': 452.0,\n                'fat': 25.0,\n                'carbs': 51.0,\n                'protein': 4.9,\n                'sodium': 326.0,\n                'calcium': 2.0,\n                'iron': 22.0,\n            },\n            {\n                'id': 9,\n                'name': 'KitKat',\n                'type': 'Candy',\n                'calories': 518.0,\n                'fat': 26.0,\n                'carbs': 65.0,\n                'protein': 7.0,\n                'sodium': 54.0,\n                'calcium': 12.0,\n                'iron': 6.0,\n            },\n            {\n                'id': 10,\n                'name': 'Chocolate',\n                'type': 'Candy',\n                'calories': 518.0,\n                'fat': 26.0,\n                'carbs': 65.0,\n                'protein': 7.0,\n                'sodium': 54.0,\n                'calcium': 12.0,\n                'iron': 6.0,\n            },\n            {\n                'id': 11,\n                'name': 'Chamoy',\n                'type': 'Candy',\n                'calories': 518.0,\n                'fat': 26.0,\n                'carbs': 65.0,\n                'protein': 7.0,\n                'sodium': 54.0,\n                'calcium': 12.0,\n                'iron': 6.0,\n            }\n        ];\n\n        this.filteredData = this.data;\n        this.filteredTotal = this.data.length;\n\n        this.columns = [\n            { name: 'comments', label: 'Comments' },\n            { name: 'name', label: 'Dessert (100g serving)', sortable: true },\n            { name: 'type', label: 'Type', sortable: true },\n            { name: 'calories', label: 'Calories', numeric: true, format: NUMBER_FORMAT, sortable: true },\n            { name: 'fat', label: 'Fat (g)', numeric: true, format: DECIMAL_FORMAT, sortable: true },\n            { name: 'carbs', label: 'Carbs (g)', numeric: true, format: NUMBER_FORMAT, sortable: true },\n            {\n            name: 'protein', label: 'Protein (g)', numeric: true, format: DECIMAL_FORMAT, sortable: true },\n            { name: 'sodium', label: 'Sodium (mg)', numeric: true, format: NUMBER_FORMAT, sortable: true },\n            {name: 'calcium', label: 'Calcium (%)', numeric: true, format: NUMBER_FORMAT, sortable: true },\n            { name: 'iron', label: 'Iron (%)', numeric: true, format: NUMBER_FORMAT },\n        ];\n\n        this.allRowsSelected = false;\n        this.autoCompleteData = [];\n        this.selectedRows = [];\n\n        this.searchTerm = [];\n        this.fromRow = 1;\n        this.currentPage = 1;\n        this.pageSize = 5;\n\n        ...\n\n        sort: function(sortEvent, column) {\n            if (column.sortable) {\n                var sortBy = column.name;\n                var sortOrder = column.sortOrder = (column.sortOrder === 'ASC') ? 'DESC' : 'ASC';\n                this.filter(sortBy, sortOrder);\n\n                //only one column can be actively sorted so we reset all to inactive\n                this.columns.forEach(c => c.active = false);\n\n                //and set this column as the actively sorted column\n                column.active = true;\n            }\n        },\n\n        searchRemove: function(searchTerm) {\n            //only remove the first occurrence of the search term\n            var index = this.searchTerm.indexOf(searchTerm);\n            if (index !== -1) {\n                this.searchTerm.splice(index, 1);\n            }\n            this.filter();\n        },\n\n        searchAdd: function(searchTerm) {\n            this.searchTerm.push(searchTerm);\n            this.filter();\n        },\n\n        page: function(pagingEvent) {\n            this.fromRow = pagingEvent.fromRow;\n            this.currentPage = pagingEvent.page;\n            this.pageSize = pagingEvent.pageSize;\n            this.filter();\n        },\n\n        filterData: function(data, searchTerm, ignoreCase) {\n            var field = '';\n            if (searchTerm.indexOf(\":\") > -1) {\n                field = searchTerm.split(':')[0].trim();\n                searchTerm = searchTerm.split(':')[1].trim();\n            }\n            var filter = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\n\n            if (filter) {\n                data = data.filter(item => {\n                    var res = Object.keys(item).find((key) => {\n                        if (field.indexOf(\".\") > -1) {\n                            var objArray = field.split(\".\");\n                            var obj = item;\n                            var arrayLength = objArray.length;\n                            for (var i = 0; i < arrayLength; i++) {\n                                try {\n                                    obj = obj[objArray[i]];\n                                } catch (e) {\n                                    return false;\n                                }\n                            }\n                            var preItemValue = ('' + obj);\n                            var itemValue = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n                            return itemValue.indexOf(filter) > -1;\n                        } else {\n                            if (key !== field && field !== '') {\n                                return false;\n                            }\n                            var preItemValue = ('' + item[key]);\n                            var itemValue = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\n                            return itemValue.indexOf(filter) > -1;\n                        }\n                    });\n                    return !(typeof res === 'undefined');\n                });\n            }\n            return data;\n        },\n\n        filter: function(sortBy, sortOrder) {\n            if (this.allRowsSelected) {\n                this.toggleSelectAll();\n            }\n            this.deselectAll();\n            var newData = this.data;\n\n            if (this.searchTerm.length > 0) {\n                for (var i = 0; i < this.searchTerm.length; i++) {\n                    //account for column/field name specific search syntax\n                    if (this.searchTerm[i].indexOf(\":\") > -1) {\n                        newData = this.filterData(newData, this.searchTerm[i].split(':')[1].trim(), true, this.searchTerm[i].split(':')[0].trim());\n                    } else { //otherwise search all cells\n                        newData = this.filterData(newData, this.searchTerm[i], true);\n                    }\n                }\n            } else {\n                newData = this.dataTableService.filterData(newData, '', true);\n            }\n            this.filteredTotal = newData.length;\n            newData = this.dataTableService.sortData(newData, sortBy, sortOrder);\n            newData = this.dataTableService.pageData(newData, this.fromRow, this.currentPage * this.pageSize);\n            this.filteredData = newData;\n            this.getAutoCompleteData();\n        },\n\n        toggleSelect: function(row) {\n            if (!row.checked) {\n                this.allRowsSelected = false;\n            } else {\n                if (this.allFilteredRowsSelected()) {\n                    this.allRowsSelected = true;\n                } else {\n                    this.allRowsSelected = false;\n                }\n            }\n        },\n\n        toggleSelectAll: function() {\n            this.allRowsSelected = !this.allRowsSelected;\n            if (this.allRowsSelected) {\n                this.selectAll();\n            } else {\n                this.deselectAll();\n            }\n        },\n\n        selectAll: function() {\n            this.filteredData.forEach(c => c.checked = true);\n        },\n\n        deselectAll: function() {\n            this.filteredData.forEach(c => c.checked = false);\n        },\n\n        allFilteredRowsSelected: function() {\n            var allFilteredRowsSelected = true;\n            this.filteredData.forEach(function(c) {\n                if (c.checked === undefined || c.checked === false) {\n                    allFilteredRowsSelected = false;\n                }\n            });\n\n            return allFilteredRowsSelected;\n        },\n\n        areTooltipsOn: function() {\n            return this.columns[0].hasOwnProperty('tooltip');\n        },\n\n        toggleTooltips: function() {\n            if (this.columns[0].tooltip) {\n                this.columns.forEach(c => delete c.tooltip);\n            } else {\n                this.columns.forEach(c => c.tooltip = `This is ${c.label}!`);\n            }\n        },\n\n        openDataTablePrompt: function(row, name) {\n            this.dialogService.openPrompt({\n                message: 'Enter comment?',\n                value: row[name],\n            }).afterClosed().subscribe(value => {\n                if (value !== undefined) {\n                    row[name] = value;\n                }\n            })\n        },\n\n        getAutoCompleteData: function() {\n            this.autoCompleteData = [];\n            this.columns.forEach(c => this.filteredData.forEach(r => (r[c.name.toLowerCase()]) ? this.autoCompleteData.push(r[c.name.toLowerCase()].toString()):''));\n        },\n\n                                ...\n                                ]]>\n                                </pre>\n                            </mat-tab>\n                            </mat-tab-group>\n                            </mat-card-content>\n                            <mat-divider></mat-divider>\n                            <mat-card-actions>\n                            <button matTooltip=\"Column field name tooltips toggle.\" mat-button color=\"primary\" (click)=\"toggleTooltips()\" class=\"text-upper\">\n                                Tooltips ({{areTooltipsOn() ? 'ON' : 'OFF'}})\n                                </button>\n                            </mat-card-actions>\n                            </mat-card>\n                            <mat-card>\n                            <mat-card-title class=\"pad-bottom-sm\" id=\"Checkboxes\">Checkbox <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Checkboxes\">link</mat-icon></mat-card-title>\n                                <mat-divider></mat-divider>\n                                <mat-card-content>\n                                <h3 class=\"md-title\">Basic Usage</h3>\n                            <mat-divider></mat-divider>\n                            <mat-list>\n                            <mat-list-item *ngFor=\"let grocery of groceries\">\n                            <mat-checkbox [checked]=\"grocery.bought\">\n                                {{grocery.name}}\n                                </mat-checkbox>\n                            </mat-list-item>\n                            </mat-list>\n                            <h3 class=\"md-title\">Usage</h3>\n                                <p>HTML:</p>\n                            <pre lang=\"html\">\n                                <![CDATA[\n        <!-- Basic Usage -->\n        <mat-checkbox [checked]=\"grocery.bought\">\n            { {grocery.name} }\n        </mat-checkbox>\n                                ]]>\n                                </pre>\n                            <p>Javascript:</p>\n                            <pre lang=\"javascript\">\n        <![CDATA[\n        this.groceries = [\n            {\n                bought: true,\n                name: 'Seitan',\n            },\n            {\n                bought: false,\n                name: 'Almond Meal Flour',\n            },\n            {\n                bought: false,\n                name: 'Organic Eggs',\n            }\n        ];\n        ]]>\n                    </pre>\n                        <h3 class=\"md-title\">Usage within Forms</h3>\n                        <mat-divider></mat-divider>\n                        <form>\n                            <div layout=\"row\" layout-align=\"start center\">\n                                <mat-checkbox flex=\"initial\" [(ngModel)]=\"user.agreesToTOS\" name=\"agreesToTOS\">\n                                    I agree to the terms\n                                </mat-checkbox>\n                                <button mat-raised-button color=\"fds-secondary\" [disabled]=\"!user.agreesToTOS\"\n                                        class=\"pad-right-sm\" class=\"text-upper\">Sign Up\n                                </button>\n                            </div>\n                            <mat-divider></mat-divider>\n                            <div layout=\"row\" layout-align=\"start center\" class=\"pad-top-sm pad-bottom-sm\">\n                                <mat-checkbox labelPosition=\"after\">\n                                    I come after my label.\n                                </mat-checkbox>\n                            </div>\n                            <mat-divider></mat-divider>\n                            <div layout=\"row\" layout-align=\"start center\" class=\"pad-top-sm pad-bottom-sm\">\n                                <mat-checkbox labelPosition=\"before\">\n                                    I come before my label\n                                </mat-checkbox>\n                            </div>\n                            <mat-divider></mat-divider>\n                        </form>\n                        <h3 class=\"md-title\">Usage</h3>\n                        <p>HTML:</p>\n                        <pre lang=\"html\">\n        <![CDATA[\n        <!-- Usage within Forms -->\n        <form>\n            <div layout=\"row\" layout-align=\"start center\">\n                <mat-checkbox flex=\"initial\" [(ngModel)]=\"user.agreesToTOS\" name=\"agreesToTOS\">\n                    I agree to the terms\n                </mat-checkbox>\n                <button mat-raised-button color=\"fds-secondary\" [disabled]=\"!user.agreesToTOS\" class=\"pad-right-sm\"\n                        class=\"text-upper\">Sign Up</button>\n            </div>\n            <mat-divider></mat-divider>\n            <div layout=\"row\" layout-align=\"start center\" class=\"pad-top-sm pad-bottom-sm\">\n                <mat-checkbox labelPosition=\"after\">\n                    I come after my label.\n                </mat-checkbox>\n            </div>\n            <mat-divider></mat-divider>\n            <div layout=\"row\" layout-align=\"start center\" class=\"pad-top-sm pad-bottom-sm\">\n                <mat-checkbox labelPosition=\"before\">\n                    I come before my label\n                </mat-checkbox>\n            </div>\n            <mat-divider></mat-divider>\n        </form>\n        ]]>\n        </pre>\n                        <p>Javascript:</p>\n                        <pre lang=\"javascript\">\n                        <![CDATA[\n        this.user = {\n            agreesToTOS: false\n        };\n                        ]]>\n                    </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Radios\">Radios <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Radios\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content layout=\"row\">\n                <div flex=\"48\" class=\"pad-right\">\n                    <!-- Basic Radios -->\n                    <h3 class=\"md-title\">Basic Radios</h3>\n                    <mat-radio-group name=\"group1\">\n                        <mat-radio-button class=\"pad-right-sm\" name=\"group1\">Option 1</mat-radio-button>\n                        <mat-radio-button class=\"pad-right-sm\" name=\"group1\">Option 2</mat-radio-button>\n                        <mat-radio-button class=\"pad-right-sm\" name=\"group1\" disabled=\"true\">Option 3 (disabled)\n                        </mat-radio-button>\n                    </mat-radio-group>\n                    <h3 class=\"md-title\">Usage</h3>\n                    <p>HTML:</p>\n                    <pre lang=\"html\">\n                <![CDATA[\n        <!-- Basic Radios -->\n        <mat-radio-group name=\"group1\">\n            <mat-radio-button class=\"pad-right-sm\" name=\"group1\">Option 1 </mat-radio-button>\n            <mat-radio-button class=\"pad-right-sm\" name=\"group1\">Option 2 </mat-radio-button>\n            <mat-radio-button class=\"pad-right-sm\" name=\"group1\" disabled=\"true\">Option 3 (disabled) </mat-radio-button>\n        </mat-radio-group>\n                ]]>\n        </pre>\n                </div>\n                <div flex=\"48\">\n                    <!-- Dynamic Radios -->\n                    <h3 class=\"md-title\">Dynamic Radios</h3>\n                    <mat-radio-group name=\"more_options\" [(ngModel)]=\"favoriteSeason\">\n                        <mat-radio-button class=\"fds-radio pad-right-sm\" *ngFor=\"let season of seasonOptions\"\n                                          name=\"more_options\" [value]=\"season\">\n                            {{season}}\n                        </mat-radio-button>\n                    </mat-radio-group>\n                    <p>Your favorite season is: <strong>{{favoriteSeason}}</strong></p>\n                    <h3 class=\"md-title\">Usage</h3>\n                    <p>HTML:</p>\n                    <pre lang=\"html\">\n      <![CDATA[\n        <!-- Dynamic Radios -->\n        <mat-radio-group name=\"more_options\" [(ngModel)]=\"favoriteSeason\">\n          <mat-radio-button class=\"fds-radio\" *ngFor=\"let season of seasonOptions\" name=\"more_options\" [value]=\"season\">\n            { {season} }\n          </mat-radio-button>\n        </mat-radio-group>\n        <p>Your favorite season is: <strong>{ { favoriteSeason } }</strong></p>\n      ]]>\n      </pre>\n                    <p>Javascript:</p>\n                    <pre lang=\"javascript\">\n      <![CDATA[\n\n        this.favoriteSeason = 'Autumn';\n\n        this.seasonOptions = [\n            'Winter',\n            'Spring',\n            'Summer',\n            'Autumn',\n        ];\n      ]]>\n      </pre>\n                </div>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Tooltips\">Tooltips <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Tooltips\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show above\" matTooltipPosition=\"above\"\n                        class=\"text-upper\">Above Tooltip\n                </button>\n                <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show after\" matTooltipPosition=\"after\"\n                        class=\"text-upper\">After Tooltip\n                </button>\n                <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show below\" matTooltipPosition=\"below\"\n                        class=\"text-upper\">Below Tooltip\n                </button>\n                <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show before\" matTooltipPosition=\"before\"\n                        class=\"text-upper\">Before Tooltip\n                </button>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show above\" matTooltipPosition=\"above\"\n                class=\"text-upper\">Bottom Tooltip</button>\n        <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show after\" matTooltipPosition=\"after\"\n                class=\"text-upper\">Bottom Tooltip</button>\n        <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show below\" matTooltipPosition=\"below\"\n                class=\"text-upper\">Bottom Tooltip</button>\n        <button mat-raised-button color=\"fds-primary\" matTooltip=\"I show before\" matTooltipPosition=\"before\"\n                class=\"text-upper\">Bottom Tooltip</button>\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Panels\">Panels <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Panels\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <h3 class=\"md-title\">Standard Card</h3>\n                <mat-card>\n                    <button class=\"fds-panel-menu-button\" matTooltip=\"Standard Card Menu\" mat-icon-button\n                            [matMenuTriggerFor]=\"standardCardMenu\">\n                        <i class=\"fa fa-ellipsis-v \" aria-hidden=\"true\"></i>\n                    </button>\n                    <mat-menu class=\"primary-icon-button-menu\" #standardCardMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                        <button mat-menu-item>\n                            <span>Option1</span>\n                        </button>\n                        <button mat-menu-item>\n                            <span>Option2</span>\n                        </button>\n                    </mat-menu>\n                    <mat-card-title class=\"pad-bottom-sm\">\n                        <span>Title</span>\n                    </mat-card-title>\n                    <mat-card-content>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do tempor incididunt ut labore\n                            et dolore magna aliqua. Ut enim ad</p>\n                    </mat-card-content>\n                    <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                        <button mat-raised-button color=\"fds-primary\" class=\"text-upper\">Action</button>\n                    </mat-card-actions>\n                </mat-card>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n                <![CDATA[\n        <!-- Basic Card -->\n        <mat-card>\n            <button class=\"fds-panel-menu-button\" matTooltip=\"Standard Card Menu\" mat-icon-button\n                    [matMenuTriggerFor]=\"standardCardMenu\">\n                <i class=\"fa fa-ellipsis-v \" aria-hidden=\"true\"></i>\n            </button>\n            <mat-menu class=\"primary-icon-button-menu\" #standardCardMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                <button mat-menu-item>\n                    <span>Option1</span>\n                </button>\n                <button mat-menu-item>\n                    <span>Option2</span>\n                </button>\n            </mat-menu>\n            <mat-card-title class=\"pad-bottom-sm\">\n                <span>Title</span>\n            </mat-card-title>\n            <mat-card-content>\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do tempor incididunt ut labore et dolore magna aliqua. Ut enim ad</p>\n            </mat-card-content>\n            <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                <button mat-raised-button color=\"fds-primary\" class=\"text-upper\">Action</button>\n            </mat-card-actions>\n        </mat-card>\n                ]]>\n            </pre>\n                <h3 class=\"md-title\">Tabbed Card</h3>\n                <mat-card>\n                    <button class=\"fds-panel-menu-button\" matTooltip=\"Standard Card Menu\" mat-icon-button\n                            [matMenuTriggerFor]=\"standardCardMenu\">\n                        <i class=\"fa fa-ellipsis-v \" aria-hidden=\"true\"></i>\n                    </button>\n                    <mat-menu class=\"primary-icon-button-menu\" #standardCardMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                        <button mat-menu-item>\n                            <span>Option1</span>\n                        </button>\n                        <button mat-menu-item>\n                            <span>Option2</span>\n                        </button>\n                    </mat-menu>\n                    <mat-card-content>\n                        <mat-tab-group dynamicHeight color=\"accent\">\n                            <mat-tab>\n                                <ng-template mat-tab-label>One</ng-template>\n                                <h3 class=\"md-title\">First tab content</h3>\n                                <p>Plaid echo park knausgaard normcore franzen cronut. Pickled humblebrag tofu hoodie,\n                                    umami salvia farm-to-table schlitz try-hard food truck knausgaard pabst. Yuccie\n                                    portland jean shorts, authentic mixtape waistcoat gentrify blue bottle. Fixie\n                                    kickstarter church-key small batch seitan, shabby chic vegan listicle before they\n                                    sold out. Hammock raw denim flannel tousled seitan you probably haven't heard of\n                                    them. Trust fund man bun pug, kickstarter artisan selvage letterpress cornhole tote\n                                    bag butcher locavore. Affogato try-hard kickstarter seitan, DIY pickled hella godard\n                                    pork belly four loko ugh.</p>\n                            </mat-tab>\n                            <mat-tab>\n                                <ng-template mat-tab-label>Two</ng-template>\n                                <h3 class=\"md-title\">Second tab content</h3>\n                                <p>Hashtag distillery skateboard man bun gochujang, salvia man braid art party meggings\n                                    heirloom kitsch farm-to-table. Franzen beard fingerstache gentrify, heirloom\n                                    portland ennui XOXO microdosing kitsch plaid. Chicharrones bushwick chia, banh mi\n                                    irony tattooed hammock butcher shabby chic taxidermy semiotics marfa post-ironic.\n                                    Blue bottle keffiyeh farm-to-table ennui, chambray pitchfork art party pinterest\n                                    artisan pop-up. Etsy banjo marfa, blue bottle kombucha crucifix XOXO tousled beard.\n                                    Tilde disrupt kale chips bicycle rights skateboard master cleanse hella shoreditch,\n                                    meditation retro shabby chic vice heirloom. Etsy listicle vice actually, iPhone chia\n                                    hoodie four loko.</p>\n                            </mat-tab>\n                        </mat-tab-group>\n                    </mat-card-content>\n                    <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                        <button mat-raised-button color=\"fds-primary\" class=\"text-upper\">Action</button>\n                    </mat-card-actions>\n                </mat-card>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n                <![CDATA[\n        <!-- Basic Card -->\n        <mat-card>\n            <button class=\"fds-panel-menu-button\" matTooltip=\"Standard Card Menu\" mat-icon-button\n                    [matMenuTriggerFor]=\"standardCardMenu\">\n                <i class=\"fa fa-ellipsis-v \" aria-hidden=\"true\"></i>\n            </button>\n            <mat-menu class=\"primary-icon-button-menu\" #standardCardMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                <button mat-menu-item>\n                    <span>Option1</span>\n                </button>\n                <button mat-menu-item>\n                    <span>Option2</span>\n                </button>\n            </mat-menu>\n            <mat-card-content>\n                <mat-tab-group dynamicHeight color=\"accent\">\n                    <mat-tab>\n                        <ng-template mat-tab-label>One</ng-template>\n                        <h3 class=\"md-title\">First tab content</h3>\n                        <p>Plaid echo park knausgaard normcore franzen cronut. Pickled humblebrag tofu hoodie, umami salvia farm-to-table schlitz try-hard food truck knausgaard pabst. Yuccie portland jean shorts, authentic mixtape waistcoat gentrify blue bottle. Fixie kickstarter church-key small batch seitan, shabby chic vegan listicle before they sold out. Hammock raw denim flannel tousled seitan you probably haven't heard of them. Trust fund man bun pug, kickstarter artisan selvage letterpress cornhole tote bag butcher locavore. Affogato try-hard kickstarter seitan, DIY pickled hella godard pork belly four loko ugh.</p>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>Two</ng-template>\n                        <h3 class=\"md-title\">Second tab content</h3>\n                        <p>Hashtag distillery skateboard man bun gochujang, salvia man braid art party meggings heirloom kitsch farm-to-table. Franzen beard fingerstache gentrify, heirloom portland ennui XOXO microdosing kitsch plaid. Chicharrones bushwick chia, banh mi irony tattooed hammock butcher shabby chic taxidermy semiotics marfa post-ironic. Blue bottle keffiyeh farm-to-table ennui, chambray pitchfork art party pinterest artisan pop-up. Etsy banjo marfa, blue bottle kombucha crucifix XOXO tousled beard. Tilde disrupt kale chips bicycle rights skateboard master cleanse hella shoreditch, meditation retro shabby chic vice heirloom. Etsy listicle vice actually, iPhone chia hoodie four loko.</p>\n                    </mat-tab>\n                </mat-tab-group>\n            </mat-card-content>\n            <mat-card-actions fxLayout=\"row\" fxLayoutAlign=\"end center\">\n                <button mat-raised-button color=\"fds-primary\" class=\"text-upper\">Action</button>\n            </mat-card-actions>\n        </mat-card>\n                ]]>\n            </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Select\">Select <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Select\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <form>\n                    <div layout=\"row\" layout-margin>\n                        <mat-select color=\"accent\" floatPlaceholder=\"never\" placeholder=\"Favorite food\"\n                                    [(ngModel)]=\"selectedValue\" name=\"food\">\n                            <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                                {{food.viewValue}}\n                            </mat-option>\n                        </mat-select>\n                    </div>\n                    <div layout=\"row\" layout-margin>\n                        <div flex> Selected food value: {{selectedValue}} </div>\n                    </div>\n                </form>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <form>\n            <div layout=\"row\" layout-margin>\n                <mat-select color=\"accent\" floatPlaceholder=\"never\" placeholder=\"Favorite food\"\n                            [(ngModel)]=\"selectedValue\" name=\"food\">\n                    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n                        { {food.viewValue} }\n                    </mat-option>\n                </mat-select>\n            </div>\n            <div layout=\"row\" layout-margin>\n                <div flex> Selected food value: { {selectedValue} } </div>\n            </div>\n        </form>\n        ]]>\n      </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n      <![CDATA[\n        this.selectedValue = '';\n\n        this.foods = [\n            { value: 'steak-0', viewValue: 'Steak' },\n            { value: 'pizza-1', viewValue: 'Pizza' },\n            { value: 'tacos-2', viewValue: 'Tacos' },\n        ];\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Menus\">Menus (dropdowns) <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Menus\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item> Refresh </button>\n                    <button mat-menu-item> Settings </button>\n                    <button mat-menu-item> Help </button>\n                    <button mat-menu-item disabled> Sign Out </button>\n                </mat-menu>\n                <button color=\"fds-regular\" mat-raised-button [matMenuTriggerFor]=\"aboveMenu\">\n                    Above<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </button>\n                <mat-menu yPosition=\"above\" #aboveMenu=\"matMenu\">\n                    <button mat-menu-item> Refresh </button>\n                    <button mat-menu-item> Settings </button>\n                    <button mat-menu-item> Help </button>\n                    <button mat-menu-item disabled> Sign Out </button>\n                </mat-menu>\n                <button color=\"fds-regular\" mat-raised-button [matMenuTriggerFor]=\"iconsMenu\">\n                    Icons in Menu<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </button>\n                <mat-menu #iconsMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                    <button mat-menu-item>\n                        <mat-icon>dialpad</mat-icon>\n                        <span>Redial</span>\n                    </button>\n                    <button mat-menu-item disabled>\n                        <mat-icon>voicemail</mat-icon>\n                        <span>Check voicemail</span>\n                    </button>\n                    <button mat-menu-item>\n                        <mat-icon>notifications_off</mat-icon>\n                        <span>Disable alerts</span>\n                    </button>\n                </mat-menu>\n                <button color=\"fds-primary\" [matMenuTriggerFor]=\"primaryButtonDropdownMenu\" mat-raised-button>\n                    FDS Primary<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </button>\n                <mat-menu class=\"fds-primary-dropdown-button-menu\" #primaryButtonDropdownMenu=\"matMenu\" [overlapTrigger]=\"false\">\n                    <button mat-menu-item>\n                        <span>Option 1</span>\n                    </button>\n                    <button mat-menu-item disabled>\n                        <span>Option 2</span>\n                    </button>\n                </mat-menu>\n                <button color=\"fds-regular\" mat-raised-button [matMenuTriggerFor]=\"posXMenu\">\n                    Before<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                </button>\n                <mat-menu xPosition=\"before\" #posXMenu=\"matMenu\">\n                    <button mat-menu-item> Refresh </button>\n                    <button mat-menu-item> Settings </button>\n                    <button mat-menu-item> Help </button>\n                    <button mat-menu-item disabled> Sign Out </button>\n                </mat-menu>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item> Refresh </button>\n            <button mat-menu-item> Settings </button>\n            <button mat-menu-item> Help </button>\n            <button mat-menu-item disabled> Sign Out </button>\n        </mat-menu>\n        <button color=\"fds-regular\" mat-raised-button [matMenuTriggerFor]=\"aboveMenu\">\n            Above<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n        </button>\n        <mat-menu yPosition=\"above\" #aboveMenu=\"matMenu\">\n            <button mat-menu-item> Refresh </button>\n            <button mat-menu-item> Settings </button>\n            <button mat-menu-item> Help </button>\n            <button mat-menu-item disabled> Sign Out </button>\n        </mat-menu>\n        <button color=\"fds-regular\" mat-raised-button [matMenuTriggerFor]=\"iconsMenu\">\n            Icons in Menu<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n        </button>\n        <mat-menu #iconsMenu=\"matMenu\" [overlapTrigger]=\"false\">\n            <button mat-menu-item>\n                <mat-icon>dialpad</mat-icon>\n                <span>Redial</span>\n            </button>\n            <button mat-menu-item disabled>\n                <mat-icon>voicemail</mat-icon>\n                <span>Check voicemail</span>\n            </button>\n            <button mat-menu-item>\n                <mat-icon>notifications_off</mat-icon>\n                <span>Disable alerts</span>\n            </button>\n        </mat-menu>\n        <button color=\"fds-primary\" [matMenuTriggerFor]=\"primaryButtonDropdownMenu\" mat-raised-button>\n            FDS Primary<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n        </button>\n        <mat-menu class=\"fds-primary-dropdown-button-menu\" #primaryButtonDropdownMenu=\"matMenu\" [overlapTrigger]=\"false\">\n            <button mat-menu-item>\n                <span>Option 1</span>\n            </button>\n            <button mat-menu-item disabled>\n                <span>Option 2</span>\n            </button>\n        </mat-menu>\n        <button color=\"fds-regular\" mat-raised-button [matMenuTriggerFor]=\"posXMenu\">\n            Before<i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n        </button>\n        <mat-menu xPosition=\"before\" #posXMenu=\"matMenu\">\n            <button mat-menu-item> Refresh </button>\n            <button mat-menu-item> Settings </button>\n            <button mat-menu-item> Help </button>\n            <button mat-menu-item disabled> Sign Out </button>\n        </mat-menu>\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Dialog\">Dialog <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Dialog\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <button mat-raised-button color=\"fds-primary\" (click)=\"openDialog()\">Show simple dialog</button>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <button mat-raised-button color=\"fds-primary\" (click)=\"openDialog()\">Show simple dialog</button>\n      ]]>\n    </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n      <![CDATA[\n        var ngCore = require('@angular/core');\n        function DialogComponent() {};\n\n        DialogComponent.prototype = {\n            constructor: DialogComponent\n        };\n\n        DialogComponent.annotations = [\n            new ngCore.Component({\n                template: 'Hello Dialog'\n        })];\n\n        ...\n\n        constructor(MatDialog) {\n            this.dialog = MatDialog;\n        }\n\n        ...\n\n        openDialog: function() {\n            this.dialog.open(DialogComponent, {\n                    height: '50%', // can be px or %\n                    width: '60%', // can be px or %\n                }\n            );\n        }\n\n        ...\n\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"SimpleDialogs\">Simple Dialogs <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"SimpleDialogs\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <div class=\"pad-left-sm\">\n                    <button mat-raised-button color=\"fds-primary\" (click)=\"openConfirm()\" class=\"text-upper\">Open\n                        Confirm\n                    </button>\n                </div>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <button mat-button color=\"primary\" (click)=\"openConfirm()\" class=\"text-upper\">Open Confirm</button>\n        ]]>\n      </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n      <![CDATA[\n        ...\n\n        constructor(TdDialogService) {\n            this.dialogService = TdDialogService\n        }\n\n        ...\n\n        openConfirm: function() {\n                this.dialogService.openConfirm({\n                title: 'Confirm',\n                message: 'This is how simple it is to create a confirm with this wrapper service. Do you agree?',\n                cancelButton: 'Disagree',\n                acceptButton: 'Agree',\n            });\n        },\n\n        ...\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"SnackBars\">Snack Bars <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"SnackBars\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <button mat-raised-button color=\"fds-primary\" (click)=\"showSuccessSnackBar()\">Success Snack Bar</button>\n                <button mat-raised-button color=\"fds-primary\" (click)=\"showWarnSnackBar()\">Warning Snack Bar</button>\n                <button mat-raised-button color=\"fds-primary\" (click)=\"showErrorSnackBar()\">Error Snack Bar</button>\n                <button mat-raised-button color=\"fds-primary\" (click)=\"showRegularSnackBar()\">Regular Snack Bar</button>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <button mat-raised-button color=\"fds-primary\" (click)=\"showSuccessSnackBar()\">Success Snack Bar</button>\n        <button mat-raised-button color=\"fds-primary\" (click)=\"showWarnSnackBar()\">Warning Snack Bar</button>\n        <button mat-raised-button color=\"fds-primary\" (click)=\"showErrorSnackBar()\">Error Snack Bar</button>\n        <button mat-raised-button color=\"fds-primary\" (click)=\"showRegularSnackBar()\">Regular Snack Bar</button>\n      ]]>\n    </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n      <![CDATA[\n        ...\n\n        constructor(FdsSnackBarService) {\n            this.snackBarService = FdsSnackBarService;\n        },\n\n        ...\n\n        /** Possible values for horizontalPosition on MatSnackBarConfig are 'start' | 'center' | 'end' | 'left' | 'right'. */\n        /** Possible values for verticalPosition on MatSnackBarConfig are 'top' | 'bottom'. */\n        /** Possible values for icon on MatSnackBarConfig are any available icons loaded on the page. */\n\n        showSuccessSnackBar: function () {\n                var snackBarRef = this.snackBarService.openCoaster({\n                title: 'Success',\n                message: 'Some help text regarding the successful event.',\n                verticalPosition: 'top',\n                horizontalPosition: 'right',\n                icon: 'fa fa-check-circle-o',\n                color: '#1EB475',\n                duration: 3000\n            });\n        },\n\n        showWarnSnackBar: function () {\n                var snackBarRef = this.snackBarService.openCoaster({\n                title: 'Warning',\n                message: 'Some help text regarding the warning.',\n                verticalPosition: 'top',\n                horizontalPosition: 'left',\n                icon: 'fa fa-exclamation-triangle',\n                color: '#E98A40',\n                duration: 3000\n            });\n        },\n\n        showErrorSnackBar: function () {\n                var snackBarRef = this.snackBarService.openCoaster({\n                title: 'Error',\n                message: 'Some help text regarding the critical error. This coaster will stay open until closed with the `x` or if another coaster is created.',\n                verticalPosition: 'bottom',\n                horizontalPosition: 'right',\n                icon: 'fa fa-times-circle-o',\n                color: '#EF6162'\n            });\n        },\n\n        showRegularSnackBar: function () {\n                var snackBarRef = this.snackBarService.openCoaster({\n                title: 'Regular',\n                message: 'Something interesting.',\n                verticalPosition: 'bottom',\n                horizontalPosition: 'left',\n                color: '#808793',\n                duration: 3000\n            });\n        },\n\n        ...\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"ExpansionPanels\">Expansion Panels <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"ExpansionPanels\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <p>Expand/Collapse Event for Expansion 1: {{expandCollapseExpansion1Msg}}</p>\n                <div>\n                    <button mat-button color=\"primary\" (click)=\"toggleDisabled()\" class=\"text-upper\">Toggle disable\n                    </button>\n                    <button mat-button color=\"primary\" (click)=\"toggleExpansion1()\" class=\"text-upper\">Toggle first\n                    </button>\n                </div>\n                <div layout-gt-xs=\"row\" layout-align-gt-xs=\"center start\">\n                    <div flex-gt-xs=\"90\">\n                        <td-expansion-panel label=\"Google\"\n                                            sublabel=\"1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA\"\n                                            [expand]=\"expansion1\" [disabled]=\"disabled\"\n                                            (expanded)=\"expandExpansion1Event()\"\n                                            (collapsed)=\"collapseExpansion1Event()\">\n                            <td-expansion-summary>\n                                <mat-list>\n                                    <mat-list-item>\n                                        <mat-icon mat-list-avatar>pin_drop</mat-icon>\n                                        <h3 mat-line>Google</h3>\n                                        <h4 mat-line>Headquarters</h4>\n                                        <p mat-line>\n                                            1600 Amphitheatre Pkwy\n                                            <br/>Mountain View, CA 94043, USA\n                                        </p>\n                                    </mat-list-item>\n                                </mat-list>\n                            </td-expansion-summary>\n                            <div class=\"mat-padding\">\n                                <form class=\"mat-padding\" layout=\"column\">\n                                    <mat-form-field floatLabel=\"always\" flex>\n                                        <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\"/>\n                                    </mat-form-field>\n                                    <mat-form-field floatLabel=\"always\" flex>\n                                        <textarea matInput placeholder=\"Description\" rows=\"4\"></textarea>\n                                    </mat-form-field>\n                                </form>\n                                <div layout=\"row\" layout-margin layout-align=\"end center\">\n                                    <button mat-button class=\"text-upper\">Cancel</button>\n                                    <button mat-button color=\"accent\" class=\"text-upper\">Save</button>\n                                </div>\n                            </div>\n                        </td-expansion-panel>\n                    </div>\n                </div>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <td-expansion-panel label=\"Google\" sublabel=\"1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA\"\n                            [expand]=\"expansion1\" [disabled]=\"disabled\" (expanded)=\"expandExpansion1Event()\"\n                            (collapsed)=\"collapseExpansion1Event()\">\n            <td-expansion-summary>\n                <mat-list>\n                    <mat-list-item>\n                        <mat-icon mat-list-avatar>pin_drop</mat-icon>\n                        <h3 mat-line>Google</h3>\n                        <h4 mat-line>Headquarters</h4>\n                        <p mat-line>\n                            1600 Amphitheatre Pkwy\n                            <br/>Mountain View, CA 94043, USA\n                        </p>\n                    </mat-list-item>\n                </mat-list>\n            </td-expansion-summary>\n            <div class=\"mat-padding\">\n                <form class=\"mat-padding\" layout=\"column\">\n                    <mat-form-field floatLabel=\"always\" flex>\n                        <input matInput placeholder=\"Company (disabled)\" disabled value=\"Google\"/>\n                    </mat-form-field>\n                    <mat-form-field floatLabel=\"always\" flex>\n                        <textarea matInput placeholder=\"Description\" rows=\"4\"></textarea>\n                    </mat-form-field>\n                </form>\n                <mat-divider></mat-divider>\n                <div layout=\"row\" layout-margin layout-align=\"end center\">\n                    <button mat-button class=\"text-upper\">Cancel</button>\n                    <button mat-button color=\"accent\" class=\"text-upper\">Save</button>\n                </div>\n            </div>\n        </td-expansion-panel>\n        ]]>\n      </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n          <![CDATA[\n        this.expandCollapseExpansion1Msg = 'No expanded/collapsed detected yet';\n        this.expansion1 = false;\n        this.disabled = false;\n\n        ...\n\n        toggleExpansion1: function() {\n                    if (!this.disabled) {\n                this.expansion1 = !this.expansion1;\n            }\n        },\n\n        toggleDisabled: function() {\n                    this.disabled = !this.disabled;\n        },\n\n        expandExpansion1Event: function() {\n                    this.expandCollapseExpansion1Msg = 'Expand event emitted.';\n        },\n\n        collapseExpansion1Event: function() {\n                    this.expandCollapseExpansion1Msg = 'Collapse event emitted.';\n        },\n\n        ...\n            ]]>\n          </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Progress\">Progress <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Progress\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content layout=\"row\">\n                <div flex=\"48\" class=\"pad-right\">\n                    <h3 class=\"md-title\">Progress Bars</h3>\n                    <h4>Determinate</h4>\n                    <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\n                    <h4>Indeterminate</h4>\n                    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n                    <h4>Buffer</h4>\n                    <mat-progress-bar mode=\"buffer\" value=\"15\" bufferValue=\"15\"></mat-progress-bar>\n                    <h4>Query</h4>\n                    <mat-progress-bar mode=\"query\"></mat-progress-bar>\n                    <h4>Colors</h4>\n                    <mat-progress-bar mode=\"indeterminate\" color=\"primary\"></mat-progress-bar>\n                    <mat-progress-bar mode=\"indeterminate\" color=\"accent\"></mat-progress-bar>\n                    <mat-progress-bar mode=\"indeterminate\" color=\"warn\"></mat-progress-bar>\n                    <h3 class=\"md-title\">Usage</h3>\n                    <p>HTML:</p>\n                    <pre lang=\"html\">\n      <![CDATA[\n        <!-- Determinate-->\n        <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\n\n        <!-- Indeterminate-->\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n\n        <!-- Buffer-->\n        <mat-progress-bar mode=\"buffer\" value=\"15\" bufferValue=\"15\"></mat-progress-bar>\n\n        <!-- Query-->\n        <mat-progress-bar mode=\"query\"></mat-progress-bar>\n\n        <!-- Colors-->\n        <mat-progress-bar mode=\"indeterminate\" color=\"primary\"></mat-progress-bar>\n\n        <mat-progress-bar mode=\"indeterminate\" color=\"accent\"></mat-progress-bar>\n\n        <mat-progress-bar mode=\"indeterminate\" color=\"warn\"></mat-progress-bar>\n      ]]>\n      </pre>\n                </div>\n                <div flex=\"48\">\n                    <!-- Progress circles-->\n                    <h3 class=\"md-title\">Progress Spinner</h3>\n                    <div layout=\"row\">\n                        <div>\n                            <h4>Determinate</h4>\n                            <mat-progress-spinner mode=\"determinate\" value=\"66\"></mat-progress-spinner>\n                        </div>\n                        <div>\n                            <h4>indeterminate</h4>\n                            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n                        </div>\n                        <div>\n                            <h4>Spinner</h4>\n                            <mat-spinner></mat-spinner>\n                        </div>\n                    </div>\n                    <div>\n                        <h4>Colors</h4>\n                        <div layout=\"row\">\n                            <mat-progress-spinner mode=\"indeterminate\" color=\"primary\"></mat-progress-spinner>\n                            <mat-progress-spinner mode=\"indeterminate\" color=\"accent\"></mat-progress-spinner>\n                            <mat-progress-spinner mode=\"indeterminate\" color=\"warn\"></mat-progress-spinner>\n                        </div>\n                    </div>\n                    <h3 class=\"md-title\">Usage</h3>\n                    <p>HTML:</p>\n                    <pre lang=\"html\">\n      <![CDATA[\n        <!-- Determinate -->\n        <mat-progress-spinner mode=\"determinate\" value=\"66\"></mat-progress-spinner>\n        <!-- Indeterminate -->\n        <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n        <!-- Spinner -->\n        <mat-spinner></mat-spinner>\n        <!-- Colors -->\n        <mat-progress-spinner mode=\"indeterminate\" color=\"primary\"></mat-progress-spinner>\n        <mat-progress-spinner mode=\"indeterminate\" color=\"accent\"></mat-progress-spinner>\n        <mat-progress-spinner mode=\"indeterminate\" color=\"warn\"></mat-progress-spinner>\n      ]]>\n      </pre>\n                </div>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"SideNav\">Side Nav <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"SideNav\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <p>The side nav can be opened at the `start` or `end` of a container and can be displayed in `over`,\n                    `side`, or `push` mode. You can also define its width.</p>\n                <button matTooltip=\"Open side nav\" mat-raised-button color=\"fds-primary\" (click)=\"sidenav.toggle()\">\n                    Open\n                </button>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n        <![CDATA[\n        <!-- Basic Usage -->\n        <mat-sidenav #sidenav mode=\"over\" align=\"end\" opened=\"false\">\n            ...\n        </mat-sidenav>\n        ]]>\n        </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"SlideToggle\">Slide Toggle <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"SlideToggle\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <h3 class=\"md-title\">Basic Usage</h3>\n                <mat-divider></mat-divider>\n                <mat-list>\n                    <mat-list-item *ngFor=\"let system of systems\">\n                        <mat-slide-toggle [color]=\"system.color\" [(ngModel)]=\"system.on\">\n                            {{system.name}}\n                        </mat-slide-toggle>\n                    </mat-list-item>\n                </mat-list>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n        <![CDATA[\n        <!-- Basic Usage -->\n        <mat-list>\n            <mat-list-item *ngFor=\"let system of systems\">\n              <mat-slide-toggle [color]=\"system.color\" [(ngModel)]=\"system.on\">\n                { {system.name} }\n              </mat-slide-toggle>\n            </mat-list-item>\n        </mat-list>\n        ]]>\n        </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n        <![CDATA[\n        this.systems = [{\n            name: 'Lights',\n            on: false,\n            color: 'primary',\n        }, {\n            name: 'Surround Sound',\n            on: true,\n            color: 'accent',\n        }, {\n            name: 'T.V.',\n            on: true,\n            color: 'warn',\n        }, ];\n            ]]>\n          </pre>\n                <h3 class=\"md-title\">Usage within Forms</h3>\n                <form>\n                    <mat-list>\n                        <mat-list-item>\n                            <mat-slide-toggle color=\"accent\" [(ngModel)]=\"house.lockHouse\" name=\"lockHouse\">\n                                Lock?\n                            </mat-slide-toggle>\n                            <mat-icon *ngIf=\"house.lockHouse\" class=\"pad-right-sm\">lock</mat-icon>\n                        </mat-list-item>\n                        <mat-list-item>\n                            <mat-slide-toggle disabled>\n                                I am disabled.\n                            </mat-slide-toggle>\n                        </mat-list-item>\n                    </mat-list>\n                </form>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n        <![CDATA[\n        <!-- Usage within Forms -->\n        <form>\n            <mat-list>\n                <mat-list-item>\n                    <mat-slide-toggle color=\"accent\" [(ngModel)]=\"house.lockHouse\" name=\"lockHouse\">\n                        Lock?\n                    </mat-slide-toggle>\n                    <mat-icon *ngIf=\"house.lockHouse\" class=\"pad-right-sm\">lock</mat-icon>\n                </mat-list-item>\n                <mat-list-item>\n                    <mat-slide-toggle disabled>\n                    I am disabled.\n                </mat-slide-toggle>\n                </mat-list-item>\n            </mat-list>\n        </form>\n        ]]>\n        </pre>\n                <p>Javascript:</p>\n                <pre lang=\"javascript\">\n        <![CDATA[\n        this.house = {\n            lockHouse: false,\n        };\n            ]]>\n          </pre>\n            </mat-card-content>\n        </mat-card>\n        <mat-card>\n            <mat-card-title class=\"pad-bottom-sm\" id=\"Slider\">Slider <mat-icon class=\"link-to-component\" routerLink=\"/\" fragment=\"Slider\">link</mat-icon></mat-card-title>\n            <mat-divider></mat-divider>\n            <mat-card-content>\n                <h3 class=\"md-title\">Horizontal Slider</h3>\n                <mat-slider min=\"1\" max=\"5\" thumbLabel tickInterval=\"1\" value=\"2\" color=\"primary\"></mat-slider>\n                <mat-slider step=\"5\" thumbLabel tickInterval=\"5\" value=\"20\" color=\"accent\"></mat-slider>\n                <mat-slider thumbLabel tick-interval=\"auto\" value=\"2\" color=\"warn\"></mat-slider>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <mat-slider min=\"1\" max=\"5\" thumbLabel tickInterval=\"1\" value=\"2\" color=\"primary\"></mat-slider>\n        <mat-slider step=\"5\" thumbLabel tickInterval=\"5\" value=\"20\" color=\"accent\"></mat-slider>\n        <mat-slider thumbLabel tick-interval=\"auto\" value=\"2\" color=\"warn\"></mat-slider>\n        ]]>\n      </pre>\n                <h3 class=\"md-title\">Vertical Slider</h3>\n                <mat-slider vertical min=\"1\" max=\"100\" thumbLabel tickInterval=\"10\" value=\"2\"></mat-slider>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <mat-slider vertical min=\"1\" max=\"100\" thumbLabel tickInterval=\"10\" value=\"2\"></mat-slider>\n        ]]>\n      </pre>\n                <h3 class=\"md-title\">Inverted Slider</h3>\n                <mat-slider invert min=\"1\" max=\"100\" thumbLabel tickInterval=\"10\" value=\"2\"></mat-slider>\n                <h3 class=\"md-title\">Usage</h3>\n                <p>HTML:</p>\n                <pre lang=\"html\">\n      <![CDATA[\n        <mat-slider invert min=\"1\" max=\"100\" thumbLabel tickInterval=\"10\" value=\"2\"></mat-slider>\n        ]]>\n      </pre>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</mat-sidenav-container>\n";

/***/ }),

/***/ "./webapp/components/flow-design-system/fds-demo.js":
/*!**********************************************************!*\
  !*** ./webapp/components/flow-design-system/fds-demo.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _covalent_core_data_table__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @covalent/core/data-table */ "./node_modules/@covalent/core/fesm5/covalent-core-data-table.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _nifi_fds_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @nifi-fds/core */ "./platform/core/index.js");
/* harmony import */ var webapp_services_fds_service_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! webapp/services/fds.service.js */ "./webapp/services/fds.service.js");
/* harmony import */ var webapp_components_flow_design_system_dialogs_demo_fds_demo_dialog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.js */ "./webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.js");
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the 'License'); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */







var NUMBER_FORMAT = function NUMBER_FORMAT(v) {
  return v;
};

var DECIMAL_FORMAT = function DECIMAL_FORMAT(v) {
  return v.toFixed(2);
};

var date = new Date();
/**
 * FdsDemo constructor.
 *
 * @param FdsSnackBarService    The FDS snack bar service module.
 * @param FdsService            The FDS service module.
 * @param dialog                The angular material dialog module.
 * @param TdDialogService       The covalent dialog service module.
 * @param TdDataTableService    The covalent data table service module.
 * @constructor
 */

function FdsDemo(FdsSnackBarService, FdsService, dialog, TdDataTableService, FdsDialogService) {
  this.fdsService = FdsService; //<editor-fold desc='Snack Bars'>

  this.snackBarService = FdsSnackBarService; //</editor-fold>
  //<editor-fold desc='Dialog'>

  this.dialog = dialog; //</editor-fold>
  //<editor-fold desc='Simple Dialogs'>

  this.dialogService = FdsDialogService; //</editor-fold>
  //<editor-fold desc='Expansion Panel'>

  this.expandCollapseExpansion1Msg = 'No expanded/collapsed detected yet';
  this.expansion1 = false;
  this.disabled = false; //</editor-fold>
  //<editor-fold desc='Autocomplete'>

  this.currentState = '';
  this.reactiveStates = '';
  this.tdStates = [];
  this.tdDisabled = false;
  this.states = [{
    code: 'AL',
    name: 'Alabama'
  }, {
    code: 'AK',
    name: 'Alaska'
  }, {
    code: 'AZ',
    name: 'Arizona'
  }, {
    code: 'AR',
    name: 'Arkansas'
  }, {
    code: 'CA',
    name: 'California'
  }, {
    code: 'CO',
    name: 'Colorado'
  }, {
    code: 'CT',
    name: 'Connecticut'
  }, {
    code: 'DE',
    name: 'Delaware'
  }, {
    code: 'FL',
    name: 'Florida'
  }, {
    code: 'GA',
    name: 'Georgia'
  }, {
    code: 'HI',
    name: 'Hawaii'
  }, {
    code: 'ID',
    name: 'Idaho'
  }, {
    code: 'IL',
    name: 'Illinois'
  }, {
    code: 'IN',
    name: 'Indiana'
  }, {
    code: 'IA',
    name: 'Iowa'
  }, {
    code: 'KS',
    name: 'Kansas'
  }, {
    code: 'KY',
    name: 'Kentucky'
  }, {
    code: 'LA',
    name: 'Louisiana'
  }, {
    code: 'ME',
    name: 'Maine'
  }, {
    code: 'MD',
    name: 'Maryland'
  }, {
    code: 'MA',
    name: 'Massachusetts'
  }, {
    code: 'MI',
    name: 'Michigan'
  }, {
    code: 'MN',
    name: 'Minnesota'
  }, {
    code: 'MS',
    name: 'Mississippi'
  }, {
    code: 'MO',
    name: 'Missouri'
  }, {
    code: 'MT',
    name: 'Montana'
  }, {
    code: 'NE',
    name: 'Nebraska'
  }, {
    code: 'NV',
    name: 'Nevada'
  }, {
    code: 'NH',
    name: 'New Hampshire'
  }, {
    code: 'NJ',
    name: 'New Jersey'
  }, {
    code: 'NM',
    name: 'New Mexico'
  }, {
    code: 'NY',
    name: 'New York'
  }, {
    code: 'NC',
    name: 'North Carolina'
  }, {
    code: 'ND',
    name: 'North Dakota'
  }, {
    code: 'OH',
    name: 'Ohio'
  }, {
    code: 'OK',
    name: 'Oklahoma'
  }, {
    code: 'OR',
    name: 'Oregon'
  }, {
    code: 'PA',
    name: 'Pennsylvania'
  }, {
    code: 'RI',
    name: 'Rhode Island'
  }, {
    code: 'SC',
    name: 'South Carolina'
  }, {
    code: 'SD',
    name: 'South Dakota'
  }, {
    code: 'TN',
    name: 'Tennessee'
  }, {
    code: 'TX',
    name: 'Texas'
  }, {
    code: 'UT',
    name: 'Utah'
  }, {
    code: 'VT',
    name: 'Vermont'
  }, {
    code: 'VA',
    name: 'Virginia'
  }, {
    code: 'WA',
    name: 'Washington'
  }, {
    code: 'WV',
    name: 'West Virginia'
  }, {
    code: 'WI',
    name: 'Wisconsin'
  }, {
    code: 'WY',
    name: 'Wyoming'
  }]; //</editor-fold>
  //<editor-fold desc='Searchable Expansion Panels'>

  this.dataTableService = TdDataTableService;
  this.droplets = [{
    id: '23f6cc59-0156-1000-09b4-2b0610089090',
    name: 'Decompression_Circular_Flow',
    displayName: 'Decompressed Circular flow',
    type: 'flow',
    sublabel: 'A sublabel',
    compliant: {
      id: '25fd6vv87-3549-0001-05g6-4d4567890765',
      label: 'Compliant',
      type: 'certification'
    },
    fleet: {
      id: '23f6cc59-3549-0001-05g6-4d4567890765',
      label: 'Fleet',
      type: 'certification'
    },
    prod: {
      id: '52fd6vv87-3549-0001-05g6-4d4567890765',
      label: 'Production Ready',
      type: 'certification'
    },
    secure: {
      id: '32f6cc59-3549-0001-05g6-4d4567890765',
      label: 'Secure',
      type: 'certification'
    },
    versions: [{
      id: '23f6cc59-0156-1000-06b4-2b0810089090',
      revision: '1',
      dependentFlows: [{
        id: '25fd6vv87-3549-0001-05g6-4d4567890765'
      }],
      created: date.setDate(date.getDate() - 1),
      updated: new Date()
    }, {
      id: '25fd6vv87-3549-0001-05g6-4d4567890765',
      revision: '2',
      dependentFlows: [{
        id: '23f6cc59-0156-1000-06b4-2b0810089090'
      }],
      created: new Date(),
      updated: new Date()
    }],
    flows: [],
    extensions: [],
    assets: [],
    actions: [{
      'name': 'Delete',
      'icon': 'fa fa-close',
      'tooltip': 'Delete User'
    }, {
      'name': 'Manage',
      'icon': 'fa fa-user',
      'tooltip': 'Manage User'
    }, {
      'name': 'Action 3',
      'icon': 'fa fa-question',
      'tooltip': 'Whatever else we want to do...'
    }]
  }, {
    id: '25fd6vv87-3249-0001-05g6-4d4767890765',
    name: 'DateConversion',
    displayName: 'Date conversion',
    type: 'asset',
    sublabel: 'A sublabel',
    compliant: {
      id: '25fd6vv34-3549-0001-05g6-4d4567890765',
      label: 'Compliant',
      type: 'certification'
    },
    prod: {
      id: '52vn6vv87-3549-0001-05g6-4d4567890765',
      label: 'Production Ready',
      type: 'certification'
    },
    versions: [{
      id: '23f6ic59-0156-1000-06b4-2b0810089090',
      revision: '1',
      dependentFlows: [{
        id: '23f6cc19-0156-1000-06b4-2b0810089090'
      }],
      created: new Date(),
      updated: new Date()
    }],
    flows: [],
    extensions: [],
    assets: [],
    actions: [{
      'name': 'Delete',
      'icon': 'fa fa-close',
      'tooltip': 'Delete User'
    }]
  }, {
    id: '52fd6vv87-3294-0001-05g6-4d4767890765',
    name: 'nifi-email-bundle',
    displayName: 'nifi-email-bundle',
    type: 'extension',
    sublabel: 'A sublabel',
    compliant: {
      id: '33fd6vv87-3549-0001-05g6-4d4567890765',
      label: 'Compliant',
      test: {
        label: 'test'
      },
      type: 'certification'
    },
    versions: [{
      id: '23d3cc59-0156-1000-06b4-2b0810089090',
      revision: '1',
      dependentFlows: [{
        id: '23f6cc89-0156-1000-06b4-2b0810089090'
      }],
      created: new Date(),
      updated: new Date()
    }],
    flows: [],
    extensions: [],
    assets: [],
    actions: [{
      'name': 'Delete',
      'icon': 'fa fa-close',
      'tooltip': 'Delete User'
    }, {
      'name': 'Manage',
      'icon': 'fa fa-user',
      'tooltip': 'Manage User'
    }]
  }];
  this.filteredDroplets = [];
  this.dropletColumns = [{
    name: 'id',
    label: 'ID',
    sortable: true
  }, {
    name: 'name',
    label: 'Name',
    sortable: true
  }, {
    name: 'displayName',
    label: 'Display Name',
    sortable: true
  }, {
    name: 'sublabel',
    label: 'Label',
    sortable: true
  }, {
    name: 'type',
    label: 'Type',
    sortable: true
  }];
  this.activeDropletColumn = this.dropletColumns[0];
  this.autoCompleteDroplets = [];
  this.dropletsSearchTerms = []; //</editor-fold>
  //<editor-fold desc='Data Tables'>

  this.data = [{
    'id': 1,
    'name': 'Frozen yogurt',
    'type': 'Ice cream',
    'calories': 159.0,
    'fat': 6.0,
    'carbs': 24.0,
    'protein': 4.0,
    'sodium': 87.0,
    'calcium': 14.0,
    'iron': 1.0,
    'comments': 'I love froyo!',
    'actions': [{
      'name': 'Action 1',
      'icon': 'fa fa-user',
      'tooltip': 'Manage Users'
    }, {
      'name': 'Action 2',
      'icon': 'fa fa-key',
      'tooltip': 'Manage Permissions'
    }]
  }, {
    'id': 2,
    'name': 'Ice cream sandwich',
    'type': 'Ice cream',
    'calories': 237.0,
    'fat': 9.0,
    'carbs': 37.0,
    'protein': 4.3,
    'sodium': 129.0,
    'calcium': 8.0,
    'iron': 1.0,
    'actions': [{
      'name': 'Action 1',
      'icon': 'fa fa-user',
      'tooltip': 'Manage Users'
    }, {
      'name': 'Action 2',
      'icon': 'fa fa-key',
      'tooltip': 'Manage Permissions'
    }, {
      'name': 'Action 3',
      'tooltip': 'Action 3'
    }, {
      'name': 'Action 4',
      'disabled': true,
      'tooltip': 'Action 4'
    }, {
      'name': 'Action 5',
      'tooltip': 'Action 5'
    }]
  }, {
    'id': 3,
    'name': 'Eclair',
    'type': 'Pastry',
    'calories': 262.0,
    'fat': 16.0,
    'carbs': 24.0,
    'protein': 6.0,
    'sodium': 337.0,
    'calcium': 6.0,
    'iron': 7.0,
    'actions': [{
      'name': 'Action 1',
      'icon': 'fa fa-user',
      'tooltip': 'Manage Users'
    }, {
      'name': 'Action 2',
      'icon': 'fa fa-key',
      'tooltip': 'Manage Permissions'
    }, {
      'name': 'Action 3',
      'tooltip': 'Action 3'
    }, {
      'name': 'Action 4',
      'disabled': true,
      'tooltip': 'Action 4'
    }, {
      'name': 'Action 5',
      'tooltip': 'Action 5'
    }]
  }, {
    'id': 4,
    'name': 'Cupcake',
    'type': 'Pastry',
    'calories': 305.0,
    'fat': 3.7,
    'carbs': 67.0,
    'protein': 4.3,
    'sodium': 413.0,
    'calcium': 3.0,
    'iron': 8.0,
    'actions': [{
      'name': 'Action 1',
      'icon': 'fa fa-user',
      'tooltip': 'Manage Users'
    }, {
      'name': 'Action 2',
      'icon': 'fa fa-key',
      'tooltip': 'Manage Permissions'
    }, {
      'name': 'Action 3',
      'tooltip': 'Action 3'
    }, {
      'name': 'Action 4',
      'disabled': true,
      'tooltip': 'Action 4'
    }, {
      'name': 'Action 5',
      'tooltip': 'Action 5'
    }]
  }, {
    'id': 5,
    'name': 'Jelly bean',
    'type': 'Candy',
    'calories': 375.0,
    'fat': 0.0,
    'carbs': 94.0,
    'protein': 0.0,
    'sodium': 50.0,
    'calcium': 0.0,
    'iron': 0.0
  }, {
    'id': 6,
    'name': 'Lollipop',
    'type': 'Candy',
    'calories': 392.0,
    'fat': 0.2,
    'carbs': 98.0,
    'protein': 0.0,
    'sodium': 38.0,
    'calcium': 0.0,
    'iron': 2.0
  }, {
    'id': 7,
    'name': 'Honeycomb',
    'type': 'Other',
    'calories': 408.0,
    'fat': 3.2,
    'carbs': 87.0,
    'protein': 6.5,
    'sodium': 562.0,
    'calcium': 0.0,
    'iron': 45.0
  }, {
    'id': 8,
    'name': 'Donut',
    'type': 'Pastry',
    'calories': 452.0,
    'fat': 25.0,
    'carbs': 51.0,
    'protein': 4.9,
    'sodium': 326.0,
    'calcium': 2.0,
    'iron': 22.0
  }, {
    'id': 9,
    'name': 'KitKat',
    'type': 'Candy',
    'calories': 518.0,
    'fat': 26.0,
    'carbs': 65.0,
    'protein': 7.0,
    'sodium': 54.0,
    'calcium': 12.0,
    'iron': 6.0
  }, {
    'id': 10,
    'name': 'Chocolate',
    'type': 'Candy',
    'calories': 518.0,
    'fat': 26.0,
    'carbs': 65.0,
    'protein': 7.0,
    'sodium': 54.0,
    'calcium': 12.0,
    'iron': 6.0
  }, {
    'id': 11,
    'name': 'Chamoy',
    'type': 'Candy',
    'calories': 518.0,
    'fat': 26.0,
    'carbs': 65.0,
    'protein': 7.0,
    'sodium': 54.0,
    'calcium': 12.0,
    'iron': 6.0
  }];
  this.filteredData = this.data;
  this.filteredTotal = this.data.length;
  this.columns = [{
    name: 'comments',
    label: 'Comments',
    width: 10
  }, {
    name: 'name',
    label: 'Dessert (100g serving)',
    sortable: true,
    width: 10
  }, {
    name: 'type',
    label: 'Type',
    sortable: true,
    width: 10
  }, {
    name: 'calories',
    label: 'Calories',
    numeric: true,
    format: NUMBER_FORMAT,
    sortable: true,
    width: 10
  }, {
    name: 'fat',
    label: 'Fat (g)',
    numeric: true,
    format: DECIMAL_FORMAT,
    sortable: true,
    width: 10
  }, {
    name: 'carbs',
    label: 'Carbs (g)',
    numeric: true,
    format: NUMBER_FORMAT,
    sortable: true,
    width: 10
  }, {
    name: 'protein',
    label: 'Protein (g)',
    numeric: true,
    format: DECIMAL_FORMAT,
    sortable: true,
    width: 10
  }, {
    name: 'sodium',
    label: 'Sodium (mg)',
    numeric: true,
    format: NUMBER_FORMAT,
    sortable: true,
    width: 10
  }, {
    name: 'calcium',
    label: 'Calcium (%)',
    numeric: true,
    format: NUMBER_FORMAT,
    sortable: true,
    width: 10
  }, {
    name: 'iron',
    label: 'Iron (%)',
    numeric: true,
    format: NUMBER_FORMAT,
    width: 10
  }];
  this.allRowsSelected = false;
  this.autoCompleteData = [];
  this.selectedRows = [];
  this.searchTerm = [];
  this.fromRow = 1;
  this.currentPage = 1;
  this.pageSize = 5;
  this.pageCount = 0; //</editor-fold>
  //<editor-fold desc='Chips $ Autocomplete'>

  this.readOnly = false;
  this.items = ['stepper', 'expansion-panel', 'markdown', 'highlight', 'loading', 'media', 'chips', 'http', 'json-formatter', 'pipes', 'need more?'];
  this.itemsRequireMatch = this.items.slice(0, 6); //</editor-fold>
  //<editor-fold desc='Radios'>

  this.favoriteSeason = 'Autumn';
  this.seasonOptions = ['Winter', 'Spring', 'Summer', 'Autumn']; //</editor-fold>
  //<editor-fold desc='Select'>

  this.selectedValue = '';
  this.foods = [{
    value: 'steak-0',
    viewValue: 'Steak'
  }, {
    value: 'pizza-1',
    viewValue: 'Pizza'
  }, {
    value: 'tacos-2',
    viewValue: 'Tacos'
  }]; //</editor-fold>
  //<editor-fold desc='Checkbox'>

  this.user = {
    agreesToTOS: false
  };
  this.groceries = [{
    bought: true,
    name: 'Seitan'
  }, {
    bought: false,
    name: 'Almond Meal Flour'
  }, {
    bought: false,
    name: 'Organic Eggs'
  }]; //</editor-fold>
  //<editor-fold desc='Slide Toggle'>

  this.systems = [{
    name: 'Lights',
    on: false,
    color: 'primary'
  }, {
    name: 'Surround Sound',
    on: true,
    color: 'accent'
  }, {
    name: 'T.V.',
    on: true,
    color: 'warn'
  }];
  this.house = {
    lockHouse: false
  }; //</editor-fold>
}

FdsDemo.prototype = {
  constructor: FdsDemo,
  //<editor-fold desc='Autocomplete'>
  displayFn: function displayFn(value) {
    return value && _typeof(value) === 'object' ? value.name : value;
  },
  filterStates: function filterStates(val) {
    return val ? this.states.filter(function (s) {
      return s.name.match(new RegExp(val, 'gi'));
    }) : this.states;
  },
  //</editor-fold>
  //<editor-fold desc='Snack Bars'>
  showSuccessSnackBar: function showSuccessSnackBar() {
    this.snackBarService.openCoaster({
      title: 'Success',
      message: 'Some help text regarding the successful event.',
      verticalPosition: 'top',
      horizontalPosition: 'right',
      icon: 'fa fa-check-circle-o',
      color: '#1EB475',
      duration: 3000
    });
  },
  showWarnSnackBar: function showWarnSnackBar() {
    this.snackBarService.openCoaster({
      title: 'Warning',
      message: 'Some help text regarding the warning.',
      verticalPosition: 'top',
      horizontalPosition: 'left',
      icon: 'fa fa-exclamation-triangle',
      color: '#E98A40',
      duration: 3000
    });
  },
  showErrorSnackBar: function showErrorSnackBar() {
    this.snackBarService.openCoaster({
      title: 'Error',
      message: 'Some help text regarding the critical error. This coaster will stay open until closed with the `x` or if another coaster is created.',
      verticalPosition: 'bottom',
      horizontalPosition: 'right',
      icon: 'fa fa-times-circle-o',
      color: '#EF6162'
    });
  },
  showRegularSnackBar: function showRegularSnackBar() {
    this.snackBarService.openCoaster({
      title: 'Regular',
      message: 'Something interesting.',
      verticalPosition: 'bottom',
      horizontalPosition: 'left',
      color: '#808793',
      duration: 3000
    });
  },
  //</editor-fold>
  //<editor-fold desc='Dialog'>
  openDialog: function openDialog() {
    this.dialog.open(webapp_components_flow_design_system_dialogs_demo_fds_demo_dialog_js__WEBPACK_IMPORTED_MODULE_5__["default"]);
  },
  //</editor-fold>
  //<editor-fold desc='Expansion Panel'>
  toggleExpansion1: function toggleExpansion1() {
    if (!this.disabled) {
      this.expansion1 = !this.expansion1;
    }
  },
  toggleDisabled: function toggleDisabled() {
    this.disabled = !this.disabled;
  },
  expandExpansion1Event: function expandExpansion1Event() {
    this.expandCollapseExpansion1Msg = 'Expand event emitted.';
  },
  collapseExpansion1Event: function collapseExpansion1Event() {
    this.expandCollapseExpansion1Msg = 'Collapse event emitted.';
  },
  //</editor-fold>
  //<editor-fold desc='Simple Dialogs'>
  openAlert: function openAlert() {
    this.dialogService.openAlert({
      title: 'Alert',
      disableClose: true,
      message: 'This is how simple it is to create an alert with this wrapper service.'
    });
  },
  openConfirm: function openConfirm() {
    this.dialogService.openConfirm({
      title: 'Confirm',
      message: 'This is how simple it is to create a confirm with this wrapper service. Do you agree?',
      cancelButton: 'Disagree',
      acceptButton: 'Agree'
    });
  },
  openPrompt: function openPrompt() {
    this.dialogService.openPrompt({
      title: 'Prompt',
      message: 'This is how simple it is to create a prompt with this wrapper service. Prompt something.',
      value: 'Populated value',
      cancelButton: 'Cancel',
      acceptButton: 'Ok'
    });
  },
  //</editor-fold>
  //<editor-fold desc='Searchable Expansion Panels'>
  isDropletFilterChecked: function isDropletFilterChecked(term) {
    return this.dropletsSearchTerms.indexOf(term) > -1;
  },
  getDropletTypeCount: function getDropletTypeCount(type) {
    return this.filteredDroplets.filter(function (droplet) {
      return droplet.type === type;
    }).length;
  },
  getDropletCertificationCount: function getDropletCertificationCount(certification) {
    return this.filteredDroplets.filter(function (droplet) {
      return Object.keys(droplet).find(function (key) {
        if (key === certification && droplet[certification].type === 'certification') {
          return droplet;
        }

        return null;
      });
    }).length;
  },
  getSortBy: function getSortBy() {
    var sortByColumnLabel;
    var arrayLength = this.dropletColumns.length;

    for (var i = 0; i < arrayLength; i++) {
      if (this.dropletColumns[i].active === true) {
        sortByColumnLabel = this.dropletColumns[i].label;
        break;
      }
    }

    return sortByColumnLabel;
  },
  sortDroplets: function sortDroplets(column) {
    if (column.sortable === true) {
      // toggle column sort order
      column.sortOrder = column.sortOrder === 'ASC' ? 'DESC' : 'ASC';
      var sortOrder = column.sortOrder;
      this.filterDroplets(column.name, sortOrder); //only one column can be actively sorted so we reset all to inactive

      this.dropletColumns.forEach(function (c) {
        c.active = false;
      }); //and set this column as the actively sorted column

      column.active = true;
      this.activeDropletColumn = column;
    }
  },
  toggleDropletsFilter: function toggleDropletsFilter(searchTerm) {
    var applySearchTerm = true; // check if the search term is already applied and remove it if true

    if (this.dropletsSearchTerms.length > 0) {
      var arrayLength = this.dropletsSearchTerms.length;

      for (var i = 0; i < arrayLength; i++) {
        var index = this.dropletsSearchTerms.indexOf(searchTerm);

        if (index > -1) {
          this.dropletsSearchTerms.splice(index, 1);
          applySearchTerm = false;
        }
      }
    } // if we just removed the search term do NOT apply it again


    if (applySearchTerm) {
      this.dropletsSearchTerms.push(searchTerm);
    }

    this.filterDroplets(this.activeDropletColumn.name, this.activeDropletColumn.sortOrder);
  },
  filterDroplets: function filterDroplets(sortBy, sortOrder) {
    // if `sortOrder` is `undefined` then use 'ASC'
    if (sortOrder === undefined) {
      sortOrder = 'ASC';
    } // if `sortBy` is `undefined` then find the first sortable column in this.dropletColumns


    if (sortBy === undefined) {
      var arrayLength = this.dropletColumns.length;

      for (var i = 0; i < arrayLength; i++) {
        if (this.dropletColumns[i].sortable === true) {
          sortBy = this.dropletColumns[i].name;
          this.activeDropletColumn = this.dropletColumns[i]; //only one column can be actively sorted so we reset all to inactive

          this.dropletColumns.forEach(function (c) {
            c.active = false;
          }); //and set this column as the actively sorted column

          this.dropletColumns[i].active = true;
          this.dropletColumns[i].sortOrder = sortOrder;
          break;
        }
      }
    }

    var newData = this.droplets;

    for (var _i = 0; _i < this.dropletsSearchTerms.length; _i++) {
      newData = this.filterData(newData, this.dropletsSearchTerms[_i], true, this.activeDropletColumn.name);
    }

    newData = this.dataTableService.sortData(newData, sortBy, sortOrder);
    this.filteredDroplets = newData;
    this.getAutoCompleteDroplets();
  },
  getAutoCompleteDroplets: function getAutoCompleteDroplets() {
    var self = this;
    this.autoCompleteDroplets = [];
    this.dropletColumns.forEach(function (c) {
      self.filteredDroplets.forEach(function (r) {
        return r[c.name.toLowerCase()] ? self.autoCompleteDroplets.push(r[c.name.toLowerCase()].toString()) : '';
      });
    });
  },
  //</editor-fold>
  filterData: function filterData(data, searchTerm, ignoreCase) {
    var field = '';

    if (searchTerm.indexOf(':') > -1) {
      field = searchTerm.split(':')[0].trim();
      searchTerm = searchTerm.split(':')[1].trim();
    }

    var filter = searchTerm ? ignoreCase ? searchTerm.toLowerCase() : searchTerm : '';

    if (filter) {
      data = data.filter(function (item) {
        var res = Object.keys(item).find(function (key) {
          if (field.indexOf('.') > -1) {
            var objArray = field.split('.');
            var obj = item;
            var arrayLength = objArray.length;

            for (var i = 0; i < arrayLength; i++) {
              try {
                obj = obj[objArray[i]];
              } catch (e) {
                return false;
              }
            }

            var _preItemValue = '' + obj;

            var _itemValue = ignoreCase ? _preItemValue.toLowerCase() : _preItemValue;

            return _itemValue.indexOf(filter) > -1;
          }

          if (key !== field && field !== '') {
            return false;
          }

          var preItemValue = '' + item[key];
          var itemValue = ignoreCase ? preItemValue.toLowerCase() : preItemValue;
          return itemValue.indexOf(filter) > -1;
        });
        return !(typeof res === 'undefined');
      });
    }

    return data;
  },
  //<editor-fold desc='Data Tables'>
  sort: function sort(sortEvent, column) {
    if (column.sortable) {
      var sortBy = column.name;
      column.sortOrder = column.sortOrder === 'ASC' ? 'DESC' : 'ASC';
      var sortOrder = column.sortOrder;
      this.filter(sortBy, sortOrder); //only one column can be actively sorted so we reset all to inactive

      this.columns.forEach(function (c) {
        c.active = false;
      }); //and set this column as the actively sorted column

      column.active = true;
    }
  },
  searchRemove: function searchRemove(searchTerm) {
    //only remove the first occurrence of the search term
    var index = this.searchTerm.indexOf(searchTerm);

    if (index !== -1) {
      this.searchTerm.splice(index, 1);
    }

    this.fromRow = 1;
    this.currentPage = 1;
    this.filter();
  },
  searchAdd: function searchAdd(searchTerm) {
    this.searchTerm.push(searchTerm);
    this.fromRow = 1;
    this.currentPage = 1;
    this.filter();
  },
  page: function page(pagingEvent) {
    this.fromRow = pagingEvent.fromRow;
    this.currentPage = pagingEvent.page;
    this.pageSize = pagingEvent.pageSize;
    this.allRowsSelected = false;
    this.filter();
  },
  filter: function filter(sortBy, sortOrder) {
    if (this.allRowsSelected) {
      this.toggleSelectAll();
    }

    this.deselectAll();
    var newData = this.data;

    for (var i = 0; i < this.searchTerm.length; i++) {
      newData = this.filterData(newData, this.searchTerm[i], true);
    }

    this.filteredTotal = newData.length;
    newData = this.dataTableService.sortData(newData, sortBy, sortOrder);
    this.pageCount = newData.length;
    newData = this.dataTableService.pageData(newData, this.fromRow, this.currentPage * this.pageSize);
    this.filteredData = newData;
    this.getAutoCompleteData();
  },
  toggleSelect: function toggleSelect(row) {
    if (this.allFilteredRowsSelected()) {
      this.allRowsSelected = true;
    } else {
      this.allRowsSelected = false;
    }
  },
  toggleSelectAll: function toggleSelectAll() {
    if (this.allRowsSelected) {
      this.selectAll();
    } else {
      this.deselectAll();
    }
  },
  selectAll: function selectAll() {
    this.filteredData.forEach(function (c) {
      c.checked = true;
    });
  },
  deselectAll: function deselectAll() {
    this.filteredData.forEach(function (c) {
      c.checked = false;
    });
  },
  allFilteredRowsSelected: function allFilteredRowsSelected() {
    var allFilteredRowsSelected = true;
    this.filteredData.forEach(function (c) {
      if (c.checked === undefined || c.checked === false) {
        allFilteredRowsSelected = false;
      }
    });
    return allFilteredRowsSelected;
  },
  areTooltipsOn: function areTooltipsOn() {
    return this.columns[0].hasOwnProperty('tooltip');
  },
  toggleTooltips: function toggleTooltips() {
    if (this.columns[0].tooltip) {
      this.columns.forEach(function (c) {
        delete c.tooltip;
      });
    } else {
      this.columns.forEach(function (c) {
        c.tooltip = 'This is ' + c.label + '!';
      });
    }
  },
  openDataTablePrompt: function openDataTablePrompt(row, name) {
    this.dialogService.openPrompt({
      message: 'Enter comment?',
      value: row[name]
    }).afterClosed().subscribe(function (value) {
      if (value !== undefined) {
        row[name] = value;
      }
    });
  },
  getAutoCompleteData: function getAutoCompleteData() {
    var self = this;
    this.autoCompleteData = [];
    this.columns.forEach(function (c) {
      self.filteredData.forEach(function (r) {
        return r[c.name.toLowerCase()] ? self.autoCompleteData.push(r[c.name.toLowerCase()].toString()) : '';
      });
    });
  },
  //</editor-fold>
  //<editor-fold desc='Chips $ Autocomplete'>
  toggleReadOnly: function toggleReadOnly() {
    this.readOnly = !this.readOnly;
  },
  //</editor-fold>
  //<editor-fold desc='Life Cycle Listeners'>

  /**
   * Initialize the component
   */
  ngOnInit: function ngOnInit() {
    this.filter();
    this.filterDroplets();
  },

  /**
   * Respond after Angular checks the component's views and child views
   */
  ngAfterViewChecked: function ngAfterViewChecked() {
    this.fdsService.inProgress = false;
  } //</editor-fold>

};
FdsDemo.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"]({
  template: __webpack_require__(/*! ./fds-demo.html */ "./webapp/components/flow-design-system/fds-demo.html"),
  animations: [_nifi_fds_core__WEBPACK_IMPORTED_MODULE_3__["FdsAnimations"].slideInLeftAnimation],
  host: {
    '[@routeAnimation]': 'routeAnimation'
  }
})];
FdsDemo.parameters = [_nifi_fds_core__WEBPACK_IMPORTED_MODULE_3__["FdsSnackBarService"], webapp_services_fds_service_js__WEBPACK_IMPORTED_MODULE_4__["default"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], _covalent_core_data_table__WEBPACK_IMPORTED_MODULE_1__["TdDataTableService"], _nifi_fds_core__WEBPACK_IMPORTED_MODULE_3__["FdsDialogService"]];
/* harmony default export */ __webpack_exports__["default"] = (FdsDemo);

/***/ }),

/***/ "./webapp/fds-bootstrap.js":
/*!*********************************!*\
  !*** ./webapp/fds-bootstrap.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js */ "./node_modules/core-js/index.js");
/* harmony import */ var core_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var zone_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zone.js */ "./node_modules/zone.js/dist/zone.js");
/* harmony import */ var zone_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(zone_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var webapp_fds_module_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! webapp/fds.module.js */ "./webapp/fds.module.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */






 // Comment out this line when developing to assert for unidirectional data flow

Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["enableProdMode"])(); // Get the locale id from the global

var locale = navigator.language;
var providers = []; // No locale or U.S. English: no translation providers so go ahead and bootstrap the app

if (!locale || locale === 'en-US') {
  Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_4__["platformBrowserDynamic"])().bootstrapModule(webapp_fds_module_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
    providers: providers
  });
} else {
  //load the translation providers and bootstrap the module
  var translationFile = '/locale/messages.' + locale + '.xlf';
  jquery__WEBPACK_IMPORTED_MODULE_3___default.a.ajax({
    url: translationFile
  }).done(function (translations) {
    // add providers if translation file for locale is loaded
    if (translations) {
      providers.push({
        provide: _angular_core__WEBPACK_IMPORTED_MODULE_5__["TRANSLATIONS"],
        useValue: translations
      });
      providers.push({
        provide: _angular_core__WEBPACK_IMPORTED_MODULE_5__["TRANSLATIONS_FORMAT"],
        useValue: 'xlf'
      });
      providers.push({
        provide: _angular_core__WEBPACK_IMPORTED_MODULE_5__["LOCALE_ID"],
        useValue: locale
      });
    }

    Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_4__["platformBrowserDynamic"])().bootstrapModule(webapp_fds_module_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
      providers: providers
    });
  }).fail(function () {
    Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_4__["platformBrowserDynamic"])().bootstrapModule(webapp_fds_module_js__WEBPACK_IMPORTED_MODULE_6__["default"], {
      providers: providers
    });
  });
}

/***/ }),

/***/ "./webapp/fds.html":
/*!*************************!*\
  !*** ./webapp/fds.html ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n-->\n\n<mat-progress-spinner id=\"loading-spinner\" *ngIf=\"fdsService.inProgress\" mode=\"indeterminate\"></mat-progress-spinner>\n<mat-sidenav-container>\n    <mat-sidenav #sidenav mode=\"over\" align=\"end\" opened=\"false\" disableClose=\"true\">\n        <router-outlet name=\"sidenav\"></router-outlet>\n    </mat-sidenav>\n    <div id=\"fds-app-container\">\n        <mat-toolbar id=\"fds-toolbar\">\n            <!-- <img id=\"fds-logo\" src=\"fds/images/fds-logo-web-app.svg\"> -->\n            <div *ngIf=\"fdsService.perspective !== 'login' && fdsService.perspective !== 'not-found'\" fxFlex=\"1 1 auto\" class=\"pad-left-xl\" [@flyInOut]=\"fdsService.breadCrumbState\">\n                <span class=\"pointer\">{{fdsService.title}}</span>\n            </div>\n        </mat-toolbar>\n        <div id=\"fds-perspectives-container\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</mat-sidenav-container>\n";

/***/ }),

/***/ "./webapp/fds.js":
/*!***********************!*\
  !*** ./webapp/fds.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var webapp_services_fds_service_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! webapp/services/fds.service.js */ "./webapp/services/fds.service.js");
/* harmony import */ var _nifi_fds_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nifi-fds/core */ "./platform/core/index.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * Fds constructor.
 *
 * @param fdsService            The fds service.
 * @param changeDetectorRef     The change detector ref.
 * @constructor
 */

function Fds(fdsService, changeDetectorRef) {
  this.fdsService = fdsService;
  this.cd = changeDetectorRef;
}

Fds.prototype = {
  constructor: Fds,

  /**
   * Initialize the component
   */
  ngOnInit: function ngOnInit() {
    this.fdsService.sidenav = this.sidenav; //ngCore.ViewChild
  },

  /**
   * Since the child views are updating the fdsService values that are used to display
   * the breadcrumbs in this component's view we need to manually detect changes at the correct
   * point in the lifecycle.
   */
  ngAfterViewChecked: function ngAfterViewChecked() {
    this.cd.detectChanges();
  }
};
Fds.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"]({
  selector: 'fds-app',
  template: __webpack_require__(/*! ./fds.html */ "./webapp/fds.html"),
  queries: {
    sidenav: new _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"]('sidenav')
  },
  animations: [_nifi_fds_core__WEBPACK_IMPORTED_MODULE_2__["FdsAnimations"].flyInOutAnimation]
})];
Fds.parameters = [webapp_services_fds_service_js__WEBPACK_IMPORTED_MODULE_1__["default"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]];
/* harmony default export */ __webpack_exports__["default"] = (Fds);

/***/ }),

/***/ "./webapp/fds.module.js":
/*!******************************!*\
  !*** ./webapp/fds.module.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _nifi_fds_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @nifi-fds/core */ "./platform/core/index.js");
/* harmony import */ var webapp_fds_routes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! webapp/fds.routes.js */ "./webapp/fds.routes.js");
/* harmony import */ var webapp_fds_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! webapp/fds.js */ "./webapp/fds.js");
/* harmony import */ var webapp_components_flow_design_system_fds_demo_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! webapp/components/flow-design-system/fds-demo.js */ "./webapp/components/flow-design-system/fds-demo.js");
/* harmony import */ var webapp_components_flow_design_system_dialogs_demo_fds_demo_dialog_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.js */ "./webapp/components/flow-design-system/dialogs/demo/fds-demo-dialog.js");
/* harmony import */ var webapp_services_fds_service_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! webapp/services/fds.service.js */ "./webapp/services/fds.service.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */








function FdsModule() {}

FdsModule.prototype = {
  constructor: FdsModule
};
FdsModule.annotations = [new _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"]({
  imports: [_nifi_fds_core__WEBPACK_IMPORTED_MODULE_1__["FdsCoreModule"], webapp_fds_routes_js__WEBPACK_IMPORTED_MODULE_2__["default"]],
  declarations: [webapp_fds_js__WEBPACK_IMPORTED_MODULE_3__["default"], webapp_components_flow_design_system_fds_demo_js__WEBPACK_IMPORTED_MODULE_4__["default"], webapp_components_flow_design_system_dialogs_demo_fds_demo_dialog_js__WEBPACK_IMPORTED_MODULE_5__["default"]],
  entryComponents: [webapp_components_flow_design_system_dialogs_demo_fds_demo_dialog_js__WEBPACK_IMPORTED_MODULE_5__["default"]],
  providers: [webapp_services_fds_service_js__WEBPACK_IMPORTED_MODULE_6__["default"]],
  bootstrap: [webapp_fds_js__WEBPACK_IMPORTED_MODULE_3__["default"]]
})];
/* harmony default export */ __webpack_exports__["default"] = (FdsModule);

/***/ }),

/***/ "./webapp/fds.routes.js":
/*!******************************!*\
  !*** ./webapp/fds.routes.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var webapp_components_flow_design_system_fds_demo_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! webapp/components/flow-design-system/fds-demo.js */ "./webapp/components/flow-design-system/fds-demo.js");
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var FdsRoutes = _angular_router__WEBPACK_IMPORTED_MODULE_0__["RouterModule"].forRoot([{
  path: '',
  component: webapp_components_flow_design_system_fds_demo_js__WEBPACK_IMPORTED_MODULE_1__["default"]
}]);
/* harmony default export */ __webpack_exports__["default"] = (FdsRoutes);

/***/ }),

/***/ "./webapp/services/fds.service.js":
/*!****************************************!*\
  !*** ./webapp/services/fds.service.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _covalent_core_data_table__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @covalent/core/data-table */ "./node_modules/@covalent/core/fesm5/covalent-core-data-table.js");
/* harmony import */ var _nifi_fds_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @nifi-fds/core */ "./platform/core/index.js");
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../package.json */ "./package.json");
var _package_json__WEBPACK_IMPORTED_MODULE_2___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../package.json */ "./package.json", 1);
/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the 'License'); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
 * FdsService constructor.
 *
 * @param tdDataTableService    The covalent data table service module.
 * @param fdsDialogService      The FDS dialog service.
 * @param fdsSnackBarService    The FDS snack bar service module.
 * @constructor
 */

function FdsService(tdDataTableService, fdsDialogService, fdsSnackBarService) {
  // Services
  this.dialogService = fdsDialogService;
  this.snackBarService = fdsSnackBarService;
  this.dataTableService = tdDataTableService; // General

  this.title = 'Apache NiFi Flow Design System Demo v' + _package_json__WEBPACK_IMPORTED_MODULE_2__["version"];
  this.inProgress = true;
  this.perspective = '';
}

FdsService.prototype = {
  constructor: FdsService
};
FdsService.parameters = [_covalent_core_data_table__WEBPACK_IMPORTED_MODULE_0__["TdDataTableService"], _nifi_fds_core__WEBPACK_IMPORTED_MODULE_1__["FdsDialogService"], _nifi_fds_core__WEBPACK_IMPORTED_MODULE_1__["FdsSnackBarService"]];
/* harmony default export */ __webpack_exports__["default"] = (FdsService);

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,